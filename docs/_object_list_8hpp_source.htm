<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: include/NovelTea/ObjectList.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_object_list_8hpp_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ObjectList.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_object_list_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef NOVELTEA_OBJECTLIST_HPP</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define NOVELTEA_OBJECTLIST_HPP</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_context_object_8hpp.htm">NovelTea/ContextObject.hpp</a>&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_utils_8hpp.htm">NovelTea/Utils.hpp</a>&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_game_8hpp.htm">NovelTea/Game.hpp</a>&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_novel_tea.htm">NovelTea</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">class </span><a class="code" href="namespace_novel_tea_1_1_i_d.htm#ae84772a4a70538c9896020483e03ffd1">Object</a>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_object_item.htm">   16</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_novel_tea_1_1_object_item.htm">ObjectItem</a> {</div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_object_item.htm#a5ddceb141e32b0c241cd81ee60c436d6">   17</a></span>&#160;    <a class="code" href="struct_novel_tea_1_1_object_item.htm#a5ddceb141e32b0c241cd81ee60c436d6">ObjectItem</a>(std::shared_ptr&lt;Object&gt; <span class="keywordtype">object</span>, <span class="keywordtype">int</span> <a class="code" href="struct_novel_tea_1_1_object_item.htm#ab103a007e1ef5c93187c05209d72ba57">count</a> = 1)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        :<a class="code" href="struct_novel_tea_1_1_object_item.htm#a15bee299595a9ad5e4621ddaa2d6dacf">object</a>(<a class="code" href="struct_novel_tea_1_1_object_item.htm#a15bee299595a9ad5e4621ddaa2d6dacf">object</a>), <a class="code" href="struct_novel_tea_1_1_object_item.htm#ab103a007e1ef5c93187c05209d72ba57">count</a>(<a class="code" href="struct_novel_tea_1_1_object_item.htm#ab103a007e1ef5c93187c05209d72ba57">count</a>)</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    {}</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_object_item.htm#a15bee299595a9ad5e4621ddaa2d6dacf">   20</a></span>&#160;    std::shared_ptr&lt;Object&gt; <a class="code" href="struct_novel_tea_1_1_object_item.htm#a15bee299595a9ad5e4621ddaa2d6dacf">object</a>;</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_object_item.htm#ab103a007e1ef5c93187c05209d72ba57">   21</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="struct_novel_tea_1_1_object_item.htm#ab103a007e1ef5c93187c05209d72ba57">count</a> = 1;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;};</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm">   24</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_novel_tea_1_1_object_list.htm">ObjectList</a> : <span class="keyword">public</span> <a class="code" href="class_novel_tea_1_1_context_object.htm">ContextObject</a></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#aa14c04137f7db1b389b1f97a0479b9a4">   27</a></span>&#160;    <a class="code" href="class_novel_tea_1_1_object_list.htm#aa14c04137f7db1b389b1f97a0479b9a4">ObjectList</a>(<a class="code" href="class_novel_tea_1_1_context.htm">Context</a>* context);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a72fa570a47fdde713b2a8dfd2f93d6b5">   29</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a72fa570a47fdde713b2a8dfd2f93d6b5">add</a>(std::shared_ptr&lt;Object&gt; <span class="keywordtype">object</span>);</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a65aded45b52477d773babfcdf1f84682">   30</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a65aded45b52477d773babfcdf1f84682">addCount</a>(std::shared_ptr&lt;Object&gt; <span class="keywordtype">object</span>, <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>);</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a2b17c852aa1a0f24d470385e253b70c5">   31</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a2b17c852aa1a0f24d470385e253b70c5">addId</a>(<span class="keyword">const</span> std::string &amp;objectId);</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#af83688b19b19b5c994b32d6caf747d96">   32</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#af83688b19b19b5c994b32d6caf747d96">addIdCount</a>(<span class="keyword">const</span> std::string &amp;objectId, <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#ae955b1c3a5f675e2d2af2716eead1b67">   34</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#ae955b1c3a5f675e2d2af2716eead1b67">remove</a>(std::shared_ptr&lt;Object&gt; <span class="keywordtype">object</span>);</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#aa6d9254dd4a3345b1a5f55f936659db1">   35</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#aa6d9254dd4a3345b1a5f55f936659db1">removeCount</a>(std::shared_ptr&lt;Object&gt; <span class="keywordtype">object</span>, <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>);</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#ab1cd0b0ff6b3ddc58e10e82e824592bf">   36</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#ab1cd0b0ff6b3ddc58e10e82e824592bf">removeId</a>(<span class="keyword">const</span> std::string &amp;objectId);</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a9f153dbbdb64cd49b3ef528edd397be1">   37</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a9f153dbbdb64cd49b3ef528edd397be1">removeIdCount</a>(<span class="keyword">const</span> std::string &amp;objectId, <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a435010cf9e381ce44aac282a8e06b1f7">   39</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a435010cf9e381ce44aac282a8e06b1f7">contains</a>(<span class="keyword">const</span> std::shared_ptr&lt;Object&gt; &amp;<span class="keywordtype">object</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a73c0cba1a7a6d6267f185397bcf90810">   40</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a73c0cba1a7a6d6267f185397bcf90810">containsCount</a>(<span class="keyword">const</span> std::shared_ptr&lt;Object&gt; &amp;<span class="keywordtype">object</span>, <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a446231e3dfa6d407ad2393030242bdb3">   41</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a446231e3dfa6d407ad2393030242bdb3">containsId</a>(<span class="keyword">const</span> std::string &amp;objectId) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a79275f8e384dd3098d7997bc4b09279b">   42</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a79275f8e384dd3098d7997bc4b09279b">containsIdCount</a>(<span class="keyword">const</span> std::string &amp;objectId, <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#aad1179182020028b0815231b0085c74b">   44</a></span>&#160;    std::vector&lt;std::shared_ptr&lt;Object&gt;&gt; <a class="code" href="class_novel_tea_1_1_object_list.htm#aad1179182020028b0815231b0085c74b">getObjects</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">   46</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>(<span class="keyword">const</span> std::shared_ptr&lt;Object&gt; &amp;<span class="keywordtype">object</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a5a4079f50ae97de934c36cc856b339ce">   47</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a5a4079f50ae97de934c36cc856b339ce">countId</a>(<span class="keyword">const</span> std::string &amp;objectId) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a3adf0a8c8f1983e1cfe0baa3eb46d154">   49</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a3adf0a8c8f1983e1cfe0baa3eb46d154">attach</a>(<span class="keyword">const</span> std::string &amp;type, <span class="keyword">const</span> std::string &amp;<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a82847339d0b936fbe7139a902eaa9d93">   50</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a82847339d0b936fbe7139a902eaa9d93">clear</a>();</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#acbb09216a04dcc8907d97eafcec76c9a">   51</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#acbb09216a04dcc8907d97eafcec76c9a">saveChanges</a>();</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a922c979906b909d4d43a34c197d16841">   52</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_object_list.htm#a922c979906b909d4d43a34c197d16841">sync</a>();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_object_list.htm#a8acb232f69da69f14ef56999902c2e55">   54</a></span>&#160;    std::vector&lt;std::shared_ptr&lt;ObjectItem&gt;&gt; <a class="code" href="class_novel_tea_1_1_object_list.htm#a8acb232f69da69f14ef56999902c2e55">items</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    std::string m_attachedType;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    std::string m_attachedId;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    std::vector&lt;std::shared_ptr&lt;ObjectItem&gt;&gt; m_items;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;};</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;} <span class="comment">// namespace NovelTea</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// NOVELTEA_OBJECTLIST_HPP</span></div>
<div class="ttc" id="a_context_object_8hpp_htm"><div class="ttname"><a href="_context_object_8hpp.htm">ContextObject.hpp</a></div></div>
<div class="ttc" id="a_game_8hpp_htm"><div class="ttname"><a href="_game_8hpp.htm">Game.hpp</a></div></div>
<div class="ttc" id="a_utils_8hpp_htm"><div class="ttname"><a href="_utils_8hpp.htm">Utils.hpp</a></div></div>
<div class="ttc" id="aclass_novel_tea_1_1_context_htm"><div class="ttname"><a href="class_novel_tea_1_1_context.htm">NovelTea::Context</a></div><div class="ttdef"><b>Definition:</b> Context.hpp:53</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_context_object_htm"><div class="ttname"><a href="class_novel_tea_1_1_context_object.htm">NovelTea::ContextObject</a></div><div class="ttdef"><b>Definition:</b> ContextObject.hpp:9</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm">NovelTea::ObjectList</a></div><div class="ttdef"><b>Definition:</b> ObjectList.hpp:25</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a2b17c852aa1a0f24d470385e253b70c5"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a2b17c852aa1a0f24d470385e253b70c5">NovelTea::ObjectList::addId</a></div><div class="ttdeci">bool addId(const std::string &amp;objectId)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a3adf0a8c8f1983e1cfe0baa3eb46d154"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a3adf0a8c8f1983e1cfe0baa3eb46d154">NovelTea::ObjectList::attach</a></div><div class="ttdeci">void attach(const std::string &amp;type, const std::string &amp;id)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a435010cf9e381ce44aac282a8e06b1f7"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a435010cf9e381ce44aac282a8e06b1f7">NovelTea::ObjectList::contains</a></div><div class="ttdeci">bool contains(const std::shared_ptr&lt; Object &gt; &amp;object) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a446231e3dfa6d407ad2393030242bdb3"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a446231e3dfa6d407ad2393030242bdb3">NovelTea::ObjectList::containsId</a></div><div class="ttdeci">bool containsId(const std::string &amp;objectId) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a5a4079f50ae97de934c36cc856b339ce"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a5a4079f50ae97de934c36cc856b339ce">NovelTea::ObjectList::countId</a></div><div class="ttdeci">int countId(const std::string &amp;objectId) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a65aded45b52477d773babfcdf1f84682"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a65aded45b52477d773babfcdf1f84682">NovelTea::ObjectList::addCount</a></div><div class="ttdeci">bool addCount(std::shared_ptr&lt; Object &gt; object, int count)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a72fa570a47fdde713b2a8dfd2f93d6b5"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a72fa570a47fdde713b2a8dfd2f93d6b5">NovelTea::ObjectList::add</a></div><div class="ttdeci">bool add(std::shared_ptr&lt; Object &gt; object)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a73c0cba1a7a6d6267f185397bcf90810"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a73c0cba1a7a6d6267f185397bcf90810">NovelTea::ObjectList::containsCount</a></div><div class="ttdeci">bool containsCount(const std::shared_ptr&lt; Object &gt; &amp;object, int count) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a79275f8e384dd3098d7997bc4b09279b"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a79275f8e384dd3098d7997bc4b09279b">NovelTea::ObjectList::containsIdCount</a></div><div class="ttdeci">bool containsIdCount(const std::string &amp;objectId, int count) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a7a295de581539203c91e838d791a6150"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">NovelTea::ObjectList::count</a></div><div class="ttdeci">int count(const std::shared_ptr&lt; Object &gt; &amp;object) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a82847339d0b936fbe7139a902eaa9d93"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a82847339d0b936fbe7139a902eaa9d93">NovelTea::ObjectList::clear</a></div><div class="ttdeci">void clear()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a8acb232f69da69f14ef56999902c2e55"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a8acb232f69da69f14ef56999902c2e55">NovelTea::ObjectList::items</a></div><div class="ttdeci">std::vector&lt; std::shared_ptr&lt; ObjectItem &gt; &gt; items() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a922c979906b909d4d43a34c197d16841"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a922c979906b909d4d43a34c197d16841">NovelTea::ObjectList::sync</a></div><div class="ttdeci">void sync()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_a9f153dbbdb64cd49b3ef528edd397be1"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#a9f153dbbdb64cd49b3ef528edd397be1">NovelTea::ObjectList::removeIdCount</a></div><div class="ttdeci">bool removeIdCount(const std::string &amp;objectId, int count)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_aa14c04137f7db1b389b1f97a0479b9a4"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#aa14c04137f7db1b389b1f97a0479b9a4">NovelTea::ObjectList::ObjectList</a></div><div class="ttdeci">ObjectList(Context *context)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_aa6d9254dd4a3345b1a5f55f936659db1"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#aa6d9254dd4a3345b1a5f55f936659db1">NovelTea::ObjectList::removeCount</a></div><div class="ttdeci">bool removeCount(std::shared_ptr&lt; Object &gt; object, int count)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_aad1179182020028b0815231b0085c74b"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#aad1179182020028b0815231b0085c74b">NovelTea::ObjectList::getObjects</a></div><div class="ttdeci">std::vector&lt; std::shared_ptr&lt; Object &gt; &gt; getObjects() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_ab1cd0b0ff6b3ddc58e10e82e824592bf"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#ab1cd0b0ff6b3ddc58e10e82e824592bf">NovelTea::ObjectList::removeId</a></div><div class="ttdeci">bool removeId(const std::string &amp;objectId)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_acbb09216a04dcc8907d97eafcec76c9a"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#acbb09216a04dcc8907d97eafcec76c9a">NovelTea::ObjectList::saveChanges</a></div><div class="ttdeci">void saveChanges()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_ae955b1c3a5f675e2d2af2716eead1b67"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#ae955b1c3a5f675e2d2af2716eead1b67">NovelTea::ObjectList::remove</a></div><div class="ttdeci">bool remove(std::shared_ptr&lt; Object &gt; object)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_object_list_htm_af83688b19b19b5c994b32d6caf747d96"><div class="ttname"><a href="class_novel_tea_1_1_object_list.htm#af83688b19b19b5c994b32d6caf747d96">NovelTea::ObjectList::addIdCount</a></div><div class="ttdeci">bool addIdCount(const std::string &amp;objectId, int count)</div></div>
<div class="ttc" id="anamespace_novel_tea_1_1_i_d_htm_ae84772a4a70538c9896020483e03ffd1"><div class="ttname"><a href="namespace_novel_tea_1_1_i_d.htm#ae84772a4a70538c9896020483e03ffd1">NovelTea::ID::Object</a></div><div class="ttdeci">constexpr auto Object</div><div class="ttdef"><b>Definition:</b> ProjectDataIdentifiers.hpp:65</div></div>
<div class="ttc" id="anamespace_novel_tea_htm"><div class="ttname"><a href="namespace_novel_tea.htm">NovelTea</a></div><div class="ttdef"><b>Definition:</b> Action.hpp:8</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_object_item_htm"><div class="ttname"><a href="struct_novel_tea_1_1_object_item.htm">NovelTea::ObjectItem</a></div><div class="ttdef"><b>Definition:</b> ObjectList.hpp:16</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_object_item_htm_a15bee299595a9ad5e4621ddaa2d6dacf"><div class="ttname"><a href="struct_novel_tea_1_1_object_item.htm#a15bee299595a9ad5e4621ddaa2d6dacf">NovelTea::ObjectItem::object</a></div><div class="ttdeci">std::shared_ptr&lt; Object &gt; object</div><div class="ttdef"><b>Definition:</b> ObjectList.hpp:20</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_object_item_htm_a5ddceb141e32b0c241cd81ee60c436d6"><div class="ttname"><a href="struct_novel_tea_1_1_object_item.htm#a5ddceb141e32b0c241cd81ee60c436d6">NovelTea::ObjectItem::ObjectItem</a></div><div class="ttdeci">ObjectItem(std::shared_ptr&lt; Object &gt; object, int count=1)</div><div class="ttdef"><b>Definition:</b> ObjectList.hpp:17</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_object_item_htm_ab103a007e1ef5c93187c05209d72ba57"><div class="ttname"><a href="struct_novel_tea_1_1_object_item.htm#ab103a007e1ef5c93187c05209d72ba57">NovelTea::ObjectItem::count</a></div><div class="ttdeci">int count</div><div class="ttdef"><b>Definition:</b> ObjectList.hpp:21</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li><li class="navelem"><a class="el" href="dir_52c2ed606da51a5aae4b083c568b1a72.htm">NovelTea</a></li><li class="navelem"><a class="el" href="_object_list_8hpp.htm">ObjectList.hpp</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
