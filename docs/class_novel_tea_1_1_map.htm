<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: NovelTea::Map Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_novel_tea_1_1_map.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="class_novel_tea_1_1_map-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NovelTea::Map Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_map_8hpp_source.htm">Map.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NovelTea::Map:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8fec86efd4e28db30e09c5674808c679"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a8fec86efd4e28db30e09c5674808c679">Map</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a8fec86efd4e28db30e09c5674808c679"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d0e137939e2c9ca38699114b9a3ea60"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a4d0e137939e2c9ca38699114b9a3ea60">jsonSize</a> () const override</td></tr>
<tr class="separator:a4d0e137939e2c9ca38699114b9a3ea60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af28560bd286f6f34400418be751f8640"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#af28560bd286f6f34400418be751f8640">toJson</a> () const override</td></tr>
<tr class="separator:af28560bd286f6f34400418be751f8640"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0753ef94af84f091a56a714569223065"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a0753ef94af84f091a56a714569223065">loadJson</a> (const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;j) override</td></tr>
<tr class="separator:a0753ef94af84f091a56a714569223065"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95ee7c6107d6fcf2d1d8561a97045627"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7d">EntityType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a95ee7c6107d6fcf2d1d8561a97045627">entityType</a> () const override</td></tr>
<tr class="separator:a95ee7c6107d6fcf2d1d8561a97045627"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f5ee5d9d7cbfc9e85f0f7d3cb29eb2"><td class="memItemLeft" align="right" valign="top">const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#ad9f5ee5d9d7cbfc9e85f0f7d3cb29eb2">entityId</a> () const override</td></tr>
<tr class="separator:ad9f5ee5d9d7cbfc9e85f0f7d3cb29eb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb6d9dc08600b3fdc9f13c96ec29b53b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#acb6d9dc08600b3fdc9f13c96ec29b53b">addRoom</a> (const std::string &amp;name, const <a class="el" href="struct_novel_tea_1_1_int_rect.htm">IntRect</a> &amp;rect, const std::vector&lt; std::string &gt; &amp;roomIds, const std::string &amp;script, <a class="el" href="namespace_novel_tea.htm#a4afa9f202e98b4102427f3834216b310">RoomStyle</a> style)</td></tr>
<tr class="separator:acb6d9dc08600b3fdc9f13c96ec29b53b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22846ec7d4efb67de43b080e7d93ef33"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a22846ec7d4efb67de43b080e7d93ef33">addConnection</a> (int roomStart, int roomEnd, const <a class="el" href="struct_novel_tea_1_1_vector2i.htm">Vector2i</a> &amp;portStart, const <a class="el" href="struct_novel_tea_1_1_vector2i.htm">Vector2i</a> &amp;portEnd, const std::string &amp;script, <a class="el" href="namespace_novel_tea.htm#a9760f0bb1f9a70ac16f072f5fefdbd50">ConnectionStyle</a> style)</td></tr>
<tr class="separator:a22846ec7d4efb67de43b080e7d93ef33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f94a279bd479e28fbc7d6142f2bd364"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a9f94a279bd479e28fbc7d6142f2bd364">scriptAddRoom</a> (const std::string &amp;name, int x, int y, int w, int h, const std::vector&lt; std::string &gt; &amp;roomIds, const std::string &amp;script, int style)</td></tr>
<tr class="memdesc:a9f94a279bd479e28fbc7d6142f2bd364"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binding for <a class="el" href="class_novel_tea_1_1_script_manager.htm">ScriptManager</a>.  <a href="class_novel_tea_1_1_map.htm#a9f94a279bd479e28fbc7d6142f2bd364">More...</a><br /></td></tr>
<tr class="separator:a9f94a279bd479e28fbc7d6142f2bd364"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3311dcb5d20bf514bb26ab8dd9b70d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#ad3311dcb5d20bf514bb26ab8dd9b70d3">scriptAddConnection</a> (int roomStart, int roomEnd, int startX, int startY, int endX, int endY, const std::string &amp;script, int style)</td></tr>
<tr class="separator:ad3311dcb5d20bf514bb26ab8dd9b70d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43d3ecde2a577ece93a230c94395ac44"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a43d3ecde2a577ece93a230c94395ac44">evalVisibility</a> (std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_map_room.htm">MapRoom</a> &gt; &amp;room) const</td></tr>
<tr class="separator:a43d3ecde2a577ece93a230c94395ac44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e903650fbf152289d071ed1ac250b72"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a0e903650fbf152289d071ed1ac250b72">evalVisibility</a> (std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_map_connection.htm">MapConnection</a> &gt; &amp;connection) const</td></tr>
<tr class="separator:a0e903650fbf152289d071ed1ac250b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4ff6b4770858885c88ab7d804c2e2ed"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector</a>&lt; <a class="el" href="struct_novel_tea_1_1_map_room.htm">MapRoom</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#ad4ff6b4770858885c88ab7d804c2e2ed">getRooms</a> () const</td></tr>
<tr class="separator:ad4ff6b4770858885c88ab7d804c2e2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6acbacf41d1bf7fa34e5492fad3ca90e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector</a>&lt; <a class="el" href="struct_novel_tea_1_1_map_connection.htm">MapConnection</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a6acbacf41d1bf7fa34e5492fad3ca90e">getConnections</a> () const</td></tr>
<tr class="separator:a6acbacf41d1bf7fa34e5492fad3ca90e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a670457913de53f92c17efdd7033896fa"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#a670457913de53f92c17efdd7033896fa">checkForDoor</a> (const <a class="el" href="struct_novel_tea_1_1_map_connection.htm">MapConnection</a> &amp;connection, <a class="el" href="struct_novel_tea_1_1_float_rect.htm">FloatRect</a> &amp;doorRect) const</td></tr>
<tr class="separator:a670457913de53f92c17efdd7033896fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_entity"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_entity')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_entity.htm">NovelTea::Entity</a></td></tr>
<tr class="memitem:a1062b199aa6eb9060e550ab5892cbc2d inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#a1062b199aa6eb9060e550ab5892cbc2d">Entity</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a1062b199aa6eb9060e550ab5892cbc2d inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0efc4d5fcdba7c836158945db770be47 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#a0efc4d5fcdba7c836158945db770be47">fromJson</a> (const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;j) override</td></tr>
<tr class="separator:a0efc4d5fcdba7c836158945db770be47 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85510b8a4b2d9e1c888a556348a7a3e9 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#a85510b8a4b2d9e1c888a556348a7a3e9">setId</a> (const std::string &amp;id)</td></tr>
<tr class="separator:a85510b8a4b2d9e1c888a556348a7a3e9 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4ec960896eaf6e78dd45b0e1997ae5e inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#af4ec960896eaf6e78dd45b0e1997ae5e">getId</a> () const</td></tr>
<tr class="separator:af4ec960896eaf6e78dd45b0e1997ae5e inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3b214ea7dab3238459b8fa5c3883284 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">const std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_property_list.htm">PropertyList</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#ad3b214ea7dab3238459b8fa5c3883284">getPropertyList</a> () const</td></tr>
<tr class="separator:ad3b214ea7dab3238459b8fa5c3883284 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee8fa9e161ee9e41d7e559951f2c7c06 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">DukValue&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#aee8fa9e161ee9e41d7e559951f2c7c06">prop</a> (const std::string &amp;key, const DukValue &amp;defaultValue)</td></tr>
<tr class="separator:aee8fa9e161ee9e41d7e559951f2c7c06 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0bb9cea654248e6d96f5d9612170f66 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#ab0bb9cea654248e6d96f5d9612170f66">hasProp</a> (const std::string &amp;key)</td></tr>
<tr class="separator:ab0bb9cea654248e6d96f5d9612170f66 inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc67b42096d66608172dc3bff4c79d6f inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#afc67b42096d66608172dc3bff4c79d6f">setProp</a> (const std::string &amp;key, const DukValue &amp;value)</td></tr>
<tr class="separator:afc67b42096d66608172dc3bff4c79d6f inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17f719bd4657c33500772215f2c52cea inherit pub_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#a17f719bd4657c33500772215f2c52cea">unsetProp</a> (const std::string &amp;key)</td></tr>
<tr class="separator:a17f719bd4657c33500772215f2c52cea inherit pub_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_context_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_context_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_context_object.htm">NovelTea::ContextObject</a></td></tr>
<tr class="memitem:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a729b81d65b38b86841e7c522070f9896">ContextObject</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a3bb9175b66933787a9a06e50bd6c1a06">~ContextObject</a> ()</td></tr>
<tr class="separator:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a67dd5b0a333964bb76c984abf8fa0e75">getContext</a> () const</td></tr>
<tr class="separator:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:aeca72e52c7fc76b0eb5af2cc71561870"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm#aeca72e52c7fc76b0eb5af2cc71561870">id</a> = <a class="el" href="namespace_novel_tea_1_1_i_d.htm#a76ac319cf57f1f0ae92f303b6fbb8f92">ID::Map</a></td></tr>
<tr class="separator:aeca72e52c7fc76b0eb5af2cc71561870"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_class_novel_tea_1_1_entity"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_class_novel_tea_1_1_entity')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_entity.htm">NovelTea::Entity</a></td></tr>
<tr class="memitem:a7bec70e9eb02264dc805ac2287dce99c inherit pub_static_methods_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">static std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_entity.htm">Entity</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#a7bec70e9eb02264dc805ac2287dce99c">fromEntityJson</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context, const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;j)</td></tr>
<tr class="separator:a7bec70e9eb02264dc805ac2287dce99c inherit pub_static_methods_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_novel_tea_1_1_entity"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_class_novel_tea_1_1_entity')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_novel_tea_1_1_entity.htm">NovelTea::Entity</a></td></tr>
<tr class="memitem:a61f3bbd5ca1d8fee43188bdf43d6719a inherit pro_attribs_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#a61f3bbd5ca1d8fee43188bdf43d6719a">m_id</a></td></tr>
<tr class="separator:a61f3bbd5ca1d8fee43188bdf43d6719a inherit pro_attribs_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87d4e0c7a4a4843c27a71addb6d0adb6 inherit pro_attribs_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#a87d4e0c7a4a4843c27a71addb6d0adb6">m_parentId</a></td></tr>
<tr class="separator:a87d4e0c7a4a4843c27a71addb6d0adb6 inherit pro_attribs_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae14d50d57c12f88bc56c861278c72c22 inherit pro_attribs_class_novel_tea_1_1_entity"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm#ae14d50d57c12f88bc56c861278c72c22">m_properties</a></td></tr>
<tr class="separator:ae14d50d57c12f88bc56c861278c72c22 inherit pro_attribs_class_novel_tea_1_1_entity"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8fec86efd4e28db30e09c5674808c679"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fec86efd4e28db30e09c5674808c679">&#9670;&nbsp;</a></span>Map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::Map::Map </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a22846ec7d4efb67de43b080e7d93ef33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22846ec7d4efb67de43b080e7d93ef33">&#9670;&nbsp;</a></span>addConnection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::Map::addConnection </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>roomStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>roomEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_vector2i.htm">Vector2i</a> &amp;&#160;</td>
          <td class="paramname"><em>portStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_vector2i.htm">Vector2i</a> &amp;&#160;</td>
          <td class="paramname"><em>portEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_novel_tea.htm#a9760f0bb1f9a70ac16f072f5fefdbd50">ConnectionStyle</a>&#160;</td>
          <td class="paramname"><em>style</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acb6d9dc08600b3fdc9f13c96ec29b53b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb6d9dc08600b3fdc9f13c96ec29b53b">&#9670;&nbsp;</a></span>addRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int NovelTea::Map::addRoom </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_int_rect.htm">IntRect</a> &amp;&#160;</td>
          <td class="paramname"><em>rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>roomIds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_novel_tea.htm#a4afa9f202e98b4102427f3834216b310">RoomStyle</a>&#160;</td>
          <td class="paramname"><em>style</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a670457913de53f92c17efdd7033896fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a670457913de53f92c17efdd7033896fa">&#9670;&nbsp;</a></span>checkForDoor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::Map::checkForDoor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_map_connection.htm">MapConnection</a> &amp;&#160;</td>
          <td class="paramname"><em>connection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_novel_tea_1_1_float_rect.htm">FloatRect</a> &amp;&#160;</td>
          <td class="paramname"><em>doorRect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad9f5ee5d9d7cbfc9e85f0f7d3cb29eb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9f5ee5d9d7cbfc9e85f0f7d3cb29eb2">&#9670;&nbsp;</a></span>entityId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string NovelTea::Map::entityId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_entity.htm#a27b1bda04b7f358c9eb5ed87236e1a6a">NovelTea::Entity</a>.</p>

</div>
</div>
<a id="a95ee7c6107d6fcf2d1d8561a97045627"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95ee7c6107d6fcf2d1d8561a97045627">&#9670;&nbsp;</a></span>entityType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7d">EntityType</a> NovelTea::Map::entityType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_entity.htm#aa3b362d1da91b309cf779155864a9315">NovelTea::Entity</a>.</p>

</div>
</div>
<a id="a0e903650fbf152289d071ed1ac250b72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e903650fbf152289d071ed1ac250b72">&#9670;&nbsp;</a></span>evalVisibility() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::Map::evalVisibility </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_map_connection.htm">MapConnection</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>connection</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a43d3ecde2a577ece93a230c94395ac44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43d3ecde2a577ece93a230c94395ac44">&#9670;&nbsp;</a></span>evalVisibility() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::Map::evalVisibility </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_map_room.htm">MapRoom</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>room</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6acbacf41d1bf7fa34e5492fad3ca90e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6acbacf41d1bf7fa34e5492fad3ca90e">&#9670;&nbsp;</a></span>getConnections()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector</a>&lt;<a class="el" href="struct_novel_tea_1_1_map_connection.htm">MapConnection</a>&gt;&amp; NovelTea::Map::getConnections </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad4ff6b4770858885c88ab7d804c2e2ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4ff6b4770858885c88ab7d804c2e2ed">&#9670;&nbsp;</a></span>getRooms()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector</a>&lt;<a class="el" href="struct_novel_tea_1_1_map_room.htm">MapRoom</a>&gt;&amp; NovelTea::Map::getRooms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4d0e137939e2c9ca38699114b9a3ea60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d0e137939e2c9ca38699114b9a3ea60">&#9670;&nbsp;</a></span>jsonSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t NovelTea::Map::jsonSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_entity.htm#a385a09a1144110c49fe2dcd06776131f">NovelTea::Entity</a>.</p>

</div>
</div>
<a id="a0753ef94af84f091a56a714569223065"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0753ef94af84f091a56a714569223065">&#9670;&nbsp;</a></span>loadJson()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::Map::loadJson </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;&#160;</td>
          <td class="paramname"><em>j</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_entity.htm#a23b365e0238c7029c5b80096463a5e19">NovelTea::Entity</a>.</p>

</div>
</div>
<a id="ad3311dcb5d20bf514bb26ab8dd9b70d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3311dcb5d20bf514bb26ab8dd9b70d3">&#9670;&nbsp;</a></span>scriptAddConnection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::Map::scriptAddConnection </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>roomStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>roomEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>endX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>endY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>style</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9f94a279bd479e28fbc7d6142f2bd364"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f94a279bd479e28fbc7d6142f2bd364">&#9670;&nbsp;</a></span>scriptAddRoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int NovelTea::Map::scriptAddRoom </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>roomIds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>style</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Binding for <a class="el" href="class_novel_tea_1_1_script_manager.htm">ScriptManager</a>. </p>

</div>
</div>
<a id="af28560bd286f6f34400418be751f8640"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af28560bd286f6f34400418be751f8640">&#9670;&nbsp;</a></span>toJson()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> NovelTea::Map::toJson </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_json_serializable.htm#aa116dd335d830980735bd9e27f9ef8a5">NovelTea::JsonSerializable</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aeca72e52c7fc76b0eb5af2cc71561870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeca72e52c7fc76b0eb5af2cc71561870">&#9670;&nbsp;</a></span>id</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto NovelTea::Map::id = <a class="el" href="namespace_novel_tea_1_1_i_d.htm#a76ac319cf57f1f0ae92f303b6fbb8f92">ID::Map</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/NovelTea/<a class="el" href="_map_8hpp_source.htm">Map.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_novel_tea.htm">NovelTea</a></li><li class="navelem"><a class="el" href="class_novel_tea_1_1_map.htm">Map</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
