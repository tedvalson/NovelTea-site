<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: NovelTea::ActiveTextSegment Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_novel_tea_1_1_active_text_segment.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="class_novel_tea_1_1_active_text_segment-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NovelTea::ActiveTextSegment Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_active_text_segment_8hpp_source.htm">ActiveTextSegment.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NovelTea::ActiveTextSegment:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_active_text_segment_1_1_segment.htm">Segment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a761f0d5a8a604e7ed1079bd6ec16b347"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a761f0d5a8a604e7ed1079bd6ec16b347">ActiveTextSegment</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a761f0d5a8a604e7ed1079bd6ec16b347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4290688c4e96217918c3817fae2adec2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a4290688c4e96217918c3817fae2adec2">ActiveTextSegment</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context, const std::vector&lt; std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_styled_segment.htm">StyledSegment</a> &gt;&gt; &amp;segments)</td></tr>
<tr class="separator:a4290688c4e96217918c3817fae2adec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae26278cb3257eb3dd42b41ba9c5e33e5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ae26278cb3257eb3dd42b41ba9c5e33e5">createRenderTexture</a> ()</td></tr>
<tr class="separator:ae26278cb3257eb3dd42b41ba9c5e33e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ea4be28cdc36f3a1c1893287d218abe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a2ea4be28cdc36f3a1c1893287d218abe">toJson</a> () const override</td></tr>
<tr class="separator:a2ea4be28cdc36f3a1c1893287d218abe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74d2161c2fb5bc6f010da80579035aeb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a74d2161c2fb5bc6f010da80579035aeb">fromJson</a> (const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;j) override</td></tr>
<tr class="separator:a74d2161c2fb5bc6f010da80579035aeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae284d4bba5ba696a0e12d76a04cde11a"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ae284d4bba5ba696a0e12d76a04cde11a">toPlainText</a> (bool stripBBCodes=false, const std::string &amp;newlineChar=&quot;\n&quot;) const</td></tr>
<tr class="separator:ae284d4bba5ba696a0e12d76a04cde11a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a454cb8bec14008d3d60550b4ee94d716"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a454cb8bec14008d3d60550b4ee94d716">objectFromPoint</a> (const sf::Vector2f &amp;point) const</td></tr>
<tr class="separator:a454cb8bec14008d3d60550b4ee94d716"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36aa1cd9a55bc477057acac4143046d5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a36aa1cd9a55bc477057acac4143046d5">setStyledSegments</a> (const std::vector&lt; std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_styled_segment.htm">StyledSegment</a> &gt;&gt; &amp;segments)</td></tr>
<tr class="separator:a36aa1cd9a55bc477057acac4143046d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45451c99e17a04f1ee64bf8724ea03c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a45451c99e17a04f1ee64bf8724ea03c0">setText</a> (const std::string &amp;text)</td></tr>
<tr class="separator:a45451c99e17a04f1ee64bf8724ea03c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e0401aac3ed5aa276d455c42b0dc5d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a7e0401aac3ed5aa276d455c42b0dc5d0">setText</a> (const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps)</td></tr>
<tr class="separator:a7e0401aac3ed5aa276d455c42b0dc5d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a949144da9156c3749a2d60c27cd9f28e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a949144da9156c3749a2d60c27cd9f28e">setText</a> (const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps)</td></tr>
<tr class="separator:a949144da9156c3749a2d60c27cd9f28e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8081892987fcd175582566d57d77269b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a8081892987fcd175582566d57d77269b">setText</a> (const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps)</td></tr>
<tr class="separator:a8081892987fcd175582566d57d77269b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a897d71cd9abcf23d57d8a5cf44da1f8d"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a897d71cd9abcf23d57d8a5cf44da1f8d">getText</a> () const</td></tr>
<tr class="separator:a897d71cd9abcf23d57d8a5cf44da1f8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a654a5e7f226a0ded8cf0814e50199572"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a654a5e7f226a0ded8cf0814e50199572">startAnim</a> ()</td></tr>
<tr class="separator:a654a5e7f226a0ded8cf0814e50199572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20d03efad514ba18771231a1219ecf59"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a20d03efad514ba18771231a1219ecf59">reset</a> ()</td></tr>
<tr class="separator:a20d03efad514ba18771231a1219ecf59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb83b4af04cf8aa5dbcc679e0b754d41"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#adb83b4af04cf8aa5dbcc679e0b754d41">setSize</a> (const sf::Vector2f &amp;size)</td></tr>
<tr class="separator:adb83b4af04cf8aa5dbcc679e0b754d41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d280b85b1acdf7c40720cda7937b012"><td class="memItemLeft" align="right" valign="top">sf::Vector2f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a7d280b85b1acdf7c40720cda7937b012">getSize</a> () const</td></tr>
<tr class="separator:a7d280b85b1acdf7c40720cda7937b012"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace4de902c4690230d42e19f23d714370"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ace4de902c4690230d42e19f23d714370">setLastLineMaxHeight</a> (unsigned int height)</td></tr>
<tr class="separator:ace4de902c4690230d42e19f23d714370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02d8c0bcd2839102d6b0314c5799df2"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ac02d8c0bcd2839102d6b0314c5799df2">getCurrentLineMaxHeight</a> () const</td></tr>
<tr class="separator:ac02d8c0bcd2839102d6b0314c5799df2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7532f25eb7696b468cdd30afdfbd588"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ae7532f25eb7696b468cdd30afdfbd588">setLastCodePoint</a> (sf::Uint32 codePoint)</td></tr>
<tr class="separator:ae7532f25eb7696b468cdd30afdfbd588"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae606a87b58c61442121606a6518109fe"><td class="memItemLeft" align="right" valign="top">sf::Uint32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ae606a87b58c61442121606a6518109fe">getCurrentCodePoint</a> () const</td></tr>
<tr class="separator:ae606a87b58c61442121606a6518109fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a816e3c984637cf5b7a7034b3068bc5af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a816e3c984637cf5b7a7034b3068bc5af">setHighlightId</a> (const std::string &amp;id)</td></tr>
<tr class="separator:a816e3c984637cf5b7a7034b3068bc5af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad600b2b9f4c87284e08619df8595c287"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ad600b2b9f4c87284e08619df8595c287">refresh</a> ()</td></tr>
<tr class="separator:ad600b2b9f4c87284e08619df8595c287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a529fd1c627c38f81df719e4dfda092cb"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a529fd1c627c38f81df719e4dfda092cb">getTextWidth</a> () const</td></tr>
<tr class="separator:a529fd1c627c38f81df719e4dfda092cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fdc1b8758e9bf355d004a251e6e17b4"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a0fdc1b8758e9bf355d004a251e6e17b4">getDelayMs</a> () const</td></tr>
<tr class="separator:a0fdc1b8758e9bf355d004a251e6e17b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3b4a131b731ab72d77c4580223102a4"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ad3b4a131b731ab72d77c4580223102a4">getDurationMs</a> () const</td></tr>
<tr class="separator:ad3b4a131b731ab72d77c4580223102a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86ac0a2244c04cda490f0fd6d6d06673"><td class="memItemLeft" align="right" valign="top">sf::FloatRect&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a86ac0a2244c04cda490f0fd6d6d06673">getLocalBounds</a> () const</td></tr>
<tr class="separator:a86ac0a2244c04cda490f0fd6d6d06673"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abda11422f5fd3cee169e36402b9b5b21"><td class="memItemLeft" align="right" valign="top">sf::FloatRect&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#abda11422f5fd3cee169e36402b9b5b21">getGlobalBounds</a> () const</td></tr>
<tr class="separator:abda11422f5fd3cee169e36402b9b5b21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdde978bc6d6cd7382ab1330b6c3fa29"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#afdde978bc6d6cd7382ab1330b6c3fa29">setLineSpacing</a> (float lineSpacing)</td></tr>
<tr class="separator:afdde978bc6d6cd7382ab1330b6c3fa29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a0d22a9f1d87003afaf8975c71e39d8"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a2a0d22a9f1d87003afaf8975c71e39d8">getLineSpacing</a> () const</td></tr>
<tr class="separator:a2a0d22a9f1d87003afaf8975c71e39d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a649f0ff07211c628adf6a8b5d0170eca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a649f0ff07211c628adf6a8b5d0170eca">setCursorStart</a> (const sf::Vector2f &amp;cursorPos)</td></tr>
<tr class="separator:a649f0ff07211c628adf6a8b5d0170eca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac44463fdbd65ac8e8103a9244d0cdf67"><td class="memItemLeft" align="right" valign="top">const sf::Vector2f &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ac44463fdbd65ac8e8103a9244d0cdf67">getCursorEnd</a> () const</td></tr>
<tr class="separator:ac44463fdbd65ac8e8103a9244d0cdf67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1081f1364b8ce24b2bdff7b3d258e90"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ae1081f1364b8ce24b2bdff7b3d258e90">setAlpha</a> (float alpha) override</td></tr>
<tr class="separator:ae1081f1364b8ce24b2bdff7b3d258e90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2868d2b0472b6fbca58bb7ec6e2f641"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ab2868d2b0472b6fbca58bb7ec6e2f641">getAlpha</a> () const override</td></tr>
<tr class="separator:ab2868d2b0472b6fbca58bb7ec6e2f641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6085d5d38067a24f3d24115888b85ec7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a6085d5d38067a24f3d24115888b85ec7">setHighlightFactor</a> (float highlightFactor)</td></tr>
<tr class="separator:a6085d5d38067a24f3d24115888b85ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e0e5dd1012e273f373a06d99120e61a"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a1e0e5dd1012e273f373a06d99120e61a">getHighlightFactor</a> () const</td></tr>
<tr class="separator:a1e0e5dd1012e273f373a06d99120e61a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5842e69fa4d18a338fac6fd6bf4dd816"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a5842e69fa4d18a338fac6fd6bf4dd816">setFontSizeMultiplier</a> (float fontSizeMultiplier)</td></tr>
<tr class="separator:a5842e69fa4d18a338fac6fd6bf4dd816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4c152e5b6d38fbc2a6e2305cc969094"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#aa4c152e5b6d38fbc2a6e2305cc969094">getFontSizeMultiplier</a> () const</td></tr>
<tr class="separator:aa4c152e5b6d38fbc2a6e2305cc969094"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fcffe9fe81f311a9fbde1d32f8eb053"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a9fcffe9fe81f311a9fbde1d32f8eb053">setFadeAcrossPosition</a> (float position)</td></tr>
<tr class="separator:a9fcffe9fe81f311a9fbde1d32f8eb053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a933ad87e622ef59e62f7c8489eac06e2"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a933ad87e622ef59e62f7c8489eac06e2">getFadeAcrossPosition</a> () const</td></tr>
<tr class="separator:a933ad87e622ef59e62f7c8489eac06e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d35872604d3197ffccfe7e617b2d43e"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a6d35872604d3197ffccfe7e617b2d43e">getFadeAcrossLength</a> () const</td></tr>
<tr class="separator:a6d35872604d3197ffccfe7e617b2d43e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec6a24678b4db379e97909dfc11b1f60"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#aec6a24678b4db379e97909dfc11b1f60">setTrembleFactor</a> (float trembleFactor)</td></tr>
<tr class="separator:aec6a24678b4db379e97909dfc11b1f60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf6a5e43cea47605a61df3d889f543e1"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#acf6a5e43cea47605a61df3d889f543e1">getTrembleFactor</a> () const</td></tr>
<tr class="separator:acf6a5e43cea47605a61df3d889f543e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1286d1a5add24f0737c8c9fad95b07dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a1286d1a5add24f0737c8c9fad95b07dc">setTestFactor</a> (float testFactor)</td></tr>
<tr class="separator:a1286d1a5add24f0737c8c9fad95b07dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02fba0fb10e0ec73e77c1ea757ba32e"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ac02fba0fb10e0ec73e77c1ea757ba32e">getTestFactor</a> () const</td></tr>
<tr class="separator:ac02fba0fb10e0ec73e77c1ea757ba32e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0f8dd6f4ed4e3d7d477cbd4f27f3a72"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ad0f8dd6f4ed4e3d7d477cbd4f27f3a72">setEffectFactor</a> (float effectFactor)</td></tr>
<tr class="separator:ad0f8dd6f4ed4e3d7d477cbd4f27f3a72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9204b70fdb04f471bd62a870a3e164f0"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a9204b70fdb04f471bd62a870a3e164f0">getEffectFactor</a> () const</td></tr>
<tr class="separator:a9204b70fdb04f471bd62a870a3e164f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bd70f60b9f69df0d4c72f64e8e72120"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="struct_novel_tea_1_1_active_text_segment_1_1_segment.htm">Segment</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a6bd70f60b9f69df0d4c72f64e8e72120">getSegments</a> ()</td></tr>
<tr class="separator:a6bd70f60b9f69df0d4c72f64e8e72120"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a623be41f6ead4c1b3a33297cab805c3c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a623be41f6ead4c1b3a33297cab805c3c">getAnimProps</a> () const</td></tr>
<tr class="separator:a623be41f6ead4c1b3a33297cab805c3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89abb1f200d33a9899f3121f9dc7ac04"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a89abb1f200d33a9899f3121f9dc7ac04">update</a> (float delta) override</td></tr>
<tr class="separator:a89abb1f200d33a9899f3121f9dc7ac04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_context_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_context_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_context_object.htm">NovelTea::ContextObject</a></td></tr>
<tr class="memitem:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a729b81d65b38b86841e7c522070f9896">ContextObject</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a3bb9175b66933787a9a06e50bd6c1a06">~ContextObject</a> ()</td></tr>
<tr class="separator:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a67dd5b0a333964bb76c984abf8fa0e75">getContext</a> () const</td></tr>
<tr class="separator:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_hideable"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_hideable')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_hideable.htm">NovelTea::Hideable</a></td></tr>
<tr class="memitem:a12d7cd05519a5d5207989b7d4b82ebb4 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a12d7cd05519a5d5207989b7d4b82ebb4">Hideable</a> ()</td></tr>
<tr class="separator:a12d7cd05519a5d5207989b7d4b82ebb4 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b98ba9e1c9e89b9d332f43aa9fa9126 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a8b98ba9e1c9e89b9d332f43aa9fa9126">show</a> (float duration=0.5f, int tweenType=<a class="el" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a>, <a class="el" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a> callback=nullptr)</td></tr>
<tr class="separator:a8b98ba9e1c9e89b9d332f43aa9fa9126 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76fa776a3d7727831cdeb15d4e2eef4e inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a76fa776a3d7727831cdeb15d4e2eef4e">hide</a> (float duration=0.5f, int tweenType=<a class="el" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a>, <a class="el" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a> callback=nullptr)</td></tr>
<tr class="separator:a76fa776a3d7727831cdeb15d4e2eef4e inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac76ea54dea54daf6b8bbcf14601e6f26 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#ac76ea54dea54daf6b8bbcf14601e6f26">isHiding</a> () const</td></tr>
<tr class="separator:ac76ea54dea54daf6b8bbcf14601e6f26 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af234585b253f8c1e1b7ca153141d601f inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#af234585b253f8c1e1b7ca153141d601f">isShowing</a> () const</td></tr>
<tr class="separator:af234585b253f8c1e1b7ca153141d601f inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64bc792a8d223d1fe3af28a3bfa5f28f inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a64bc792a8d223d1fe3af28a3bfa5f28f">isVisible</a> () const</td></tr>
<tr class="separator:a64bc792a8d223d1fe3af28a3bfa5f28f inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a27f84889097eeabfc073b1caa7591326"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a27f84889097eeabfc073b1caa7591326">HIGHLIGHTS</a> = 12</td></tr>
<tr class="separator:a27f84889097eeabfc073b1caa7591326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ececa904cd0cf74542a9fb5297e90a6"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a1ececa904cd0cf74542a9fb5297e90a6">FADEACROSS</a> = 13</td></tr>
<tr class="separator:a1ececa904cd0cf74542a9fb5297e90a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f798895141b68de0adc5970aac79114"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a4f798895141b68de0adc5970aac79114">ANIMALPHA</a> = 14</td></tr>
<tr class="separator:a4f798895141b68de0adc5970aac79114"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00cf7df996259de815311a664950759a"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a00cf7df996259de815311a664950759a">EFFECT_FACTOR</a> = 15</td></tr>
<tr class="separator:a00cf7df996259de815311a664950759a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0ce082e536a19dad4b8dab562cbe63b"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#aa0ce082e536a19dad4b8dab562cbe63b">TREMBLE_FACTOR</a> = 16</td></tr>
<tr class="separator:aa0ce082e536a19dad4b8dab562cbe63b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e5d90e5889eccacfb4a447a7db778c3"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a2e5d90e5889eccacfb4a447a7db778c3">TEST_FACTOR</a> = 99</td></tr>
<tr class="separator:a2e5d90e5889eccacfb4a447a7db778c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_class_novel_tea_1_1_hideable"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_class_novel_tea_1_1_hideable')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="class_novel_tea_1_1_hideable.htm">NovelTea::Hideable</a></td></tr>
<tr class="memitem:a6f39b4d9736cf6703cf054d7e3d46421 inherit pub_static_attribs_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a> = 11</td></tr>
<tr class="separator:a6f39b4d9736cf6703cf054d7e3d46421 inherit pub_static_attribs_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_class_novel_tea_1_1_tween_transformable')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="class_novel_tea_1_1_tween_transformable.htm">NovelTea::TweenTransformable&lt; sf::Transformable &gt;</a></td></tr>
<tr class="memitem:a56e293277c3ae9fd17ac26f2ed784112 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#a56e293277c3ae9fd17ac26f2ed784112">POSITION_X</a></td></tr>
<tr class="separator:a56e293277c3ae9fd17ac26f2ed784112 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e2dc6bcdc2d4b728716a7754301cf20 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#a5e2dc6bcdc2d4b728716a7754301cf20">POSITION_Y</a></td></tr>
<tr class="separator:a5e2dc6bcdc2d4b728716a7754301cf20 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfbfa2feb31a865727de64cdb26f9f5c inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#adfbfa2feb31a865727de64cdb26f9f5c">POSITION_XY</a></td></tr>
<tr class="separator:adfbfa2feb31a865727de64cdb26f9f5c inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aece5f9cf708921b321a5e45a0335042f inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aece5f9cf708921b321a5e45a0335042f">ROTATION</a></td></tr>
<tr class="separator:aece5f9cf708921b321a5e45a0335042f inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac053265e1f837b67fbdcab22c884bc8 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aac053265e1f837b67fbdcab22c884bc8">SCALE_X</a></td></tr>
<tr class="separator:aac053265e1f837b67fbdcab22c884bc8 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac26faef3fe677f495860f9611bcf2c0 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aac26faef3fe677f495860f9611bcf2c0">SCALE_Y</a></td></tr>
<tr class="separator:aac26faef3fe677f495860f9611bcf2c0 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabe5467a6295c9f65e7789b1672e7d95 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aabe5467a6295c9f65e7789b1672e7d95">SCALE_XY</a></td></tr>
<tr class="separator:aabe5467a6295c9f65e7789b1672e7d95 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4488ca592901a607728bc67697c9bccd inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#a4488ca592901a607728bc67697c9bccd">ORIGIN_X</a></td></tr>
<tr class="separator:a4488ca592901a607728bc67697c9bccd inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ad7cc62481ab2f806cc27caf7c6af4 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#ac0ad7cc62481ab2f806cc27caf7c6af4">ORIGIN_Y</a></td></tr>
<tr class="separator:ac0ad7cc62481ab2f806cc27caf7c6af4 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2d9024961e54cebddb4f8437cc78ae3 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#ae2d9024961e54cebddb4f8437cc78ae3">ORIGIN_XY</a></td></tr>
<tr class="separator:ae2d9024961e54cebddb4f8437cc78ae3 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ab45a386104b59a3c456d154bd586083c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ab45a386104b59a3c456d154bd586083c">setValues</a> (int tweenType, float *newValues) override</td></tr>
<tr class="separator:ab45a386104b59a3c456d154bd586083c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83eea55d53b8fe92aa9748a547ebba5f"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a83eea55d53b8fe92aa9748a547ebba5f">getValues</a> (int tweenType, float *returnValues) override</td></tr>
<tr class="separator:a83eea55d53b8fe92aa9748a547ebba5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ab4189a25829541938699a2c0b58264"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a8ab4189a25829541938699a2c0b58264">setAnimAlpha</a> (float alpha)</td></tr>
<tr class="separator:a8ab4189a25829541938699a2c0b58264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abebb625d359e4e60ea31c0872ea5331d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#abebb625d359e4e60ea31c0872ea5331d">applyAlpha</a> () const</td></tr>
<tr class="separator:abebb625d359e4e60ea31c0872ea5331d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad06cabc4dd02d3b5d652004fc74140c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#ad06cabc4dd02d3b5d652004fc74140c4">applyHighlightFactor</a> () const</td></tr>
<tr class="separator:ad06cabc4dd02d3b5d652004fc74140c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99f2357bbcc4ab0123aa30c7446c3382"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a99f2357bbcc4ab0123aa30c7446c3382">draw</a> (sf::RenderTarget &amp;target, sf::RenderStates states) const override</td></tr>
<tr class="separator:a99f2357bbcc4ab0123aa30c7446c3382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44726d4e136aa53b20c6de6bdb4084e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm#a44726d4e136aa53b20c6de6bdb4084e0">ensureUpdate</a> () const</td></tr>
<tr class="separator:a44726d4e136aa53b20c6de6bdb4084e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_class_novel_tea_1_1_tween_transformable"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_novel_tea_1_1_tween_transformable')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="class_novel_tea_1_1_tween_transformable.htm">NovelTea::TweenTransformable&lt; sf::Transformable &gt;</a></td></tr>
<tr class="memitem:a56db1a0bd0a65ef2ab3eba405ab260a2 inherit pro_methods_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#a56db1a0bd0a65ef2ab3eba405ab260a2">getValues</a> (int tweenType, float *returnValues) override</td></tr>
<tr class="separator:a56db1a0bd0a65ef2ab3eba405ab260a2 inherit pro_methods_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa47eb1f1188ec7686fce289d9a8f61d6 inherit pro_methods_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aa47eb1f1188ec7686fce289d9a8f61d6">setValues</a> (int tweenType, float *newValues) override</td></tr>
<tr class="separator:aa47eb1f1188ec7686fce289d9a8f61d6 inherit pro_methods_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_class_novel_tea_1_1_hideable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_class_novel_tea_1_1_hideable')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_novel_tea_1_1_hideable.htm">NovelTea::Hideable</a></td></tr>
<tr class="memitem:a2211845b199240c4d450b6d85ca758ea inherit pro_attribs_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a2211845b199240c4d450b6d85ca758ea">m_isHiding</a></td></tr>
<tr class="separator:a2211845b199240c4d450b6d85ca758ea inherit pro_attribs_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a518f6cbfb4788bbd734e55a4bee6efa7 inherit pro_attribs_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a518f6cbfb4788bbd734e55a4bee6efa7">m_isShowing</a></td></tr>
<tr class="separator:a518f6cbfb4788bbd734e55a4bee6efa7 inherit pro_attribs_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a761f0d5a8a604e7ed1079bd6ec16b347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a761f0d5a8a604e7ed1079bd6ec16b347">&#9670;&nbsp;</a></span>ActiveTextSegment() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ActiveTextSegment::ActiveTextSegment </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4290688c4e96217918c3817fae2adec2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4290688c4e96217918c3817fae2adec2">&#9670;&nbsp;</a></span>ActiveTextSegment() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ActiveTextSegment::ActiveTextSegment </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_styled_segment.htm">StyledSegment</a> &gt;&gt; &amp;&#160;</td>
          <td class="paramname"><em>segments</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="abebb625d359e4e60ea31c0872ea5331d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abebb625d359e4e60ea31c0872ea5331d">&#9670;&nbsp;</a></span>applyAlpha()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::applyAlpha </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad06cabc4dd02d3b5d652004fc74140c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad06cabc4dd02d3b5d652004fc74140c4">&#9670;&nbsp;</a></span>applyHighlightFactor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::applyHighlightFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae26278cb3257eb3dd42b41ba9c5e33e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae26278cb3257eb3dd42b41ba9c5e33e5">&#9670;&nbsp;</a></span>createRenderTexture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::createRenderTexture </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a99f2357bbcc4ab0123aa30c7446c3382"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99f2357bbcc4ab0123aa30c7446c3382">&#9670;&nbsp;</a></span>draw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::draw </td>
          <td>(</td>
          <td class="paramtype">sf::RenderTarget &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sf::RenderStates&#160;</td>
          <td class="paramname"><em>states</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a44726d4e136aa53b20c6de6bdb4084e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44726d4e136aa53b20c6de6bdb4084e0">&#9670;&nbsp;</a></span>ensureUpdate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::ensureUpdate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a74d2161c2fb5bc6f010da80579035aeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74d2161c2fb5bc6f010da80579035aeb">&#9670;&nbsp;</a></span>fromJson()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ActiveTextSegment::fromJson </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;&#160;</td>
          <td class="paramname"><em>j</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_json_serializable.htm#ae003542ca43c09adb7f78d52a645a1a8">NovelTea::JsonSerializable</a>.</p>

</div>
</div>
<a id="ab2868d2b0472b6fbca58bb7ec6e2f641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2868d2b0472b6fbca58bb7ec6e2f641">&#9670;&nbsp;</a></span>getAlpha()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getAlpha </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_hideable.htm#a4c7f04eff8e80563d8c9f046b97cada2">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a623be41f6ead4c1b3a33297cab805c3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a623be41f6ead4c1b3a33297cab805c3c">&#9670;&nbsp;</a></span>getAnimProps()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a>&amp; NovelTea::ActiveTextSegment::getAnimProps </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae606a87b58c61442121606a6518109fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae606a87b58c61442121606a6518109fe">&#9670;&nbsp;</a></span>getCurrentCodePoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Uint32 NovelTea::ActiveTextSegment::getCurrentCodePoint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac02d8c0bcd2839102d6b0314c5799df2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac02d8c0bcd2839102d6b0314c5799df2">&#9670;&nbsp;</a></span>getCurrentLineMaxHeight()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NovelTea::ActiveTextSegment::getCurrentLineMaxHeight </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac44463fdbd65ac8e8103a9244d0cdf67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac44463fdbd65ac8e8103a9244d0cdf67">&#9670;&nbsp;</a></span>getCursorEnd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const sf::Vector2f&amp; NovelTea::ActiveTextSegment::getCursorEnd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0fdc1b8758e9bf355d004a251e6e17b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fdc1b8758e9bf355d004a251e6e17b4">&#9670;&nbsp;</a></span>getDelayMs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t NovelTea::ActiveTextSegment::getDelayMs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad3b4a131b731ab72d77c4580223102a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3b4a131b731ab72d77c4580223102a4">&#9670;&nbsp;</a></span>getDurationMs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t NovelTea::ActiveTextSegment::getDurationMs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9204b70fdb04f471bd62a870a3e164f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9204b70fdb04f471bd62a870a3e164f0">&#9670;&nbsp;</a></span>getEffectFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getEffectFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6d35872604d3197ffccfe7e617b2d43e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d35872604d3197ffccfe7e617b2d43e">&#9670;&nbsp;</a></span>getFadeAcrossLength()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getFadeAcrossLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a933ad87e622ef59e62f7c8489eac06e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a933ad87e622ef59e62f7c8489eac06e2">&#9670;&nbsp;</a></span>getFadeAcrossPosition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getFadeAcrossPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4c152e5b6d38fbc2a6e2305cc969094"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4c152e5b6d38fbc2a6e2305cc969094">&#9670;&nbsp;</a></span>getFontSizeMultiplier()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getFontSizeMultiplier </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abda11422f5fd3cee169e36402b9b5b21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abda11422f5fd3cee169e36402b9b5b21">&#9670;&nbsp;</a></span>getGlobalBounds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::FloatRect NovelTea::ActiveTextSegment::getGlobalBounds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1e0e5dd1012e273f373a06d99120e61a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e0e5dd1012e273f373a06d99120e61a">&#9670;&nbsp;</a></span>getHighlightFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getHighlightFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2a0d22a9f1d87003afaf8975c71e39d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a0d22a9f1d87003afaf8975c71e39d8">&#9670;&nbsp;</a></span>getLineSpacing()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getLineSpacing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a86ac0a2244c04cda490f0fd6d6d06673"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86ac0a2244c04cda490f0fd6d6d06673">&#9670;&nbsp;</a></span>getLocalBounds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::FloatRect NovelTea::ActiveTextSegment::getLocalBounds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6bd70f60b9f69df0d4c72f64e8e72120"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bd70f60b9f69df0d4c72f64e8e72120">&#9670;&nbsp;</a></span>getSegments()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="struct_novel_tea_1_1_active_text_segment_1_1_segment.htm">Segment</a>&gt;&amp; NovelTea::ActiveTextSegment::getSegments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7d280b85b1acdf7c40720cda7937b012"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d280b85b1acdf7c40720cda7937b012">&#9670;&nbsp;</a></span>getSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Vector2f NovelTea::ActiveTextSegment::getSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac02fba0fb10e0ec73e77c1ea757ba32e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac02fba0fb10e0ec73e77c1ea757ba32e">&#9670;&nbsp;</a></span>getTestFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getTestFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a897d71cd9abcf23d57d8a5cf44da1f8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a897d71cd9abcf23d57d8a5cf44da1f8d">&#9670;&nbsp;</a></span>getText()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::ActiveTextSegment::getText </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a529fd1c627c38f81df719e4dfda092cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a529fd1c627c38f81df719e4dfda092cb">&#9670;&nbsp;</a></span>getTextWidth()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getTextWidth </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acf6a5e43cea47605a61df3d889f543e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf6a5e43cea47605a61df3d889f543e1">&#9670;&nbsp;</a></span>getTrembleFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveTextSegment::getTrembleFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a83eea55d53b8fe92aa9748a547ebba5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83eea55d53b8fe92aa9748a547ebba5f">&#9670;&nbsp;</a></span>getValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int NovelTea::ActiveTextSegment::getValues </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>tweenType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>returnValues</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="class_novel_tea_1_1_hideable.htm#aa27aad642308869f8fd0e4ef0e2f173c">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a454cb8bec14008d3d60550b4ee94d716"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a454cb8bec14008d3d60550b4ee94d716">&#9670;&nbsp;</a></span>objectFromPoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::ActiveTextSegment::objectFromPoint </td>
          <td>(</td>
          <td class="paramtype">const sf::Vector2f &amp;&#160;</td>
          <td class="paramname"><em>point</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad600b2b9f4c87284e08619df8595c287"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad600b2b9f4c87284e08619df8595c287">&#9670;&nbsp;</a></span>refresh()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::refresh </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a20d03efad514ba18771231a1219ecf59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20d03efad514ba18771231a1219ecf59">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae1081f1364b8ce24b2bdff7b3d258e90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1081f1364b8ce24b2bdff7b3d258e90">&#9670;&nbsp;</a></span>setAlpha()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setAlpha </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_hideable.htm#a4c99e8c78d370fc069f062cb31036f06">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a8ab4189a25829541938699a2c0b58264"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ab4189a25829541938699a2c0b58264">&#9670;&nbsp;</a></span>setAnimAlpha()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setAnimAlpha </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a649f0ff07211c628adf6a8b5d0170eca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a649f0ff07211c628adf6a8b5d0170eca">&#9670;&nbsp;</a></span>setCursorStart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setCursorStart </td>
          <td>(</td>
          <td class="paramtype">const sf::Vector2f &amp;&#160;</td>
          <td class="paramname"><em>cursorPos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad0f8dd6f4ed4e3d7d477cbd4f27f3a72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0f8dd6f4ed4e3d7d477cbd4f27f3a72">&#9670;&nbsp;</a></span>setEffectFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setEffectFactor </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>effectFactor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9fcffe9fe81f311a9fbde1d32f8eb053"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fcffe9fe81f311a9fbde1d32f8eb053">&#9670;&nbsp;</a></span>setFadeAcrossPosition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setFadeAcrossPosition </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5842e69fa4d18a338fac6fd6bf4dd816"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5842e69fa4d18a338fac6fd6bf4dd816">&#9670;&nbsp;</a></span>setFontSizeMultiplier()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setFontSizeMultiplier </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fontSizeMultiplier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6085d5d38067a24f3d24115888b85ec7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6085d5d38067a24f3d24115888b85ec7">&#9670;&nbsp;</a></span>setHighlightFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setHighlightFactor </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>highlightFactor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a816e3c984637cf5b7a7034b3068bc5af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a816e3c984637cf5b7a7034b3068bc5af">&#9670;&nbsp;</a></span>setHighlightId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setHighlightId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae7532f25eb7696b468cdd30afdfbd588"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7532f25eb7696b468cdd30afdfbd588">&#9670;&nbsp;</a></span>setLastCodePoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setLastCodePoint </td>
          <td>(</td>
          <td class="paramtype">sf::Uint32&#160;</td>
          <td class="paramname"><em>codePoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ace4de902c4690230d42e19f23d714370"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace4de902c4690230d42e19f23d714370">&#9670;&nbsp;</a></span>setLastLineMaxHeight()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setLastLineMaxHeight </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>height</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afdde978bc6d6cd7382ab1330b6c3fa29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdde978bc6d6cd7382ab1330b6c3fa29">&#9670;&nbsp;</a></span>setLineSpacing()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setLineSpacing </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>lineSpacing</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adb83b4af04cf8aa5dbcc679e0b754d41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb83b4af04cf8aa5dbcc679e0b754d41">&#9670;&nbsp;</a></span>setSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setSize </td>
          <td>(</td>
          <td class="paramtype">const sf::Vector2f &amp;&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a36aa1cd9a55bc477057acac4143046d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36aa1cd9a55bc477057acac4143046d5">&#9670;&nbsp;</a></span>setStyledSegments()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setStyledSegments </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_styled_segment.htm">StyledSegment</a> &gt;&gt; &amp;&#160;</td>
          <td class="paramname"><em>segments</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1286d1a5add24f0737c8c9fad95b07dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1286d1a5add24f0737c8c9fad95b07dc">&#9670;&nbsp;</a></span>setTestFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setTestFactor </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>testFactor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a45451c99e17a04f1ee64bf8724ea03c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45451c99e17a04f1ee64bf8724ea03c0">&#9670;&nbsp;</a></span>setText() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7e0401aac3ed5aa276d455c42b0dc5d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e0401aac3ed5aa276d455c42b0dc5d0">&#9670;&nbsp;</a></span>setText() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>animProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a949144da9156c3749a2d60c27cd9f28e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a949144da9156c3749a2d60c27cd9f28e">&#9670;&nbsp;</a></span>setText() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8081892987fcd175582566d57d77269b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8081892987fcd175582566d57d77269b">&#9670;&nbsp;</a></span>setText() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>animProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aec6a24678b4db379e97909dfc11b1f60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec6a24678b4db379e97909dfc11b1f60">&#9670;&nbsp;</a></span>setTrembleFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::setTrembleFactor </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>trembleFactor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab45a386104b59a3c456d154bd586083c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab45a386104b59a3c456d154bd586083c">&#9670;&nbsp;</a></span>setValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void NovelTea::ActiveTextSegment::setValues </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>tweenType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>newValues</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="class_novel_tea_1_1_hideable.htm#a290ab34fb2677f905a61eca090e87160">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a654a5e7f226a0ded8cf0814e50199572"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a654a5e7f226a0ded8cf0814e50199572">&#9670;&nbsp;</a></span>startAnim()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveTextSegment::startAnim </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2ea4be28cdc36f3a1c1893287d218abe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ea4be28cdc36f3a1c1893287d218abe">&#9670;&nbsp;</a></span>toJson()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> NovelTea::ActiveTextSegment::toJson </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_json_serializable.htm#aa116dd335d830980735bd9e27f9ef8a5">NovelTea::JsonSerializable</a>.</p>

</div>
</div>
<a id="ae284d4bba5ba696a0e12d76a04cde11a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae284d4bba5ba696a0e12d76a04cde11a">&#9670;&nbsp;</a></span>toPlainText()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::ActiveTextSegment::toPlainText </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>stripBBCodes</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>newlineChar</em> = <code>&quot;\n&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a89abb1f200d33a9899f3121f9dc7ac04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89abb1f200d33a9899f3121f9dc7ac04">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ActiveTextSegment::update </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>delta</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="class_novel_tea_1_1_hideable.htm#ace08cfc16384aeceb5abb77ed3cdccc0">NovelTea::Hideable</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a4f798895141b68de0adc5970aac79114"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f798895141b68de0adc5970aac79114">&#9670;&nbsp;</a></span>ANIMALPHA</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int NovelTea::ActiveTextSegment::ANIMALPHA = 14</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a00cf7df996259de815311a664950759a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00cf7df996259de815311a664950759a">&#9670;&nbsp;</a></span>EFFECT_FACTOR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int NovelTea::ActiveTextSegment::EFFECT_FACTOR = 15</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ececa904cd0cf74542a9fb5297e90a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ececa904cd0cf74542a9fb5297e90a6">&#9670;&nbsp;</a></span>FADEACROSS</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int NovelTea::ActiveTextSegment::FADEACROSS = 13</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a27f84889097eeabfc073b1caa7591326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27f84889097eeabfc073b1caa7591326">&#9670;&nbsp;</a></span>HIGHLIGHTS</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int NovelTea::ActiveTextSegment::HIGHLIGHTS = 12</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2e5d90e5889eccacfb4a447a7db778c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e5d90e5889eccacfb4a447a7db778c3">&#9670;&nbsp;</a></span>TEST_FACTOR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int NovelTea::ActiveTextSegment::TEST_FACTOR = 99</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa0ce082e536a19dad4b8dab562cbe63b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0ce082e536a19dad4b8dab562cbe63b">&#9670;&nbsp;</a></span>TREMBLE_FACTOR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int NovelTea::ActiveTextSegment::TREMBLE_FACTOR = 16</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/NovelTea/<a class="el" href="_active_text_segment_8hpp_source.htm">ActiveTextSegment.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_novel_tea.htm">NovelTea</a></li><li class="navelem"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm">ActiveTextSegment</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
