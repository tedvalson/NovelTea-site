<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: include/NovelTea/ActiveText.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_active_text_8hpp_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ActiveText.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_active_text_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef NOVELTEA_ACTIVETEXT_HPP</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define NOVELTEA_ACTIVETEXT_HPP</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_context_object_8hpp.htm">NovelTea/ContextObject.hpp</a>&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_json_serializable_8hpp.htm">NovelTea/JsonSerializable.hpp</a>&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_hideable_8hpp.htm">NovelTea/GUI/Hideable.hpp</a>&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_utils_8hpp.htm">NovelTea/Utils.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;SFML/Graphics/Drawable.hpp&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;SFML/System/Time.hpp&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_novel_tea.htm">NovelTea</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">class </span>ActiveTextSegment;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">class </span>CutsceneTextSegment;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">struct </span>AnimationProperties;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">struct </span>TextProperties;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">   19</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">ActiveTextCallback</a> = std::function&lt;void()&gt;;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm">   21</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_novel_tea_1_1_active_text.htm">ActiveText</a> : <span class="keyword">public</span> <a class="code" href="class_novel_tea_1_1_context_object.htm">ContextObject</a>, <span class="keyword">public</span> sf::Drawable, <span class="keyword">public</span> <a class="code" href="class_novel_tea_1_1_hideable.htm">Hideable</a></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a291857c5c375e00ca871f4c636fd51dc">   24</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a291857c5c375e00ca871f4c636fd51dc">HIGHLIGHTS</a> = 12;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a0c7b0f8d9c1def117611065b3c791d28">   26</a></span>&#160;    <a class="code" href="class_novel_tea_1_1_active_text.htm#a0c7b0f8d9c1def117611065b3c791d28">ActiveText</a>(<a class="code" href="class_novel_tea_1_1_context.htm">Context</a> *context);</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a455ba6ea76e94344391abee240d01fb9">   27</a></span>&#160;    <a class="code" href="class_novel_tea_1_1_active_text.htm#a455ba6ea76e94344391abee240d01fb9">ActiveText</a>(<a class="code" href="class_novel_tea_1_1_context.htm">Context</a> *context, <span class="keyword">const</span> std::string &amp;text);</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a81b7707a59c97965b96a67ae5a689d8b">   28</a></span>&#160;    <a class="code" href="class_novel_tea_1_1_active_text.htm#a81b7707a59c97965b96a67ae5a689d8b">ActiveText</a>(<a class="code" href="class_novel_tea_1_1_context.htm">Context</a> *context, <span class="keyword">const</span> std::string &amp;text, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animDefault);</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a047b1fdd34761fa4ae6f9297632005c9">   29</a></span>&#160;    <a class="code" href="class_novel_tea_1_1_active_text.htm#a047b1fdd34761fa4ae6f9297632005c9">ActiveText</a>(<a class="code" href="class_novel_tea_1_1_context.htm">Context</a> *context, <span class="keyword">const</span> std::string &amp;text, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps);</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a4435a6fcdeaf34f312351ad3671f71ee">   30</a></span>&#160;    <a class="code" href="class_novel_tea_1_1_active_text.htm#a4435a6fcdeaf34f312351ad3671f71ee">ActiveText</a>(<a class="code" href="class_novel_tea_1_1_context.htm">Context</a> *context, <span class="keyword">const</span> std::string &amp;text, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a3c1c79852b4d3c6052734c26914d3671">   32</a></span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;ActiveText&gt; <a class="code" href="class_novel_tea_1_1_active_text.htm#a3c1c79852b4d3c6052734c26914d3671">fromCutsceneTextSegment</a>(<span class="keyword">const</span> <a class="code" href="class_novel_tea_1_1_cutscene_text_segment.htm">CutsceneTextSegment</a> *segment);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a36940f4db84b24454ee984644fadc2f9">   34</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a36940f4db84b24454ee984644fadc2f9">reset</a>(<span class="keywordtype">bool</span> preservePosition = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a95323a92512717d399f0e3c79e86c90d">   35</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a95323a92512717d399f0e3c79e86c90d">skipToNext</a>(<span class="keywordtype">bool</span> skipWaitForClick = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#aa46d98df68528922e5e09ad8c9db8eaa">   37</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#aa46d98df68528922e5e09ad8c9db8eaa">setText</a>(<span class="keyword">const</span> std::string &amp;text);</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#afe6a1216c31a6f68bbd8e5f15889ace3">   38</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#afe6a1216c31a6f68bbd8e5f15889ace3">setText</a>(<span class="keyword">const</span> std::string &amp;text, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps);</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a72908bd225a9aff58fb2cee84b3d8341">   39</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a72908bd225a9aff58fb2cee84b3d8341">setText</a>(<span class="keyword">const</span> std::string &amp;text, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps);</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#aa4cbd180ed501ba3900167d7eed9418a">   40</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#aa4cbd180ed501ba3900167d7eed9418a">setText</a>(<span class="keyword">const</span> std::string &amp;text, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps);</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a7ab90e08b1ce5d25dab2fe239e6ffcc0">   41</a></span>&#160;    <span class="keyword">const</span> std::string&amp; <a class="code" href="class_novel_tea_1_1_active_text.htm#a7ab90e08b1ce5d25dab2fe239e6ffcc0">getText</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a32e3754642454663f53032d9407eea31">   43</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a32e3754642454663f53032d9407eea31">updateProps</a>(<span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps);</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a6acb85a5fc210dce36062769f3b30048">   44</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a6acb85a5fc210dce36062769f3b30048">updateProps</a>(<span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a4e41a8dfb30145f86d4cf9a157a37a1f">   46</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a4e41a8dfb30145f86d4cf9a157a37a1f">show</a>(<span class="keywordtype">float</span> duration = 0.5f, <span class="keywordtype">int</span> tweenType = <a class="code" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a>, <a class="code" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a> callback = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a106708a8823c1315695e83cec6ef92a6">   47</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a106708a8823c1315695e83cec6ef92a6">hide</a>(<span class="keywordtype">float</span> duration = 0.5f, <span class="keywordtype">int</span> tweenType = <a class="code" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a>, <a class="code" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a> callback = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a97945d7a435f977a6a3e082d49e6bb44">   49</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a97945d7a435f977a6a3e082d49e6bb44">setSize</a>(<span class="keyword">const</span> sf::Vector2f &amp;size);</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#aa12e32866a355ba0ca2685d6ab9cf3f2">   50</a></span>&#160;    sf::Vector2f <a class="code" href="class_novel_tea_1_1_active_text.htm#aa12e32866a355ba0ca2685d6ab9cf3f2">getSize</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a27e7b48fa0a9a0663e1d5e94a14813aa">   52</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a27e7b48fa0a9a0663e1d5e94a14813aa">setFontSizeMultiplier</a>(<span class="keywordtype">float</span> fontSizeMultiplier);</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a396844c51a7aada41d76ba3b8d39880d">   53</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a396844c51a7aada41d76ba3b8d39880d">getFontSizeMultiplier</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a9addc942e896bb442f1f8022334e1aa7">   55</a></span>&#160;    sf::FloatRect <a class="code" href="class_novel_tea_1_1_active_text.htm#a9addc942e896bb442f1f8022334e1aa7">getLocalBounds</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#ad324e0fee996c2b0703918759e11cb64">   56</a></span>&#160;    sf::FloatRect <a class="code" href="class_novel_tea_1_1_active_text.htm#ad324e0fee996c2b0703918759e11cb64">getGlobalBounds</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a95555cf3de7d36d5a5165131276f5637">   58</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a95555cf3de7d36d5a5165131276f5637">setCursorStart</a>(<span class="keyword">const</span> sf::Vector2f &amp;cursorPos);</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a167613a4266bbdac71c9063d04abcd9b">   59</a></span>&#160;    <span class="keyword">const</span> sf::Vector2f &amp;<a class="code" href="class_novel_tea_1_1_active_text.htm#a167613a4266bbdac71c9063d04abcd9b">getCursorPosition</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#ac02f880233cb6fc27624a6187be7c46e">   60</a></span>&#160;    <span class="keyword">const</span> sf::Vector2f &amp;<a class="code" href="class_novel_tea_1_1_active_text.htm#ac02f880233cb6fc27624a6187be7c46e">getCursorEnd</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#ad88f09d2fb7b89de276c75015334d5ee">   62</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#ad88f09d2fb7b89de276c75015334d5ee">setHighlightFactor</a>(<span class="keywordtype">float</span> highlightFactor);</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#abd7b76cb4f721a270f90b00ac927080b">   63</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#abd7b76cb4f721a270f90b00ac927080b">getHighlightFactor</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a46f6ec34bd762624d0c9579ad8c8ad78">   65</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a46f6ec34bd762624d0c9579ad8c8ad78">setLineSpacing</a>(<span class="keywordtype">float</span> lineSpacing);</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#ac6289201394efbb3b41183976ee1082e">   66</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#ac6289201394efbb3b41183976ee1082e">getLineSpacing</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a7b53edee870153050e1ec51dda3dec5a">   68</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a7b53edee870153050e1ec51dda3dec5a">setAlpha</a>(<span class="keywordtype">float</span> alpha) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#aab571593a8827080105067c41302633a">   69</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#aab571593a8827080105067c41302633a">getAlpha</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a73be55cba080159820a6f60fe8a890d8">   71</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a73be55cba080159820a6f60fe8a890d8">update</a>(<span class="keywordtype">float</span> delta) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#ae2b2e06634605b29def14fc6721cfc3e">   73</a></span>&#160;    std::string <a class="code" href="class_novel_tea_1_1_active_text.htm#ae2b2e06634605b29def14fc6721cfc3e">toPlainText</a>(<span class="keywordtype">bool</span> stripBBCodes = <span class="keyword">false</span>, <span class="keyword">const</span> std::string &amp;newlineChar = <span class="stringliteral">&quot;\n&quot;</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#adabb521fff2c93a658a1257780367fc9">   74</a></span>&#160;    std::string <a class="code" href="class_novel_tea_1_1_active_text.htm#adabb521fff2c93a658a1257780367fc9">objectFromPoint</a>(<span class="keyword">const</span> sf::Vector2f &amp;point) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#af51eed1cf327e1ac3e909b5798dccfbf">   76</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#af51eed1cf327e1ac3e909b5798dccfbf">setHighlightId</a>(<span class="keyword">const</span> std::string &amp;<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a7d91804ace4b0c23d4ae0ed3ca68e958">   78</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a7d91804ace4b0c23d4ae0ed3ca68e958">isAnimating</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a9dede57dbac29c8d26b6608c477f379d">   79</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a9dede57dbac29c8d26b6608c477f379d">isComplete</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#adf504d9b6e913d000ec1447e6761b0f2">   80</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#adf504d9b6e913d000ec1447e6761b0f2">isWaitingForClick</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a3e3d33bb995d7bc502f0190ea9131f62">   81</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a3e3d33bb995d7bc502f0190ea9131f62">click</a>();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a4ee196c0aa533b15d243a5d45eb56139">   83</a></span>&#160;    <span class="keyword">const</span> sf::Time &amp;<a class="code" href="class_novel_tea_1_1_active_text.htm#a4ee196c0aa533b15d243a5d45eb56139">getTimeToNext</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a0150b5ec5e6b96dfa6f988cd112f53ab">   84</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector&lt;ActiveTextSegment&gt;</a>&amp; <a class="code" href="class_novel_tea_1_1_active_text.htm#a0150b5ec5e6b96dfa6f988cd112f53ab">getSegments</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a7e1b3b78259e42be67a05724b9e7e06f">   86</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a7e1b3b78259e42be67a05724b9e7e06f">getDurationMs</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a1db2512232c27ac8482d9528810cf473">   87</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a1db2512232c27ac8482d9528810cf473">getDurationMs</a>(<span class="keywordtype">size_t</span> indexEnd) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a9fc8c96b4b787e071592ad10a198af0a">   89</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a9fc8c96b4b787e071592ad10a198af0a">getDelayMs</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a96de5ee5c8f090f203d5ebc798d761e6">   90</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a96de5ee5c8f090f203d5ebc798d761e6">getDelayMs</a>(<span class="keywordtype">size_t</span> indexEnd) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a55223fd9973d60a095012b6ecdb3f088">   92</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a55223fd9973d60a095012b6ecdb3f088">onComplete</a>(<a class="code" href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">ActiveTextCallback</a> callback);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="_utils_8hpp.htm#a4a99ae6d1008fddb40366bdc41aca3a8">ADD_ACCESSOR</a>(<span class="keywordtype">bool</span>, SkipWaitingForClick, m_skipWaitingForClick)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a575dc868ef13cb94c99977f86de4b3f2">   97</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a575dc868ef13cb94c99977f86de4b3f2">draw</a>(sf::RenderTarget&amp; target, sf::RenderStates states) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#aa61dfde96d1e9911465591fbc18e01dc">   98</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#aa61dfde96d1e9911465591fbc18e01dc">setValues</a>(<span class="keywordtype">int</span> tweenType, <span class="keywordtype">float</span> *newValues) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#ae64265b27795561a46df1ce3e65e1621">   99</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#ae64265b27795561a46df1ce3e65e1621">getValues</a>(<span class="keywordtype">int</span> tweenType, <span class="keywordtype">float</span> *returnValues) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a0a9f0cfcd17ded2c44db55287537edb8">  101</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a0a9f0cfcd17ded2c44db55287537edb8">addSegmentToQueue</a>(<span class="keywordtype">size_t</span> segmentIndex);</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#afbfb89d77746e4719cb1c2b9186cfbf3">  102</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#afbfb89d77746e4719cb1c2b9186cfbf3">buildSegments</a>(<span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps);</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_active_text.htm#a8945004da33a10c8146a8176603b3594">  103</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_active_text.htm#a8945004da33a10c8146a8176603b3594">updateSegments</a>(<span class="keywordtype">float</span> delta);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">float</span> m_alpha;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">float</span> m_fontSizeMultiplier;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">float</span> m_highlightFactor;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">float</span> m_lineSpacing;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">int</span> m_segmentIndex;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordtype">bool</span> m_isAnimating;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">bool</span> m_isComplete;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">bool</span> m_isWaitingForClick;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">bool</span> m_skipWaitingForClick;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    TweenEngine::TweenManager m_tweenManager;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    std::string m_text;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    std::string m_highlightId;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    sf::Vector2f m_size;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    sf::Vector2f m_cursorPos;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    sf::Vector2f m_cursorEnd;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    sf::Vector2f m_cursorStart;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector&lt;ActiveTextSegment&gt;</a> m_segments;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector&lt;ActiveTextSegment&gt;</a> m_segmentsActive;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    std::shared_ptr&lt;ActiveTextSegment&gt; m_currentSegment;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">ActiveTextCallback</a> m_callback;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    sf::Time m_timePassed;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    sf::Time m_timeToNext;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;};</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;} <span class="comment">// namespace NovelTea</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// NOVELTEA_ACTIVETEXT_HPP</span></div>
<div class="ttc" id="a_context_object_8hpp_htm"><div class="ttname"><a href="_context_object_8hpp.htm">ContextObject.hpp</a></div></div>
<div class="ttc" id="a_hideable_8hpp_htm"><div class="ttname"><a href="_hideable_8hpp.htm">Hideable.hpp</a></div></div>
<div class="ttc" id="a_json_serializable_8hpp_htm"><div class="ttname"><a href="_json_serializable_8hpp.htm">JsonSerializable.hpp</a></div></div>
<div class="ttc" id="a_utils_8hpp_htm"><div class="ttname"><a href="_utils_8hpp.htm">Utils.hpp</a></div></div>
<div class="ttc" id="a_utils_8hpp_htm_a4a99ae6d1008fddb40366bdc41aca3a8"><div class="ttname"><a href="_utils_8hpp.htm#a4a99ae6d1008fddb40366bdc41aca3a8">ADD_ACCESSOR</a></div><div class="ttdeci">#define ADD_ACCESSOR(type, name, var)</div><div class="ttdef"><b>Definition:</b> Utils.hpp:9</div></div>
<div class="ttc" id="a_utils_8hpp_htm_acb62529b1a3ee878693e4c4c8e98c28a"><div class="ttname"><a href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector</a></div><div class="ttdeci">std::vector&lt; std::shared_ptr&lt; T &gt; &gt; SharedVector</div><div class="ttdef"><b>Definition:</b> Utils.hpp:19</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm">NovelTea::ActiveText</a></div><div class="ttdef"><b>Definition:</b> ActiveText.hpp:22</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a0150b5ec5e6b96dfa6f988cd112f53ab"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a0150b5ec5e6b96dfa6f988cd112f53ab">NovelTea::ActiveText::getSegments</a></div><div class="ttdeci">const SharedVector&lt; ActiveTextSegment &gt; &amp; getSegments() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a047b1fdd34761fa4ae6f9297632005c9"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a047b1fdd34761fa4ae6f9297632005c9">NovelTea::ActiveText::ActiveText</a></div><div class="ttdeci">ActiveText(Context *context, const std::string &amp;text, const TextProperties &amp;textProps)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a0a9f0cfcd17ded2c44db55287537edb8"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a0a9f0cfcd17ded2c44db55287537edb8">NovelTea::ActiveText::addSegmentToQueue</a></div><div class="ttdeci">void addSegmentToQueue(size_t segmentIndex)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a0c7b0f8d9c1def117611065b3c791d28"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a0c7b0f8d9c1def117611065b3c791d28">NovelTea::ActiveText::ActiveText</a></div><div class="ttdeci">ActiveText(Context *context)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a106708a8823c1315695e83cec6ef92a6"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a106708a8823c1315695e83cec6ef92a6">NovelTea::ActiveText::hide</a></div><div class="ttdeci">void hide(float duration=0.5f, int tweenType=ALPHA, HideableCallback callback=nullptr) override</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a167613a4266bbdac71c9063d04abcd9b"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a167613a4266bbdac71c9063d04abcd9b">NovelTea::ActiveText::getCursorPosition</a></div><div class="ttdeci">const sf::Vector2f &amp; getCursorPosition() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a1db2512232c27ac8482d9528810cf473"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a1db2512232c27ac8482d9528810cf473">NovelTea::ActiveText::getDurationMs</a></div><div class="ttdeci">size_t getDurationMs(size_t indexEnd) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a27e7b48fa0a9a0663e1d5e94a14813aa"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a27e7b48fa0a9a0663e1d5e94a14813aa">NovelTea::ActiveText::setFontSizeMultiplier</a></div><div class="ttdeci">void setFontSizeMultiplier(float fontSizeMultiplier)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a291857c5c375e00ca871f4c636fd51dc"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a291857c5c375e00ca871f4c636fd51dc">NovelTea::ActiveText::HIGHLIGHTS</a></div><div class="ttdeci">static const int HIGHLIGHTS</div><div class="ttdef"><b>Definition:</b> ActiveText.hpp:24</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a32e3754642454663f53032d9407eea31"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a32e3754642454663f53032d9407eea31">NovelTea::ActiveText::updateProps</a></div><div class="ttdeci">void updateProps(const TextProperties &amp;textProps, const AnimationProperties &amp;animProps)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a36940f4db84b24454ee984644fadc2f9"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a36940f4db84b24454ee984644fadc2f9">NovelTea::ActiveText::reset</a></div><div class="ttdeci">void reset(bool preservePosition=false)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a396844c51a7aada41d76ba3b8d39880d"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a396844c51a7aada41d76ba3b8d39880d">NovelTea::ActiveText::getFontSizeMultiplier</a></div><div class="ttdeci">float getFontSizeMultiplier() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a3c1c79852b4d3c6052734c26914d3671"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a3c1c79852b4d3c6052734c26914d3671">NovelTea::ActiveText::fromCutsceneTextSegment</a></div><div class="ttdeci">static std::shared_ptr&lt; ActiveText &gt; fromCutsceneTextSegment(const CutsceneTextSegment *segment)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a3e3d33bb995d7bc502f0190ea9131f62"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a3e3d33bb995d7bc502f0190ea9131f62">NovelTea::ActiveText::click</a></div><div class="ttdeci">void click()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a4435a6fcdeaf34f312351ad3671f71ee"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a4435a6fcdeaf34f312351ad3671f71ee">NovelTea::ActiveText::ActiveText</a></div><div class="ttdeci">ActiveText(Context *context, const std::string &amp;text, const TextProperties &amp;textProps, const AnimationProperties &amp;animProps)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a455ba6ea76e94344391abee240d01fb9"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a455ba6ea76e94344391abee240d01fb9">NovelTea::ActiveText::ActiveText</a></div><div class="ttdeci">ActiveText(Context *context, const std::string &amp;text)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a46f6ec34bd762624d0c9579ad8c8ad78"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a46f6ec34bd762624d0c9579ad8c8ad78">NovelTea::ActiveText::setLineSpacing</a></div><div class="ttdeci">void setLineSpacing(float lineSpacing)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a4e41a8dfb30145f86d4cf9a157a37a1f"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a4e41a8dfb30145f86d4cf9a157a37a1f">NovelTea::ActiveText::show</a></div><div class="ttdeci">void show(float duration=0.5f, int tweenType=ALPHA, HideableCallback callback=nullptr) override</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a4ee196c0aa533b15d243a5d45eb56139"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a4ee196c0aa533b15d243a5d45eb56139">NovelTea::ActiveText::getTimeToNext</a></div><div class="ttdeci">const sf::Time &amp; getTimeToNext() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a55223fd9973d60a095012b6ecdb3f088"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a55223fd9973d60a095012b6ecdb3f088">NovelTea::ActiveText::onComplete</a></div><div class="ttdeci">void onComplete(ActiveTextCallback callback)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a575dc868ef13cb94c99977f86de4b3f2"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a575dc868ef13cb94c99977f86de4b3f2">NovelTea::ActiveText::draw</a></div><div class="ttdeci">void draw(sf::RenderTarget &amp;target, sf::RenderStates states) const override</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a6acb85a5fc210dce36062769f3b30048"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a6acb85a5fc210dce36062769f3b30048">NovelTea::ActiveText::updateProps</a></div><div class="ttdeci">void updateProps(const TextProperties &amp;textProps)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a72908bd225a9aff58fb2cee84b3d8341"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a72908bd225a9aff58fb2cee84b3d8341">NovelTea::ActiveText::setText</a></div><div class="ttdeci">void setText(const std::string &amp;text, const TextProperties &amp;textProps)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a73be55cba080159820a6f60fe8a890d8"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a73be55cba080159820a6f60fe8a890d8">NovelTea::ActiveText::update</a></div><div class="ttdeci">bool update(float delta) override</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a7ab90e08b1ce5d25dab2fe239e6ffcc0"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a7ab90e08b1ce5d25dab2fe239e6ffcc0">NovelTea::ActiveText::getText</a></div><div class="ttdeci">const std::string &amp; getText() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a7b53edee870153050e1ec51dda3dec5a"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a7b53edee870153050e1ec51dda3dec5a">NovelTea::ActiveText::setAlpha</a></div><div class="ttdeci">void setAlpha(float alpha) override</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a7d91804ace4b0c23d4ae0ed3ca68e958"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a7d91804ace4b0c23d4ae0ed3ca68e958">NovelTea::ActiveText::isAnimating</a></div><div class="ttdeci">bool isAnimating() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a7e1b3b78259e42be67a05724b9e7e06f"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a7e1b3b78259e42be67a05724b9e7e06f">NovelTea::ActiveText::getDurationMs</a></div><div class="ttdeci">size_t getDurationMs() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a81b7707a59c97965b96a67ae5a689d8b"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a81b7707a59c97965b96a67ae5a689d8b">NovelTea::ActiveText::ActiveText</a></div><div class="ttdeci">ActiveText(Context *context, const std::string &amp;text, const AnimationProperties &amp;animDefault)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a8945004da33a10c8146a8176603b3594"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a8945004da33a10c8146a8176603b3594">NovelTea::ActiveText::updateSegments</a></div><div class="ttdeci">void updateSegments(float delta)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a95323a92512717d399f0e3c79e86c90d"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a95323a92512717d399f0e3c79e86c90d">NovelTea::ActiveText::skipToNext</a></div><div class="ttdeci">void skipToNext(bool skipWaitForClick=false)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a95555cf3de7d36d5a5165131276f5637"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a95555cf3de7d36d5a5165131276f5637">NovelTea::ActiveText::setCursorStart</a></div><div class="ttdeci">void setCursorStart(const sf::Vector2f &amp;cursorPos)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a96de5ee5c8f090f203d5ebc798d761e6"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a96de5ee5c8f090f203d5ebc798d761e6">NovelTea::ActiveText::getDelayMs</a></div><div class="ttdeci">size_t getDelayMs(size_t indexEnd) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a97945d7a435f977a6a3e082d49e6bb44"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a97945d7a435f977a6a3e082d49e6bb44">NovelTea::ActiveText::setSize</a></div><div class="ttdeci">void setSize(const sf::Vector2f &amp;size)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a9addc942e896bb442f1f8022334e1aa7"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a9addc942e896bb442f1f8022334e1aa7">NovelTea::ActiveText::getLocalBounds</a></div><div class="ttdeci">sf::FloatRect getLocalBounds() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a9dede57dbac29c8d26b6608c477f379d"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a9dede57dbac29c8d26b6608c477f379d">NovelTea::ActiveText::isComplete</a></div><div class="ttdeci">bool isComplete() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_a9fc8c96b4b787e071592ad10a198af0a"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#a9fc8c96b4b787e071592ad10a198af0a">NovelTea::ActiveText::getDelayMs</a></div><div class="ttdeci">size_t getDelayMs() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_aa12e32866a355ba0ca2685d6ab9cf3f2"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#aa12e32866a355ba0ca2685d6ab9cf3f2">NovelTea::ActiveText::getSize</a></div><div class="ttdeci">sf::Vector2f getSize() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_aa46d98df68528922e5e09ad8c9db8eaa"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#aa46d98df68528922e5e09ad8c9db8eaa">NovelTea::ActiveText::setText</a></div><div class="ttdeci">void setText(const std::string &amp;text)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_aa4cbd180ed501ba3900167d7eed9418a"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#aa4cbd180ed501ba3900167d7eed9418a">NovelTea::ActiveText::setText</a></div><div class="ttdeci">void setText(const std::string &amp;text, const TextProperties &amp;textProps, const AnimationProperties &amp;animProps)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_aa61dfde96d1e9911465591fbc18e01dc"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#aa61dfde96d1e9911465591fbc18e01dc">NovelTea::ActiveText::setValues</a></div><div class="ttdeci">virtual void setValues(int tweenType, float *newValues) override</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_aab571593a8827080105067c41302633a"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#aab571593a8827080105067c41302633a">NovelTea::ActiveText::getAlpha</a></div><div class="ttdeci">float getAlpha() const override</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_abd7b76cb4f721a270f90b00ac927080b"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#abd7b76cb4f721a270f90b00ac927080b">NovelTea::ActiveText::getHighlightFactor</a></div><div class="ttdeci">float getHighlightFactor() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_ac02f880233cb6fc27624a6187be7c46e"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#ac02f880233cb6fc27624a6187be7c46e">NovelTea::ActiveText::getCursorEnd</a></div><div class="ttdeci">const sf::Vector2f &amp; getCursorEnd() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_ac6289201394efbb3b41183976ee1082e"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#ac6289201394efbb3b41183976ee1082e">NovelTea::ActiveText::getLineSpacing</a></div><div class="ttdeci">float getLineSpacing() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_ad324e0fee996c2b0703918759e11cb64"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#ad324e0fee996c2b0703918759e11cb64">NovelTea::ActiveText::getGlobalBounds</a></div><div class="ttdeci">sf::FloatRect getGlobalBounds() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_ad88f09d2fb7b89de276c75015334d5ee"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#ad88f09d2fb7b89de276c75015334d5ee">NovelTea::ActiveText::setHighlightFactor</a></div><div class="ttdeci">void setHighlightFactor(float highlightFactor)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_adabb521fff2c93a658a1257780367fc9"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#adabb521fff2c93a658a1257780367fc9">NovelTea::ActiveText::objectFromPoint</a></div><div class="ttdeci">std::string objectFromPoint(const sf::Vector2f &amp;point) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_adf504d9b6e913d000ec1447e6761b0f2"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#adf504d9b6e913d000ec1447e6761b0f2">NovelTea::ActiveText::isWaitingForClick</a></div><div class="ttdeci">bool isWaitingForClick() const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_ae2b2e06634605b29def14fc6721cfc3e"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#ae2b2e06634605b29def14fc6721cfc3e">NovelTea::ActiveText::toPlainText</a></div><div class="ttdeci">std::string toPlainText(bool stripBBCodes=false, const std::string &amp;newlineChar=&quot;\n&quot;) const</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_ae64265b27795561a46df1ce3e65e1621"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#ae64265b27795561a46df1ce3e65e1621">NovelTea::ActiveText::getValues</a></div><div class="ttdeci">virtual int getValues(int tweenType, float *returnValues) override</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_af51eed1cf327e1ac3e909b5798dccfbf"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#af51eed1cf327e1ac3e909b5798dccfbf">NovelTea::ActiveText::setHighlightId</a></div><div class="ttdeci">void setHighlightId(const std::string &amp;id)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_afbfb89d77746e4719cb1c2b9186cfbf3"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#afbfb89d77746e4719cb1c2b9186cfbf3">NovelTea::ActiveText::buildSegments</a></div><div class="ttdeci">void buildSegments(const TextProperties &amp;textProps, const AnimationProperties &amp;animProps)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_active_text_htm_afe6a1216c31a6f68bbd8e5f15889ace3"><div class="ttname"><a href="class_novel_tea_1_1_active_text.htm#afe6a1216c31a6f68bbd8e5f15889ace3">NovelTea::ActiveText::setText</a></div><div class="ttdeci">void setText(const std::string &amp;text, const AnimationProperties &amp;animProps)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_context_htm"><div class="ttname"><a href="class_novel_tea_1_1_context.htm">NovelTea::Context</a></div><div class="ttdef"><b>Definition:</b> Context.hpp:53</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_context_object_htm"><div class="ttname"><a href="class_novel_tea_1_1_context_object.htm">NovelTea::ContextObject</a></div><div class="ttdef"><b>Definition:</b> ContextObject.hpp:9</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_cutscene_text_segment_htm"><div class="ttname"><a href="class_novel_tea_1_1_cutscene_text_segment.htm">NovelTea::CutsceneTextSegment</a></div><div class="ttdef"><b>Definition:</b> CutsceneTextSegment.hpp:12</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_hideable_htm"><div class="ttname"><a href="class_novel_tea_1_1_hideable.htm">NovelTea::Hideable</a></div><div class="ttdef"><b>Definition:</b> Hideable.hpp:13</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_hideable_htm_a6f39b4d9736cf6703cf054d7e3d46421"><div class="ttname"><a href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">NovelTea::Hideable::ALPHA</a></div><div class="ttdeci">static const int ALPHA</div><div class="ttdef"><b>Definition:</b> Hideable.hpp:15</div></div>
<div class="ttc" id="anamespace_novel_tea_htm"><div class="ttname"><a href="namespace_novel_tea.htm">NovelTea</a></div><div class="ttdef"><b>Definition:</b> Action.hpp:8</div></div>
<div class="ttc" id="anamespace_novel_tea_htm_a595709ddf84a3ac4062d5c49812119e3"><div class="ttname"><a href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">NovelTea::ActiveTextCallback</a></div><div class="ttdeci">std::function&lt; void()&gt; ActiveTextCallback</div><div class="ttdef"><b>Definition:</b> ActiveText.hpp:19</div></div>
<div class="ttc" id="anamespace_novel_tea_htm_aa6b43c591babef4ff8f9c9a0e102f766"><div class="ttname"><a href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">NovelTea::HideableCallback</a></div><div class="ttdeci">std::function&lt; void(void)&gt; HideableCallback</div><div class="ttdef"><b>Definition:</b> Hideable.hpp:10</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_animation_properties_htm"><div class="ttname"><a href="struct_novel_tea_1_1_animation_properties.htm">NovelTea::AnimationProperties</a></div><div class="ttdef"><b>Definition:</b> TextTypes.hpp:59</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_properties_htm"><div class="ttname"><a href="struct_novel_tea_1_1_text_properties.htm">NovelTea::TextProperties</a></div><div class="ttdef"><b>Definition:</b> TextTypes.hpp:73</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li><li class="navelem"><a class="el" href="dir_52c2ed606da51a5aae4b083c568b1a72.htm">NovelTea</a></li><li class="navelem"><a class="el" href="_active_text_8hpp.htm">ActiveText.hpp</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
