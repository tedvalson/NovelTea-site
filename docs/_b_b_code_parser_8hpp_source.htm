<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: include/NovelTea/BBCodeParser.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_b_b_code_parser_8hpp_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">BBCodeParser.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_b_b_code_parser_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef NOVELTEA_BBCODEPARSER_HPP</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define NOVELTEA_BBCODEPARSER_HPP</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_string_utils_8hpp.htm">NovelTea/StringUtils.hpp</a>&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_text_types_8hpp.htm">NovelTea/TextTypes.hpp</a>&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_novel_tea.htm">NovelTea</a></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;{</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="namespace_novel_tea.htm#a032960598c1493876608a5a36168e3c1">   12</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespace_novel_tea.htm#a032960598c1493876608a5a36168e3c1">cStrIter</a> = std::string::const_iterator;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm">   14</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_novel_tea_1_1_text_style.htm">TextStyle</a> {</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm#a0c73ddc490f6de09929c320d1337e312">   15</a></span>&#160;    <a class="code" href="struct_novel_tea_1_1_text_style.htm#a0c73ddc490f6de09929c320d1337e312">TextStyle</a>();</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm#a959cf368e13188f4db36db0b4665daaf">   16</a></span>&#160;    <a class="code" href="struct_novel_tea_1_1_text_style.htm#a959cf368e13188f4db36db0b4665daaf">TextStyle</a>(<span class="keyword">const</span> std::string &amp;tag, <span class="keywordtype">bool</span> &amp;closing);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="comment">// Format: &quot;tag=val&quot;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm#afa7a670e6df40a8898e23a6750ded907">   19</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="struct_novel_tea_1_1_text_style.htm#afa7a670e6df40a8898e23a6750ded907">parseSingleArg</a>(<span class="keyword">const</span> std::string &amp;tag, <span class="keyword">const</span> std::string &amp;paramKey);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="comment">// Format: &quot;tag key=val key=val&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm#ad0120c36701d4624048e35281ebdc101">   22</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="struct_novel_tea_1_1_text_style.htm#ad0120c36701d4624048e35281ebdc101">parseKeyValPairs</a>(<span class="keyword">const</span> std::string &amp;tag, <span class="keywordtype">bool</span> makeLowerCase);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm#a676ea7768185b50dbd40f2010343f9de">   24</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="struct_novel_tea_1_1_text_style.htm#a676ea7768185b50dbd40f2010343f9de">operator==</a>(<span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_style.htm">TextStyle</a> &amp;style) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm#a605203e0c34879beb9ee3934a3294a14">   26</a></span>&#160;    <a class="code" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09">TextStyleType</a> <a class="code" href="struct_novel_tea_1_1_text_style.htm#a605203e0c34879beb9ee3934a3294a14">type</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm#afd8621f3bd7c99a24a4c667edeef05c0">   27</a></span>&#160;    std::string <a class="code" href="struct_novel_tea_1_1_text_style.htm#afd8621f3bd7c99a24a4c667edeef05c0">tagName</a>;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_text_style.htm#a117880eefcd7af8646ecdde504470814">   28</a></span>&#160;    std::map&lt;std::string, std::string&gt; <a class="code" href="struct_novel_tea_1_1_text_style.htm#a117880eefcd7af8646ecdde504470814">params</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;};</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_styled_segment.htm">   31</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_novel_tea_1_1_styled_segment.htm">StyledSegment</a> {</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_styled_segment.htm#a8d97fd13096dce2032af2407045c91b0">   32</a></span>&#160;    <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#a8d97fd13096dce2032af2407045c91b0">StyledSegment</a>(std::string <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#a5ed21b34ebf8f57ef1070464bd0b7caf">text</a>, std::vector&lt;TextStyle&gt; <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#a54e5d381823c83855e37d7ca59d9c09a">styles</a>, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textDefault, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animDefault, <span class="keywordtype">bool</span> <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#ade27702c68043b43f71aa1a2be50166e">newGroup</a>, <span class="keywordtype">bool</span> <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#a0b928ee0cc26284ef1920e007bedbde3">startOnNewLine</a>);</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_styled_segment.htm#a5ed21b34ebf8f57ef1070464bd0b7caf">   33</a></span>&#160;    std::string <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#a5ed21b34ebf8f57ef1070464bd0b7caf">text</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_styled_segment.htm#a54e5d381823c83855e37d7ca59d9c09a">   34</a></span>&#160;    std::vector&lt;TextStyle&gt; <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#a54e5d381823c83855e37d7ca59d9c09a">styles</a>;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_styled_segment.htm#af250eeb9b5b4cde26beba739cf75c8c8">   35</a></span>&#160;    <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#af250eeb9b5b4cde26beba739cf75c8c8">style</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_styled_segment.htm#ace0d311acefb574d01367d0ee1be7eba">   36</a></span>&#160;    <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#ace0d311acefb574d01367d0ee1be7eba">anim</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_styled_segment.htm#ade27702c68043b43f71aa1a2be50166e">   37</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#ade27702c68043b43f71aa1a2be50166e">newGroup</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="struct_novel_tea_1_1_styled_segment.htm#a0b928ee0cc26284ef1920e007bedbde3">   38</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="struct_novel_tea_1_1_styled_segment.htm#a0b928ee0cc26284ef1920e007bedbde3">startOnNewLine</a>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;};</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_b_b_code_parser.htm">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_novel_tea_1_1_b_b_code_parser.htm">BBCodeParser</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_b_b_code_parser.htm#abd81fee3bed1072c7489dda1d063c26e">   45</a></span>&#160;    <span class="keyword">static</span> std::string <a class="code" href="class_novel_tea_1_1_b_b_code_parser.htm#abd81fee3bed1072c7489dda1d063c26e">makeString</a>(<span class="keyword">const</span> std::vector&lt;std::shared_ptr&lt;StyledSegment&gt;&gt; &amp;segments, <span class="keywordtype">bool</span> shortTags = <span class="keyword">true</span>, <span class="keywordtype">bool</span> closeTags = <span class="keyword">false</span>, <span class="keywordtype">bool</span> escapeTags = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_b_b_code_parser.htm#ad305f79c5ba9f9bd5203e36b5465f61b">   46</a></span>&#160;    <span class="keyword">static</span> std::vector&lt;std::shared_ptr&lt;StyledSegment&gt;&gt; <a class="code" href="class_novel_tea_1_1_b_b_code_parser.htm#ad305f79c5ba9f9bd5203e36b5465f61b">makeSegments</a>(<span class="keyword">const</span> std::string &amp;text, <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textDefault = <a class="code" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a>(), <span class="keyword">const</span> <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animDefault = <a class="code" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a>());</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_b_b_code_parser.htm#ae42d03b41655303c6c6730436d5eb69a">   47</a></span>&#160;    <span class="keyword">static</span> std::string <a class="code" href="class_novel_tea_1_1_b_b_code_parser.htm#ae42d03b41655303c6c6730436d5eb69a">stripTags</a>(<span class="keyword">const</span> std::string &amp;bbstring);</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_b_b_code_parser.htm#a64744e1a60f1cbd854848773c7525987">   48</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_b_b_code_parser.htm#a64744e1a60f1cbd854848773c7525987">debugPrint</a>(<span class="keyword">const</span> std::vector&lt;std::shared_ptr&lt;StyledSegment&gt;&gt; &amp;segments);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">static</span> std::vector&lt;std::pair&lt;TextStyle,bool&gt;&gt; getStylesDiff(<span class="keyword">const</span> std::vector&lt;TextStyle&gt; &amp;prevStyles, <span class="keyword">const</span> std::vector&lt;TextStyle&gt; &amp;currStyles);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespace_novel_tea.htm#a032960598c1493876608a5a36168e3c1">cStrIter</a> parseTag(<a class="code" href="namespace_novel_tea.htm#a032960598c1493876608a5a36168e3c1">cStrIter</a> start, <a class="code" href="namespace_novel_tea.htm#a032960598c1493876608a5a36168e3c1">cStrIter</a> end, std::string &amp;tag);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;};</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;} <span class="comment">// namespace NovelTea</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// NOVELTEA_BBCODEPARSER_HPP</span></div>
<div class="ttc" id="a_string_utils_8hpp_htm"><div class="ttname"><a href="_string_utils_8hpp.htm">StringUtils.hpp</a></div></div>
<div class="ttc" id="a_text_types_8hpp_htm"><div class="ttname"><a href="_text_types_8hpp.htm">TextTypes.hpp</a></div></div>
<div class="ttc" id="aclass_novel_tea_1_1_b_b_code_parser_htm"><div class="ttname"><a href="class_novel_tea_1_1_b_b_code_parser.htm">NovelTea::BBCodeParser</a></div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:43</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_b_b_code_parser_htm_a64744e1a60f1cbd854848773c7525987"><div class="ttname"><a href="class_novel_tea_1_1_b_b_code_parser.htm#a64744e1a60f1cbd854848773c7525987">NovelTea::BBCodeParser::debugPrint</a></div><div class="ttdeci">static void debugPrint(const std::vector&lt; std::shared_ptr&lt; StyledSegment &gt;&gt; &amp;segments)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_b_b_code_parser_htm_abd81fee3bed1072c7489dda1d063c26e"><div class="ttname"><a href="class_novel_tea_1_1_b_b_code_parser.htm#abd81fee3bed1072c7489dda1d063c26e">NovelTea::BBCodeParser::makeString</a></div><div class="ttdeci">static std::string makeString(const std::vector&lt; std::shared_ptr&lt; StyledSegment &gt;&gt; &amp;segments, bool shortTags=true, bool closeTags=false, bool escapeTags=false)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_b_b_code_parser_htm_ad305f79c5ba9f9bd5203e36b5465f61b"><div class="ttname"><a href="class_novel_tea_1_1_b_b_code_parser.htm#ad305f79c5ba9f9bd5203e36b5465f61b">NovelTea::BBCodeParser::makeSegments</a></div><div class="ttdeci">static std::vector&lt; std::shared_ptr&lt; StyledSegment &gt; &gt; makeSegments(const std::string &amp;text, const TextProperties &amp;textDefault=TextProperties(), const AnimationProperties &amp;animDefault=AnimationProperties())</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_b_b_code_parser_htm_ae42d03b41655303c6c6730436d5eb69a"><div class="ttname"><a href="class_novel_tea_1_1_b_b_code_parser.htm#ae42d03b41655303c6c6730436d5eb69a">NovelTea::BBCodeParser::stripTags</a></div><div class="ttdeci">static std::string stripTags(const std::string &amp;bbstring)</div></div>
<div class="ttc" id="anamespace_novel_tea_htm"><div class="ttname"><a href="namespace_novel_tea.htm">NovelTea</a></div><div class="ttdef"><b>Definition:</b> Action.hpp:8</div></div>
<div class="ttc" id="anamespace_novel_tea_htm_a032960598c1493876608a5a36168e3c1"><div class="ttname"><a href="namespace_novel_tea.htm#a032960598c1493876608a5a36168e3c1">NovelTea::cStrIter</a></div><div class="ttdeci">std::string::const_iterator cStrIter</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:12</div></div>
<div class="ttc" id="anamespace_novel_tea_htm_a4bcbf6af3413bd57ade590e7d9df7c09"><div class="ttname"><a href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09">NovelTea::TextStyleType</a></div><div class="ttdeci">TextStyleType</div><div class="ttdef"><b>Definition:</b> TextTypes.hpp:12</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_animation_properties_htm"><div class="ttname"><a href="struct_novel_tea_1_1_animation_properties.htm">NovelTea::AnimationProperties</a></div><div class="ttdef"><b>Definition:</b> TextTypes.hpp:59</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_styled_segment_htm"><div class="ttname"><a href="struct_novel_tea_1_1_styled_segment.htm">NovelTea::StyledSegment</a></div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:31</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_styled_segment_htm_a0b928ee0cc26284ef1920e007bedbde3"><div class="ttname"><a href="struct_novel_tea_1_1_styled_segment.htm#a0b928ee0cc26284ef1920e007bedbde3">NovelTea::StyledSegment::startOnNewLine</a></div><div class="ttdeci">bool startOnNewLine</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:38</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_styled_segment_htm_a54e5d381823c83855e37d7ca59d9c09a"><div class="ttname"><a href="struct_novel_tea_1_1_styled_segment.htm#a54e5d381823c83855e37d7ca59d9c09a">NovelTea::StyledSegment::styles</a></div><div class="ttdeci">std::vector&lt; TextStyle &gt; styles</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:34</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_styled_segment_htm_a5ed21b34ebf8f57ef1070464bd0b7caf"><div class="ttname"><a href="struct_novel_tea_1_1_styled_segment.htm#a5ed21b34ebf8f57ef1070464bd0b7caf">NovelTea::StyledSegment::text</a></div><div class="ttdeci">std::string text</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:33</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_styled_segment_htm_a8d97fd13096dce2032af2407045c91b0"><div class="ttname"><a href="struct_novel_tea_1_1_styled_segment.htm#a8d97fd13096dce2032af2407045c91b0">NovelTea::StyledSegment::StyledSegment</a></div><div class="ttdeci">StyledSegment(std::string text, std::vector&lt; TextStyle &gt; styles, const TextProperties &amp;textDefault, const AnimationProperties &amp;animDefault, bool newGroup, bool startOnNewLine)</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_styled_segment_htm_ace0d311acefb574d01367d0ee1be7eba"><div class="ttname"><a href="struct_novel_tea_1_1_styled_segment.htm#ace0d311acefb574d01367d0ee1be7eba">NovelTea::StyledSegment::anim</a></div><div class="ttdeci">AnimationProperties anim</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:36</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_styled_segment_htm_ade27702c68043b43f71aa1a2be50166e"><div class="ttname"><a href="struct_novel_tea_1_1_styled_segment.htm#ade27702c68043b43f71aa1a2be50166e">NovelTea::StyledSegment::newGroup</a></div><div class="ttdeci">bool newGroup</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:37</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_styled_segment_htm_af250eeb9b5b4cde26beba739cf75c8c8"><div class="ttname"><a href="struct_novel_tea_1_1_styled_segment.htm#af250eeb9b5b4cde26beba739cf75c8c8">NovelTea::StyledSegment::style</a></div><div class="ttdeci">TextProperties style</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:35</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_properties_htm"><div class="ttname"><a href="struct_novel_tea_1_1_text_properties.htm">NovelTea::TextProperties</a></div><div class="ttdef"><b>Definition:</b> TextTypes.hpp:73</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm">NovelTea::TextStyle</a></div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:14</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm_a0c73ddc490f6de09929c320d1337e312"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm#a0c73ddc490f6de09929c320d1337e312">NovelTea::TextStyle::TextStyle</a></div><div class="ttdeci">TextStyle()</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm_a117880eefcd7af8646ecdde504470814"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm#a117880eefcd7af8646ecdde504470814">NovelTea::TextStyle::params</a></div><div class="ttdeci">std::map&lt; std::string, std::string &gt; params</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:28</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm_a605203e0c34879beb9ee3934a3294a14"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm#a605203e0c34879beb9ee3934a3294a14">NovelTea::TextStyle::type</a></div><div class="ttdeci">TextStyleType type</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:26</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm_a676ea7768185b50dbd40f2010343f9de"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm#a676ea7768185b50dbd40f2010343f9de">NovelTea::TextStyle::operator==</a></div><div class="ttdeci">bool operator==(const TextStyle &amp;style) const</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm_a959cf368e13188f4db36db0b4665daaf"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm#a959cf368e13188f4db36db0b4665daaf">NovelTea::TextStyle::TextStyle</a></div><div class="ttdeci">TextStyle(const std::string &amp;tag, bool &amp;closing)</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm_ad0120c36701d4624048e35281ebdc101"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm#ad0120c36701d4624048e35281ebdc101">NovelTea::TextStyle::parseKeyValPairs</a></div><div class="ttdeci">void parseKeyValPairs(const std::string &amp;tag, bool makeLowerCase)</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm_afa7a670e6df40a8898e23a6750ded907"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm#afa7a670e6df40a8898e23a6750ded907">NovelTea::TextStyle::parseSingleArg</a></div><div class="ttdeci">void parseSingleArg(const std::string &amp;tag, const std::string &amp;paramKey)</div></div>
<div class="ttc" id="astruct_novel_tea_1_1_text_style_htm_afd8621f3bd7c99a24a4c667edeef05c0"><div class="ttname"><a href="struct_novel_tea_1_1_text_style.htm#afd8621f3bd7c99a24a4c667edeef05c0">NovelTea::TextStyle::tagName</a></div><div class="ttdeci">std::string tagName</div><div class="ttdef"><b>Definition:</b> BBCodeParser.hpp:27</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li><li class="navelem"><a class="el" href="dir_52c2ed606da51a5aae4b083c568b1a72.htm">NovelTea</a></li><li class="navelem"><a class="el" href="_b_b_code_parser_8hpp.htm">BBCodeParser.hpp</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
