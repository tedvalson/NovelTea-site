<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: include/NovelTea/ScriptManager.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_script_manager_8hpp_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ScriptManager.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_script_manager_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef NOVELTEA_SCRIPTMANAGER_HPP</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define NOVELTEA_SCRIPTMANAGER_HPP</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_subsystem_8hpp.htm">NovelTea/Subsystem.hpp</a>&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_err_8hpp.htm">NovelTea/Err.hpp</a>&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;dukglue/dukglue.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="json_8hpp.htm">NovelTea/json.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;random&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_novel_tea.htm">NovelTea</a></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span>Entity;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">class </span>Game;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">class </span><a class="code" href="namespace_novel_tea_1_1_i_d.htm#aa0c18a5b378b3aba067fdc4eb7e15571">Script</a>;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespace_novel_tea.htm#a6f731feef4e29c5e98c86789b34af95b">   17</a></span>&#160;<span class="keyword">const</span> std::string <a class="code" href="namespace_novel_tea.htm#a6f731feef4e29c5e98c86789b34af95b">strUseStrict</a> = <span class="stringliteral">&quot;\n\&quot;use strict\&quot;;\n&quot;</span>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm">   19</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_novel_tea_1_1_script_manager.htm">ScriptManager</a> : <span class="keyword">public</span> <a class="code" href="class_novel_tea_1_1_subsystem.htm">Subsystem</a></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#aec077b85b18400a564cc2aafb52d7fd7">   22</a></span>&#160;    <a class="code" href="class_novel_tea_1_1_script_manager.htm#aec077b85b18400a564cc2aafb52d7fd7">ScriptManager</a>(<a class="code" href="class_novel_tea_1_1_context.htm">Context</a>* context);</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#ade1ed63341599f642d46f48d27da2f1f">   23</a></span>&#160;    <a class="code" href="class_novel_tea_1_1_script_manager.htm#ade1ed63341599f642d46f48d27da2f1f">~ScriptManager</a>();</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a9f1ab4f9c317130168befcda548a181c">   25</a></span>&#160;    <span class="keyword">static</span> std::string <a class="code" href="class_novel_tea_1_1_script_manager.htm#a9f1ab4f9c317130168befcda548a181c">name</a>() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;ScriptManager&quot;</span>; }</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a522ad63b0c5239612aba411d588036db">   27</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a522ad63b0c5239612aba411d588036db">reset</a>();</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a8af7900fa1585ba90e7406a0cc92ca0b">   29</a></span>&#160;    <span class="keyword">virtual</span> DukValue <a class="code" href="class_novel_tea_1_1_script_manager.htm#a8af7900fa1585ba90e7406a0cc92ca0b">runScript</a>(std::shared_ptr&lt;Script&gt; script);</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a53d279dd6bb3d473feb0175e69c11e57">   30</a></span>&#160;    <span class="keyword">virtual</span> DukValue <a class="code" href="class_novel_tea_1_1_script_manager.htm#a53d279dd6bb3d473feb0175e69c11e57">runScriptId</a>(<span class="keyword">const</span> std::string &amp;scriptId);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a23c23b87796a4dee574ad715e1f3732c">   32</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a23c23b87796a4dee574ad715e1f3732c">runActionScript</a>(<span class="keyword">const</span> std::string &amp;verbId, <span class="keyword">const</span> std::vector&lt;std::string&gt; &amp;objectIds, <span class="keyword">const</span> std::string &amp;script);</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#af5a3963b7ab880e46087b1a6811c69a9">   33</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#af5a3963b7ab880e46087b1a6811c69a9">runActionScript</a>(<span class="keyword">const</span> std::string &amp;verbId, <span class="keyword">const</span> std::string &amp;verbIdOrig, <span class="keyword">const</span> std::vector&lt;std::string&gt; &amp;objectIds);</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a465ef2c6ea08a13fa8008f1aae8607c8">   34</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a465ef2c6ea08a13fa8008f1aae8607c8">runActionScript</a>(<span class="keyword">const</span> std::string &amp;verbId, <span class="keyword">const</span> std::vector&lt;std::string&gt; &amp;objectIds);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a7ed2cc6a592b06fe41ab102d2506322d">   36</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a7ed2cc6a592b06fe41ab102d2506322d">setActiveEntity</a>(std::shared_ptr&lt;Entity&gt; entity);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a92a32d7c8ef929f683397d90e0b4618d">   38</a></span>&#160;    <span class="keyword">virtual</span> std::string <a class="code" href="class_novel_tea_1_1_script_manager.htm#a92a32d7c8ef929f683397d90e0b4618d">evalExpressions</a>(<span class="keyword">const</span> std::string &amp;s);</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#aa22212974a400291d0f204d3d278ab71">   39</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#aa22212974a400291d0f204d3d278ab71">getTextInput</a>(<span class="keyword">const</span> std::string &amp;message, <span class="keyword">const</span> DukValue &amp;func);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a27b7c58e3a4eb1761d66db5df2b35188">   41</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a27b7c58e3a4eb1761d66db5df2b35188">randSeed</a>(<span class="keywordtype">int</span> seed);</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#ac7249fb13128657942002e0313d66c99">   42</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#ac7249fb13128657942002e0313d66c99">randGen</a>();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a1cc38e5be47d5582e5f1592dbb9db0d4">   44</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a1cc38e5be47d5582e5f1592dbb9db0d4">run</a>(<span class="keyword">const</span> std::string &amp;script)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        run&lt;void&gt;(script);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a017a85e79dd8ac6e3ca8d6096d6654eb">   50</a></span>&#160;    <span class="keyword">inline</span> T <a class="code" href="class_novel_tea_1_1_script_manager.htm#a017a85e79dd8ac6e3ca8d6096d6654eb">run</a>(<span class="keyword">const</span> std::string &amp;script)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keyword">auto</span> s = <a class="code" href="namespace_novel_tea.htm#a6f731feef4e29c5e98c86789b34af95b">strUseStrict</a> + script;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">return</span> dukglue_peval&lt;T&gt;(m_context, s.c_str());</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">catch</span> (std::exception &amp;e)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <a class="code" href="namespace_novel_tea.htm#aa5441f49f0d39145927af1c965ebb10d">err</a>() &lt;&lt; <span class="stringliteral">&quot;ScriptManager::run() &quot;</span> &lt;&lt; e.what() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">throw</span> e;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a96c7247ccf4807855cb8e0875df1e97e">   64</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a96c7247ccf4807855cb8e0875df1e97e">runInClosure</a>(<span class="keyword">const</span> std::string&amp; script)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        runInClosure&lt;void&gt;(script);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#ac7e3be4e11f4a214725e255eb55b30a4">   70</a></span>&#160;    <span class="keyword">inline</span> T <a class="code" href="class_novel_tea_1_1_script_manager.htm#ac7e3be4e11f4a214725e255eb55b30a4">runInClosure</a>(<span class="keyword">const</span> std::string &amp;script)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> run&lt;T&gt;(<span class="stringliteral">&quot;(function(){\n&quot;</span> + script + <span class="stringliteral">&quot;\n})();&quot;</span>);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a938ffda11c5582b911fa2b1f479458b9">   76</a></span>&#160;    T <a class="code" href="class_novel_tea_1_1_script_manager.htm#a938ffda11c5582b911fa2b1f479458b9">call</a>(<span class="keyword">const</span> DukValue &amp;func)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="keywordflow">return</span> dukglue_pcall&lt;T&gt;(m_context, func);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">catch</span> (std::exception &amp;e)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <a class="code" href="namespace_novel_tea.htm#aa5441f49f0d39145927af1c965ebb10d">err</a>() &lt;&lt; e.what() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">throw</span> e;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a06d860936b7731e1cb8f6751726b782c">   90</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a06d860936b7731e1cb8f6751726b782c">call</a>(<span class="keyword">const</span> std::string &amp;script, <span class="keyword">const</span> std::string &amp;funcName, Args&amp;&amp;... args)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        call&lt;void&gt;(script, funcName, args...);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a5e4eb4504243fa3a4cf58bf4e18d4573">   96</a></span>&#160;    T <a class="code" href="class_novel_tea_1_1_script_manager.htm#a5e4eb4504243fa3a4cf58bf4e18d4573">call</a>(<span class="keyword">const</span> std::string &amp;script, <span class="keyword">const</span> std::string &amp;funcName, Args&amp;&amp;... args)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keyword">auto</span> s = <a class="code" href="namespace_novel_tea.htm#a6f731feef4e29c5e98c86789b34af95b">strUseStrict</a> + <span class="stringliteral">&quot;\n&quot;</span> + script + <span class="stringliteral">&quot;;\n&quot;</span> + funcName + <span class="stringliteral">&quot;;&quot;</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keyword">auto</span> fn = dukglue_peval&lt;DukValue&gt;(m_context, s.c_str());</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">return</span> dukglue_pcall&lt;T&gt;(m_context, fn, std::forward&lt;Args&gt;(args)...);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">catch</span> (std::exception &amp;e)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <a class="code" href="namespace_novel_tea.htm#aa5441f49f0d39145927af1c965ebb10d">err</a>() &lt;&lt; e.what() &lt;&lt; std::endl;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">throw</span> e;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#afa90e5b1564aa10a2ca4779e41773322">  112</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#afa90e5b1564aa10a2ca4779e41773322">registerFunctions</a>();</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#adbb3f80c09fef2d00c55147f99c619b2">  113</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#adbb3f80c09fef2d00c55147f99c619b2">registerClasses</a>();</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a1019d659373ea232d41a6135ac95c322">  114</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a1019d659373ea232d41a6135ac95c322">registerGlobals</a>();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#a3a619a09dca58eb4502a106c0afa7eb0">  116</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#a3a619a09dca58eb4502a106c0afa7eb0">runAutorunScripts</a>();</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="class_novel_tea_1_1_script_manager.htm#ad02b0ddcf77379b790ff5224b770dfbb">  117</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_novel_tea_1_1_script_manager.htm#ad02b0ddcf77379b790ff5224b770dfbb">checkAutorun</a>(<span class="keyword">const</span> <a class="code" href="classsj_1_1_j_s_o_n.htm">sj::JSON</a> &amp;j);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    duk_context *m_context;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    std::default_random_engine m_randEngine;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    std::uniform_real_distribution&lt;double&gt; m_uniformDist;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">int</span> m_randSeed;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;};</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;} <span class="comment">// namespace NovelTea</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// NOVELTEA_SCRIPTMANAGER_HPP</span></div>
<div class="ttc" id="a_err_8hpp_htm"><div class="ttname"><a href="_err_8hpp.htm">Err.hpp</a></div></div>
<div class="ttc" id="a_subsystem_8hpp_htm"><div class="ttname"><a href="_subsystem_8hpp.htm">Subsystem.hpp</a></div></div>
<div class="ttc" id="aclass_novel_tea_1_1_context_htm"><div class="ttname"><a href="class_novel_tea_1_1_context.htm">NovelTea::Context</a></div><div class="ttdef"><b>Definition:</b> Context.hpp:53</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm">NovelTea::ScriptManager</a></div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:20</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a017a85e79dd8ac6e3ca8d6096d6654eb"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a017a85e79dd8ac6e3ca8d6096d6654eb">NovelTea::ScriptManager::run</a></div><div class="ttdeci">T run(const std::string &amp;script)</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:50</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a06d860936b7731e1cb8f6751726b782c"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a06d860936b7731e1cb8f6751726b782c">NovelTea::ScriptManager::call</a></div><div class="ttdeci">void call(const std::string &amp;script, const std::string &amp;funcName, Args &amp;&amp;... args)</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:90</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a1019d659373ea232d41a6135ac95c322"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a1019d659373ea232d41a6135ac95c322">NovelTea::ScriptManager::registerGlobals</a></div><div class="ttdeci">void registerGlobals()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a1cc38e5be47d5582e5f1592dbb9db0d4"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a1cc38e5be47d5582e5f1592dbb9db0d4">NovelTea::ScriptManager::run</a></div><div class="ttdeci">void run(const std::string &amp;script)</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:44</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a23c23b87796a4dee574ad715e1f3732c"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a23c23b87796a4dee574ad715e1f3732c">NovelTea::ScriptManager::runActionScript</a></div><div class="ttdeci">virtual bool runActionScript(const std::string &amp;verbId, const std::vector&lt; std::string &gt; &amp;objectIds, const std::string &amp;script)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a27b7c58e3a4eb1761d66db5df2b35188"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a27b7c58e3a4eb1761d66db5df2b35188">NovelTea::ScriptManager::randSeed</a></div><div class="ttdeci">virtual void randSeed(int seed)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a3a619a09dca58eb4502a106c0afa7eb0"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a3a619a09dca58eb4502a106c0afa7eb0">NovelTea::ScriptManager::runAutorunScripts</a></div><div class="ttdeci">void runAutorunScripts()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a465ef2c6ea08a13fa8008f1aae8607c8"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a465ef2c6ea08a13fa8008f1aae8607c8">NovelTea::ScriptManager::runActionScript</a></div><div class="ttdeci">virtual bool runActionScript(const std::string &amp;verbId, const std::vector&lt; std::string &gt; &amp;objectIds)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a522ad63b0c5239612aba411d588036db"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a522ad63b0c5239612aba411d588036db">NovelTea::ScriptManager::reset</a></div><div class="ttdeci">virtual void reset()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a53d279dd6bb3d473feb0175e69c11e57"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a53d279dd6bb3d473feb0175e69c11e57">NovelTea::ScriptManager::runScriptId</a></div><div class="ttdeci">virtual DukValue runScriptId(const std::string &amp;scriptId)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a5e4eb4504243fa3a4cf58bf4e18d4573"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a5e4eb4504243fa3a4cf58bf4e18d4573">NovelTea::ScriptManager::call</a></div><div class="ttdeci">T call(const std::string &amp;script, const std::string &amp;funcName, Args &amp;&amp;... args)</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:96</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a7ed2cc6a592b06fe41ab102d2506322d"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a7ed2cc6a592b06fe41ab102d2506322d">NovelTea::ScriptManager::setActiveEntity</a></div><div class="ttdeci">void setActiveEntity(std::shared_ptr&lt; Entity &gt; entity)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a8af7900fa1585ba90e7406a0cc92ca0b"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a8af7900fa1585ba90e7406a0cc92ca0b">NovelTea::ScriptManager::runScript</a></div><div class="ttdeci">virtual DukValue runScript(std::shared_ptr&lt; Script &gt; script)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a92a32d7c8ef929f683397d90e0b4618d"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a92a32d7c8ef929f683397d90e0b4618d">NovelTea::ScriptManager::evalExpressions</a></div><div class="ttdeci">virtual std::string evalExpressions(const std::string &amp;s)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a938ffda11c5582b911fa2b1f479458b9"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a938ffda11c5582b911fa2b1f479458b9">NovelTea::ScriptManager::call</a></div><div class="ttdeci">T call(const DukValue &amp;func)</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:76</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a96c7247ccf4807855cb8e0875df1e97e"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a96c7247ccf4807855cb8e0875df1e97e">NovelTea::ScriptManager::runInClosure</a></div><div class="ttdeci">void runInClosure(const std::string &amp;script)</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:64</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_a9f1ab4f9c317130168befcda548a181c"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#a9f1ab4f9c317130168befcda548a181c">NovelTea::ScriptManager::name</a></div><div class="ttdeci">static std::string name()</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:25</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_aa22212974a400291d0f204d3d278ab71"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#aa22212974a400291d0f204d3d278ab71">NovelTea::ScriptManager::getTextInput</a></div><div class="ttdeci">virtual void getTextInput(const std::string &amp;message, const DukValue &amp;func)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_ac7249fb13128657942002e0313d66c99"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#ac7249fb13128657942002e0313d66c99">NovelTea::ScriptManager::randGen</a></div><div class="ttdeci">virtual double randGen()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_ac7e3be4e11f4a214725e255eb55b30a4"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#ac7e3be4e11f4a214725e255eb55b30a4">NovelTea::ScriptManager::runInClosure</a></div><div class="ttdeci">T runInClosure(const std::string &amp;script)</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:70</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_ad02b0ddcf77379b790ff5224b770dfbb"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#ad02b0ddcf77379b790ff5224b770dfbb">NovelTea::ScriptManager::checkAutorun</a></div><div class="ttdeci">void checkAutorun(const sj::JSON &amp;j)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_adbb3f80c09fef2d00c55147f99c619b2"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#adbb3f80c09fef2d00c55147f99c619b2">NovelTea::ScriptManager::registerClasses</a></div><div class="ttdeci">void registerClasses()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_ade1ed63341599f642d46f48d27da2f1f"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#ade1ed63341599f642d46f48d27da2f1f">NovelTea::ScriptManager::~ScriptManager</a></div><div class="ttdeci">~ScriptManager()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_aec077b85b18400a564cc2aafb52d7fd7"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#aec077b85b18400a564cc2aafb52d7fd7">NovelTea::ScriptManager::ScriptManager</a></div><div class="ttdeci">ScriptManager(Context *context)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_af5a3963b7ab880e46087b1a6811c69a9"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#af5a3963b7ab880e46087b1a6811c69a9">NovelTea::ScriptManager::runActionScript</a></div><div class="ttdeci">virtual bool runActionScript(const std::string &amp;verbId, const std::string &amp;verbIdOrig, const std::vector&lt; std::string &gt; &amp;objectIds)</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_script_manager_htm_afa90e5b1564aa10a2ca4779e41773322"><div class="ttname"><a href="class_novel_tea_1_1_script_manager.htm#afa90e5b1564aa10a2ca4779e41773322">NovelTea::ScriptManager::registerFunctions</a></div><div class="ttdeci">void registerFunctions()</div></div>
<div class="ttc" id="aclass_novel_tea_1_1_subsystem_htm"><div class="ttname"><a href="class_novel_tea_1_1_subsystem.htm">NovelTea::Subsystem</a></div><div class="ttdef"><b>Definition:</b> Subsystem.hpp:10</div></div>
<div class="ttc" id="aclasssj_1_1_j_s_o_n_htm"><div class="ttname"><a href="classsj_1_1_j_s_o_n.htm">sj::JSON</a></div><div class="ttdef"><b>Definition:</b> json.hpp:62</div></div>
<div class="ttc" id="ajson_8hpp_htm"><div class="ttname"><a href="json_8hpp.htm">json.hpp</a></div></div>
<div class="ttc" id="anamespace_novel_tea_1_1_i_d_htm_aa0c18a5b378b3aba067fdc4eb7e15571"><div class="ttname"><a href="namespace_novel_tea_1_1_i_d.htm#aa0c18a5b378b3aba067fdc4eb7e15571">NovelTea::ID::Script</a></div><div class="ttdeci">constexpr auto Script</div><div class="ttdef"><b>Definition:</b> ProjectDataIdentifiers.hpp:67</div></div>
<div class="ttc" id="anamespace_novel_tea_htm"><div class="ttname"><a href="namespace_novel_tea.htm">NovelTea</a></div><div class="ttdef"><b>Definition:</b> Action.hpp:8</div></div>
<div class="ttc" id="anamespace_novel_tea_htm_a6f731feef4e29c5e98c86789b34af95b"><div class="ttname"><a href="namespace_novel_tea.htm#a6f731feef4e29c5e98c86789b34af95b">NovelTea::strUseStrict</a></div><div class="ttdeci">const std::string strUseStrict</div><div class="ttdef"><b>Definition:</b> ScriptManager.hpp:17</div></div>
<div class="ttc" id="anamespace_novel_tea_htm_aa5441f49f0d39145927af1c965ebb10d"><div class="ttname"><a href="namespace_novel_tea.htm#aa5441f49f0d39145927af1c965ebb10d">NovelTea::err</a></div><div class="ttdeci">std::ostream &amp; err()</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li><li class="navelem"><a class="el" href="dir_52c2ed606da51a5aae4b083c568b1a72.htm">NovelTea</a></li><li class="navelem"><a class="el" href="_script_manager_8hpp.htm">ScriptManager.hpp</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
