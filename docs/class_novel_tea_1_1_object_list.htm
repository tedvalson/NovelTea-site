<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: NovelTea::ObjectList Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_novel_tea_1_1_object_list.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_novel_tea_1_1_object_list-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NovelTea::ObjectList Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_object_list_8hpp_source.htm">ObjectList.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NovelTea::ObjectList:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa14c04137f7db1b389b1f97a0479b9a4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#aa14c04137f7db1b389b1f97a0479b9a4">ObjectList</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:aa14c04137f7db1b389b1f97a0479b9a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72fa570a47fdde713b2a8dfd2f93d6b5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a72fa570a47fdde713b2a8dfd2f93d6b5">add</a> (std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; object)</td></tr>
<tr class="separator:a72fa570a47fdde713b2a8dfd2f93d6b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65aded45b52477d773babfcdf1f84682"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a65aded45b52477d773babfcdf1f84682">addCount</a> (std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; object, int <a class="el" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>)</td></tr>
<tr class="separator:a65aded45b52477d773babfcdf1f84682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b17c852aa1a0f24d470385e253b70c5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a2b17c852aa1a0f24d470385e253b70c5">addId</a> (const std::string &amp;objectId)</td></tr>
<tr class="separator:a2b17c852aa1a0f24d470385e253b70c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af83688b19b19b5c994b32d6caf747d96"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#af83688b19b19b5c994b32d6caf747d96">addIdCount</a> (const std::string &amp;objectId, int <a class="el" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>)</td></tr>
<tr class="separator:af83688b19b19b5c994b32d6caf747d96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae955b1c3a5f675e2d2af2716eead1b67"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#ae955b1c3a5f675e2d2af2716eead1b67">remove</a> (std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; object)</td></tr>
<tr class="separator:ae955b1c3a5f675e2d2af2716eead1b67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d9254dd4a3345b1a5f55f936659db1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#aa6d9254dd4a3345b1a5f55f936659db1">removeCount</a> (std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; object, int <a class="el" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>)</td></tr>
<tr class="separator:aa6d9254dd4a3345b1a5f55f936659db1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1cd0b0ff6b3ddc58e10e82e824592bf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#ab1cd0b0ff6b3ddc58e10e82e824592bf">removeId</a> (const std::string &amp;objectId)</td></tr>
<tr class="separator:ab1cd0b0ff6b3ddc58e10e82e824592bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f153dbbdb64cd49b3ef528edd397be1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a9f153dbbdb64cd49b3ef528edd397be1">removeIdCount</a> (const std::string &amp;objectId, int <a class="el" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>)</td></tr>
<tr class="separator:a9f153dbbdb64cd49b3ef528edd397be1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435010cf9e381ce44aac282a8e06b1f7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a435010cf9e381ce44aac282a8e06b1f7">contains</a> (const std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; &amp;object) const</td></tr>
<tr class="separator:a435010cf9e381ce44aac282a8e06b1f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73c0cba1a7a6d6267f185397bcf90810"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a73c0cba1a7a6d6267f185397bcf90810">containsCount</a> (const std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; &amp;object, int <a class="el" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>) const</td></tr>
<tr class="separator:a73c0cba1a7a6d6267f185397bcf90810"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a446231e3dfa6d407ad2393030242bdb3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a446231e3dfa6d407ad2393030242bdb3">containsId</a> (const std::string &amp;objectId) const</td></tr>
<tr class="separator:a446231e3dfa6d407ad2393030242bdb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79275f8e384dd3098d7997bc4b09279b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a79275f8e384dd3098d7997bc4b09279b">containsIdCount</a> (const std::string &amp;objectId, int <a class="el" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a>) const</td></tr>
<tr class="separator:a79275f8e384dd3098d7997bc4b09279b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad1179182020028b0815231b0085c74b"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#aad1179182020028b0815231b0085c74b">getObjects</a> () const</td></tr>
<tr class="separator:aad1179182020028b0815231b0085c74b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a295de581539203c91e838d791a6150"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a7a295de581539203c91e838d791a6150">count</a> (const std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; &amp;object) const</td></tr>
<tr class="separator:a7a295de581539203c91e838d791a6150"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a4079f50ae97de934c36cc856b339ce"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a5a4079f50ae97de934c36cc856b339ce">countId</a> (const std::string &amp;objectId) const</td></tr>
<tr class="separator:a5a4079f50ae97de934c36cc856b339ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3adf0a8c8f1983e1cfe0baa3eb46d154"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a3adf0a8c8f1983e1cfe0baa3eb46d154">attach</a> (const std::string &amp;type, const std::string &amp;id)</td></tr>
<tr class="separator:a3adf0a8c8f1983e1cfe0baa3eb46d154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82847339d0b936fbe7139a902eaa9d93"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a82847339d0b936fbe7139a902eaa9d93">clear</a> ()</td></tr>
<tr class="separator:a82847339d0b936fbe7139a902eaa9d93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbb09216a04dcc8907d97eafcec76c9a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#acbb09216a04dcc8907d97eafcec76c9a">saveChanges</a> ()</td></tr>
<tr class="separator:acbb09216a04dcc8907d97eafcec76c9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a922c979906b909d4d43a34c197d16841"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a922c979906b909d4d43a34c197d16841">sync</a> ()</td></tr>
<tr class="separator:a922c979906b909d4d43a34c197d16841"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8acb232f69da69f14ef56999902c2e55"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_object_item.htm">ObjectItem</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm#a8acb232f69da69f14ef56999902c2e55">items</a> () const</td></tr>
<tr class="separator:a8acb232f69da69f14ef56999902c2e55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_context_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_context_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_context_object.htm">NovelTea::ContextObject</a></td></tr>
<tr class="memitem:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a729b81d65b38b86841e7c522070f9896">ContextObject</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a3bb9175b66933787a9a06e50bd6c1a06">~ContextObject</a> ()</td></tr>
<tr class="separator:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a67dd5b0a333964bb76c984abf8fa0e75">getContext</a> () const</td></tr>
<tr class="separator:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa14c04137f7db1b389b1f97a0479b9a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa14c04137f7db1b389b1f97a0479b9a4">&#9670;&nbsp;</a></span>ObjectList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ObjectList::ObjectList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a72fa570a47fdde713b2a8dfd2f93d6b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72fa570a47fdde713b2a8dfd2f93d6b5">&#9670;&nbsp;</a></span>add()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::add </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt;&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a65aded45b52477d773babfcdf1f84682"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65aded45b52477d773babfcdf1f84682">&#9670;&nbsp;</a></span>addCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::addCount </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt;&#160;</td>
          <td class="paramname"><em>object</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2b17c852aa1a0f24d470385e253b70c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b17c852aa1a0f24d470385e253b70c5">&#9670;&nbsp;</a></span>addId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::addId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>objectId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af83688b19b19b5c994b32d6caf747d96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af83688b19b19b5c994b32d6caf747d96">&#9670;&nbsp;</a></span>addIdCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::addIdCount </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>objectId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3adf0a8c8f1983e1cfe0baa3eb46d154"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3adf0a8c8f1983e1cfe0baa3eb46d154">&#9670;&nbsp;</a></span>attach()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ObjectList::attach </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a82847339d0b936fbe7139a902eaa9d93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82847339d0b936fbe7139a902eaa9d93">&#9670;&nbsp;</a></span>clear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ObjectList::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a435010cf9e381ce44aac282a8e06b1f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a435010cf9e381ce44aac282a8e06b1f7">&#9670;&nbsp;</a></span>contains()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::contains </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a73c0cba1a7a6d6267f185397bcf90810"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73c0cba1a7a6d6267f185397bcf90810">&#9670;&nbsp;</a></span>containsCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::containsCount </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>object</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a446231e3dfa6d407ad2393030242bdb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a446231e3dfa6d407ad2393030242bdb3">&#9670;&nbsp;</a></span>containsId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::containsId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>objectId</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a79275f8e384dd3098d7997bc4b09279b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79275f8e384dd3098d7997bc4b09279b">&#9670;&nbsp;</a></span>containsIdCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::containsIdCount </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>objectId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7a295de581539203c91e838d791a6150"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a295de581539203c91e838d791a6150">&#9670;&nbsp;</a></span>count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int NovelTea::ObjectList::count </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5a4079f50ae97de934c36cc856b339ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a4079f50ae97de934c36cc856b339ce">&#9670;&nbsp;</a></span>countId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int NovelTea::ObjectList::countId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>objectId</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aad1179182020028b0815231b0085c74b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad1179182020028b0815231b0085c74b">&#9670;&nbsp;</a></span>getObjects()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::shared_ptr&lt;<a class="el" href="class_novel_tea_1_1_object.htm">Object</a>&gt; &gt; NovelTea::ObjectList::getObjects </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8acb232f69da69f14ef56999902c2e55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8acb232f69da69f14ef56999902c2e55">&#9670;&nbsp;</a></span>items()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::shared_ptr&lt;<a class="el" href="struct_novel_tea_1_1_object_item.htm">ObjectItem</a>&gt; &gt; NovelTea::ObjectList::items </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae955b1c3a5f675e2d2af2716eead1b67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae955b1c3a5f675e2d2af2716eead1b67">&#9670;&nbsp;</a></span>remove()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::remove </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt;&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa6d9254dd4a3345b1a5f55f936659db1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6d9254dd4a3345b1a5f55f936659db1">&#9670;&nbsp;</a></span>removeCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::removeCount </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_object.htm">Object</a> &gt;&#160;</td>
          <td class="paramname"><em>object</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab1cd0b0ff6b3ddc58e10e82e824592bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1cd0b0ff6b3ddc58e10e82e824592bf">&#9670;&nbsp;</a></span>removeId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::removeId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>objectId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9f153dbbdb64cd49b3ef528edd397be1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f153dbbdb64cd49b3ef528edd397be1">&#9670;&nbsp;</a></span>removeIdCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ObjectList::removeIdCount </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>objectId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acbb09216a04dcc8907d97eafcec76c9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbb09216a04dcc8907d97eafcec76c9a">&#9670;&nbsp;</a></span>saveChanges()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ObjectList::saveChanges </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a922c979906b909d4d43a34c197d16841"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a922c979906b909d4d43a34c197d16841">&#9670;&nbsp;</a></span>sync()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ObjectList::sync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/NovelTea/<a class="el" href="_object_list_8hpp_source.htm">ObjectList.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_novel_tea.htm">NovelTea</a></li><li class="navelem"><a class="el" href="class_novel_tea_1_1_object_list.htm">ObjectList</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
