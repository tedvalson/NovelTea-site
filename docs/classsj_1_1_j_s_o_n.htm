<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: sj::JSON Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classsj_1_1_j_s_o_n.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classsj_1_1_j_s_o_n-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sj::JSON Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="json_8hpp_source.htm">json.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_const_wrapper.htm">JSONConstWrapper</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_wrapper.htm">JSONWrapper</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a50a38c9e0b804e3d660ac03c3492528a"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528a">Class</a> { <br />
&#160;&#160;<a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528aabbb93ef26e3c101ff11cdd21cab08a94">Null</a>
, <a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528aa497031794414a552435f90151ac3b54b">Object</a>
, <a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528aa4410ec34d9e6c1a68100ca0ce033fb17">Array</a>
, <a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528aa27118326006d3829667a400ad23d5d98">String</a>
, <br />
&#160;&#160;<a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528aac8df43648942ec3a9aec140f07f47b7c">Floating</a>
, <a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528aa4ea94552a2bec56a29592359a1b6069e">Integral</a>
, <a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528aa27226c864bac7454a8504f8edb15d95b">Boolean</a>
<br />
 }</td></tr>
<tr class="separator:a50a38c9e0b804e3d660ac03c3492528a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8f45c59bb0d18fe1372ee2582881923b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a8f45c59bb0d18fe1372ee2582881923b">JSON</a> ()</td></tr>
<tr class="separator:a8f45c59bb0d18fe1372ee2582881923b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad098259d00668616f2ca2d984cab5662"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ad098259d00668616f2ca2d984cab5662">JSON</a> (initializer_list&lt; <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &gt; list)</td></tr>
<tr class="separator:ad098259d00668616f2ca2d984cab5662"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b7053c37b4ec930a330397904eb02d8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a4b7053c37b4ec930a330397904eb02d8">JSON</a> (<a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&amp;other)</td></tr>
<tr class="separator:a4b7053c37b4ec930a330397904eb02d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad450fd17d266b1b1f59e9fb01a2bdc16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ad450fd17d266b1b1f59e9fb01a2bdc16">operator=</a> (<a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&amp;other)</td></tr>
<tr class="separator:ad450fd17d266b1b1f59e9fb01a2bdc16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a037662eacf4ecd46857fa05f86b6b41d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a037662eacf4ecd46857fa05f86b6b41d">JSON</a> (const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;other)</td></tr>
<tr class="separator:a037662eacf4ecd46857fa05f86b6b41d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac923ac49bd979cf40a2f019d4f782a12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ac923ac49bd979cf40a2f019d4f782a12">operator=</a> (const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;other)</td></tr>
<tr class="separator:ac923ac49bd979cf40a2f019d4f782a12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a693a4db1d474783f60d10ce056075c03"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a693a4db1d474783f60d10ce056075c03">~JSON</a> ()</td></tr>
<tr class="separator:a693a4db1d474783f60d10ce056075c03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cedaf40c0e1ecb3075a5867be61e5c0"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5cedaf40c0e1ecb3075a5867be61e5c0"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a5cedaf40c0e1ecb3075a5867be61e5c0">JSON</a> (T b, typename enable_if&lt; is_same&lt; T, bool &gt;::value &gt;::type *=0)</td></tr>
<tr class="separator:a5cedaf40c0e1ecb3075a5867be61e5c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ca9a2b2295174cc2dceb33c295d9cb9"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7ca9a2b2295174cc2dceb33c295d9cb9"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a7ca9a2b2295174cc2dceb33c295d9cb9">JSON</a> (T i, typename enable_if&lt; is_integral&lt; T &gt;::value &amp;&amp;!is_same&lt; T, bool &gt;::value &gt;::type *=0)</td></tr>
<tr class="separator:a7ca9a2b2295174cc2dceb33c295d9cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbcdb119110616fcbd248d7807b815fb"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:adbcdb119110616fcbd248d7807b815fb"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#adbcdb119110616fcbd248d7807b815fb">JSON</a> (T f, typename enable_if&lt; is_floating_point&lt; T &gt;::value &gt;::type *=0)</td></tr>
<tr class="separator:adbcdb119110616fcbd248d7807b815fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a677518df28d15da20aef530b4b642e92"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a677518df28d15da20aef530b4b642e92"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a677518df28d15da20aef530b4b642e92">JSON</a> (T s, typename enable_if&lt; is_convertible&lt; T, string &gt;::value &gt;::type *=0)</td></tr>
<tr class="separator:a677518df28d15da20aef530b4b642e92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b4fea4dc17b0b007e3f17591968c4b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a0b4fea4dc17b0b007e3f17591968c4b4">JSON</a> (std::nullptr_t)</td></tr>
<tr class="separator:a0b4fea4dc17b0b007e3f17591968c4b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59961716155b7fb9ab488a0940984a3b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a59961716155b7fb9ab488a0940984a3b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a59961716155b7fb9ab488a0940984a3b">append</a> (T arg)</td></tr>
<tr class="separator:a59961716155b7fb9ab488a0940984a3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a7ac34b1de15f0395424b922c7556f4"><td class="memTemplParams" colspan="2">template&lt;typename T , typename... U&gt; </td></tr>
<tr class="memitem:a7a7ac34b1de15f0395424b922c7556f4"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a7a7ac34b1de15f0395424b922c7556f4">append</a> (T arg, U... args)</td></tr>
<tr class="separator:a7a7ac34b1de15f0395424b922c7556f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eb985a85c034def87355e05390f6a0d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8eb985a85c034def87355e05390f6a0d"><td class="memTemplItemLeft" align="right" valign="top">enable_if&lt; is_same&lt; T, bool &gt;::value, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp; &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a8eb985a85c034def87355e05390f6a0d">operator=</a> (T b)</td></tr>
<tr class="separator:a8eb985a85c034def87355e05390f6a0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ea48f13230d6651dcef269676cceef7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8ea48f13230d6651dcef269676cceef7"><td class="memTemplItemLeft" align="right" valign="top">enable_if&lt; is_integral&lt; T &gt;::value &amp;&amp;!is_same&lt; T, bool &gt;::value, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp; &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a8ea48f13230d6651dcef269676cceef7">operator=</a> (T i)</td></tr>
<tr class="separator:a8ea48f13230d6651dcef269676cceef7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5e786f1c9b152da597059e188c57ce6"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ab5e786f1c9b152da597059e188c57ce6"><td class="memTemplItemLeft" align="right" valign="top">enable_if&lt; is_floating_point&lt; T &gt;::value, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp; &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ab5e786f1c9b152da597059e188c57ce6">operator=</a> (T f)</td></tr>
<tr class="separator:ab5e786f1c9b152da597059e188c57ce6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af402e40a025573a81fd4c9eb9fcc9880"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:af402e40a025573a81fd4c9eb9fcc9880"><td class="memTemplItemLeft" align="right" valign="top">enable_if&lt; is_convertible&lt; T, string &gt;::value, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp; &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#af402e40a025573a81fd4c9eb9fcc9880">operator=</a> (T s)</td></tr>
<tr class="separator:af402e40a025573a81fd4c9eb9fcc9880"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a5279cf4799587fcbcd196fe49c0fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a90a5279cf4799587fcbcd196fe49c0fe">operator[]</a> (const string &amp;key)</td></tr>
<tr class="separator:a90a5279cf4799587fcbcd196fe49c0fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af85e550c8a402ebab4a7ba49b20581fe"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#af85e550c8a402ebab4a7ba49b20581fe">operator[]</a> (const string &amp;key) const</td></tr>
<tr class="separator:af85e550c8a402ebab4a7ba49b20581fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addec7adde90b0293277c0ef7d050b29e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#addec7adde90b0293277c0ef7d050b29e">operator[]</a> (unsigned index)</td></tr>
<tr class="separator:addec7adde90b0293277c0ef7d050b29e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07c27fa6d4b14f4a3165dbee4adc323f"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a07c27fa6d4b14f4a3165dbee4adc323f">operator[]</a> (unsigned index) const</td></tr>
<tr class="separator:a07c27fa6d4b14f4a3165dbee4adc323f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada96d750321819030ffea8cda9e5a788"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ada96d750321819030ffea8cda9e5a788">at</a> (const string &amp;key)</td></tr>
<tr class="separator:ada96d750321819030ffea8cda9e5a788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1f3f05c485e4a1717d585d576a69c40"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ac1f3f05c485e4a1717d585d576a69c40">at</a> (const string &amp;key) const</td></tr>
<tr class="separator:ac1f3f05c485e4a1717d585d576a69c40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ebbb2081e3dffc75ef41684bc01c1c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a3ebbb2081e3dffc75ef41684bc01c1c0">at</a> (unsigned index)</td></tr>
<tr class="separator:a3ebbb2081e3dffc75ef41684bc01c1c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f3ac279f8061af53b427438e5a9cc08"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a5f3ac279f8061af53b427438e5a9cc08">at</a> (unsigned index) const</td></tr>
<tr class="separator:a5f3ac279f8061af53b427438e5a9cc08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe7a971ed2a752545e379b1661b81f02"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#afe7a971ed2a752545e379b1661b81f02">length</a> () const</td></tr>
<tr class="separator:afe7a971ed2a752545e379b1661b81f02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48d1a53054f85cb9db907415e8925991"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a48d1a53054f85cb9db907415e8925991">hasKey</a> (const string &amp;key) const</td></tr>
<tr class="separator:a48d1a53054f85cb9db907415e8925991"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d6190ac82c7a5652bdc2bba287d4c23"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a6d6190ac82c7a5652bdc2bba287d4c23">size</a> () const</td></tr>
<tr class="separator:a6d6190ac82c7a5652bdc2bba287d4c23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a092f5f560fd025c81437be8f0a493020"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528a">Class</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a092f5f560fd025c81437be8f0a493020">JSONType</a> () const</td></tr>
<tr class="separator:a092f5f560fd025c81437be8f0a493020"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb5870889fdf81f3da7e986fdb55397a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#acb5870889fdf81f3da7e986fdb55397a">IsArray</a> () const</td></tr>
<tr class="memdesc:acb5870889fdf81f3da7e986fdb55397a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Added for <a class="el" href="namespace_novel_tea.htm">NovelTea</a>.  <a href="classsj_1_1_j_s_o_n.htm#acb5870889fdf81f3da7e986fdb55397a">More...</a><br /></td></tr>
<tr class="separator:acb5870889fdf81f3da7e986fdb55397a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a242064f494ebaa4b468e911269c8ffbd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a242064f494ebaa4b468e911269c8ffbd">IsObject</a> () const</td></tr>
<tr class="separator:a242064f494ebaa4b468e911269c8ffbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46d00614fdd9c439b3462fc470f5876b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a46d00614fdd9c439b3462fc470f5876b">IsEmpty</a> () const</td></tr>
<tr class="separator:a46d00614fdd9c439b3462fc470f5876b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43ee4f59136bdafb793e5b2e52893538"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a43ee4f59136bdafb793e5b2e52893538">erase</a> (unsigned index)</td></tr>
<tr class="separator:a43ee4f59136bdafb793e5b2e52893538"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59c5c5aacd7108e1eac12a2bb28e8769"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a59c5c5aacd7108e1eac12a2bb28e8769">erase</a> (const std::string &amp;key)</td></tr>
<tr class="separator:a59c5c5aacd7108e1eac12a2bb28e8769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17a565bb03314704f182ef19195a4aa2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a17a565bb03314704f182ef19195a4aa2">insert</a> (unsigned index, const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;j)</td></tr>
<tr class="separator:a17a565bb03314704f182ef19195a4aa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a332a897d858c7c6db82a9d609273844f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a332a897d858c7c6db82a9d609273844f">IsNull</a> () const</td></tr>
<tr class="memdesc:a332a897d858c7c6db82a9d609273844f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functions for getting primitives from the <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> object.  <a href="classsj_1_1_j_s_o_n.htm#a332a897d858c7c6db82a9d609273844f">More...</a><br /></td></tr>
<tr class="separator:a332a897d858c7c6db82a9d609273844f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a112ffa533dbf418c62251db10b64096f"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a112ffa533dbf418c62251db10b64096f">ToString</a> () const</td></tr>
<tr class="separator:a112ffa533dbf418c62251db10b64096f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a221ab673180aea599d52d207e9251f9b"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a221ab673180aea599d52d207e9251f9b">ToString</a> (bool &amp;ok) const</td></tr>
<tr class="separator:a221ab673180aea599d52d207e9251f9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09d5ef37ae99f19b63ab6c4b76ce6b83"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a09d5ef37ae99f19b63ab6c4b76ce6b83">ToFloat</a> () const</td></tr>
<tr class="separator:a09d5ef37ae99f19b63ab6c4b76ce6b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68391e1638f0adfaee2816f7139d734b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a68391e1638f0adfaee2816f7139d734b">ToFloat</a> (bool &amp;ok) const</td></tr>
<tr class="separator:a68391e1638f0adfaee2816f7139d734b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10f06e9c3591d3cec1710c01f6d95563"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a10f06e9c3591d3cec1710c01f6d95563">ToInt</a> () const</td></tr>
<tr class="separator:a10f06e9c3591d3cec1710c01f6d95563"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0733e1ad8dbe8846f7df7676943757e4"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a0733e1ad8dbe8846f7df7676943757e4">ToInt</a> (bool &amp;ok) const</td></tr>
<tr class="separator:a0733e1ad8dbe8846f7df7676943757e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b2f609f9b5940b14b4d6fd55a37870"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a12b2f609f9b5940b14b4d6fd55a37870">ToBool</a> () const</td></tr>
<tr class="separator:a12b2f609f9b5940b14b4d6fd55a37870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dbbbb12a8c6ef8affdebaa608446f9f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a8dbbbb12a8c6ef8affdebaa608446f9f">ToBool</a> (bool &amp;ok) const</td></tr>
<tr class="separator:a8dbbbb12a8c6ef8affdebaa608446f9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab11f62a2a7980884b167f822668e6ce8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_wrapper.htm">JSONWrapper</a>&lt; map&lt; string, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ab11f62a2a7980884b167f822668e6ce8">ObjectRange</a> ()</td></tr>
<tr class="separator:ab11f62a2a7980884b167f822668e6ce8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5784e356aa1ce43564f24d304da3284"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_wrapper.htm">JSONWrapper</a>&lt; deque&lt; <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ae5784e356aa1ce43564f24d304da3284">ArrayRange</a> ()</td></tr>
<tr class="separator:ae5784e356aa1ce43564f24d304da3284"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fcb034e7ee0b85cae5de98fc78435e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_const_wrapper.htm">JSONConstWrapper</a>&lt; map&lt; string, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a0fcb034e7ee0b85cae5de98fc78435e7">ObjectRange</a> () const</td></tr>
<tr class="separator:a0fcb034e7ee0b85cae5de98fc78435e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f2c047bf96609ff9d2a0a76992cdd46"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_const_wrapper.htm">JSONConstWrapper</a>&lt; deque&lt; <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a0f2c047bf96609ff9d2a0a76992cdd46">ArrayRange</a> () const</td></tr>
<tr class="separator:a0f2c047bf96609ff9d2a0a76992cdd46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7cd4c2f027ef283666c1871c198fd70"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#ab7cd4c2f027ef283666c1871c198fd70">dump</a> (int depth=1, string tab=&quot;  &quot;) const</td></tr>
<tr class="separator:ab7cd4c2f027ef283666c1871c198fd70"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:afe158b1343c3e6488e7e72ce8e3465ef"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#afe158b1343c3e6488e7e72ce8e3465ef">Make</a> (<a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528a">Class</a> type)</td></tr>
<tr class="separator:afe158b1343c3e6488e7e72ce8e3465ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ce974233694d76c6550adbdc7f2a1a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a29ce974233694d76c6550adbdc7f2a1a">Load</a> (const string &amp;)</td></tr>
<tr class="separator:a29ce974233694d76c6550adbdc7f2a1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a5513ab67f2660e88d73c75fc83b6945c"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a5513ab67f2660e88d73c75fc83b6945c">operator&lt;&lt;</a> (std::ostream &amp;, const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;)</td></tr>
<tr class="separator:a5513ab67f2660e88d73c75fc83b6945c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a1cd3004a3aa078cbc2b33192d26e49"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a4a1cd3004a3aa078cbc2b33192d26e49">operator==</a> (const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;left, const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;right)</td></tr>
<tr class="separator:a4a1cd3004a3aa078cbc2b33192d26e49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c907350dcd3560cb3800253e99a4481"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsj_1_1_j_s_o_n.htm#a3c907350dcd3560cb3800253e99a4481">operator!=</a> (const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;left, const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;right)</td></tr>
<tr class="separator:a3c907350dcd3560cb3800253e99a4481"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a50a38c9e0b804e3d660ac03c3492528a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50a38c9e0b804e3d660ac03c3492528a">&#9670;&nbsp;</a></span>Class</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528a">sj::JSON::Class</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a50a38c9e0b804e3d660ac03c3492528aabbb93ef26e3c101ff11cdd21cab08a94"></a>Null&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a50a38c9e0b804e3d660ac03c3492528aa497031794414a552435f90151ac3b54b"></a>Object&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a50a38c9e0b804e3d660ac03c3492528aa4410ec34d9e6c1a68100ca0ce033fb17"></a>Array&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a50a38c9e0b804e3d660ac03c3492528aa27118326006d3829667a400ad23d5d98"></a>String&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a50a38c9e0b804e3d660ac03c3492528aac8df43648942ec3a9aec140f07f47b7c"></a>Floating&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a50a38c9e0b804e3d660ac03c3492528aa4ea94552a2bec56a29592359a1b6069e"></a>Integral&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a50a38c9e0b804e3d660ac03c3492528aa27226c864bac7454a8504f8edb15d95b"></a>Boolean&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8f45c59bb0d18fe1372ee2582881923b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f45c59bb0d18fe1372ee2582881923b">&#9670;&nbsp;</a></span>JSON() <span class="overload">[1/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad098259d00668616f2ca2d984cab5662"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad098259d00668616f2ca2d984cab5662">&#9670;&nbsp;</a></span>JSON() <span class="overload">[2/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramtype">initializer_list&lt; <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &gt;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4b7053c37b4ec930a330397904eb02d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b7053c37b4ec930a330397904eb02d8">&#9670;&nbsp;</a></span>JSON() <span class="overload">[3/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a037662eacf4ecd46857fa05f86b6b41d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a037662eacf4ecd46857fa05f86b6b41d">&#9670;&nbsp;</a></span>JSON() <span class="overload">[4/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a693a4db1d474783f60d10ce056075c03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a693a4db1d474783f60d10ce056075c03">&#9670;&nbsp;</a></span>~JSON()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::~JSON </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5cedaf40c0e1ecb3075a5867be61e5c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cedaf40c0e1ecb3075a5867be61e5c0">&#9670;&nbsp;</a></span>JSON() <span class="overload">[5/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">typename enable_if&lt; is_same&lt; T, bool &gt;::value &gt;::type *&#160;</td>
          <td class="paramname"> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7ca9a2b2295174cc2dceb33c295d9cb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ca9a2b2295174cc2dceb33c295d9cb9">&#9670;&nbsp;</a></span>JSON() <span class="overload">[6/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">typename enable_if&lt; is_integral&lt; T &gt;::value &amp;&amp;!is_same&lt; T, bool &gt;::value &gt;::type *&#160;</td>
          <td class="paramname"> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adbcdb119110616fcbd248d7807b815fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbcdb119110616fcbd248d7807b815fb">&#9670;&nbsp;</a></span>JSON() <span class="overload">[7/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">typename enable_if&lt; is_floating_point&lt; T &gt;::value &gt;::type *&#160;</td>
          <td class="paramname"> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a677518df28d15da20aef530b4b642e92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a677518df28d15da20aef530b4b642e92">&#9670;&nbsp;</a></span>JSON() <span class="overload">[8/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">typename enable_if&lt; is_convertible&lt; T, string &gt;::value &gt;::type *&#160;</td>
          <td class="paramname"> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b4fea4dc17b0b007e3f17591968c4b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b4fea4dc17b0b007e3f17591968c4b4">&#9670;&nbsp;</a></span>JSON() <span class="overload">[9/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sj::JSON::JSON </td>
          <td>(</td>
          <td class="paramtype">std::nullptr_t&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a59961716155b7fb9ab488a0940984a3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59961716155b7fb9ab488a0940984a3b">&#9670;&nbsp;</a></span>append() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sj::JSON::append </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7a7ac34b1de15f0395424b922c7556f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a7ac34b1de15f0395424b922c7556f4">&#9670;&nbsp;</a></span>append() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename... U&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sj::JSON::append </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>arg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">U...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5784e356aa1ce43564f24d304da3284"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5784e356aa1ce43564f24d304da3284">&#9670;&nbsp;</a></span>ArrayRange() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_wrapper.htm">JSONWrapper</a>&lt;deque&lt;<a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&gt; &gt; sj::JSON::ArrayRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0f2c047bf96609ff9d2a0a76992cdd46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f2c047bf96609ff9d2a0a76992cdd46">&#9670;&nbsp;</a></span>ArrayRange() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_const_wrapper.htm">JSONConstWrapper</a>&lt;deque&lt;<a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&gt; &gt; sj::JSON::ArrayRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ada96d750321819030ffea8cda9e5a788"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada96d750321819030ffea8cda9e5a788">&#9670;&nbsp;</a></span>at() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::at </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac1f3f05c485e4a1717d585d576a69c40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1f3f05c485e4a1717d585d576a69c40">&#9670;&nbsp;</a></span>at() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::at </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3ebbb2081e3dffc75ef41684bc01c1c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ebbb2081e3dffc75ef41684bc01c1c0">&#9670;&nbsp;</a></span>at() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::at </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5f3ac279f8061af53b427438e5a9cc08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f3ac279f8061af53b427438e5a9cc08">&#9670;&nbsp;</a></span>at() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::at </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab7cd4c2f027ef283666c1871c198fd70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7cd4c2f027ef283666c1871c198fd70">&#9670;&nbsp;</a></span>dump()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string sj::JSON::dump </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>depth</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>tab</em> = <code>&quot;&#160;&#160;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a59c5c5aacd7108e1eac12a2bb28e8769"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59c5c5aacd7108e1eac12a2bb28e8769">&#9670;&nbsp;</a></span>erase() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sj::JSON::erase </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a43ee4f59136bdafb793e5b2e52893538"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43ee4f59136bdafb793e5b2e52893538">&#9670;&nbsp;</a></span>erase() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sj::JSON::erase </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a48d1a53054f85cb9db907415e8925991"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48d1a53054f85cb9db907415e8925991">&#9670;&nbsp;</a></span>hasKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool sj::JSON::hasKey </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a17a565bb03314704f182ef19195a4aa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17a565bb03314704f182ef19195a4aa2">&#9670;&nbsp;</a></span>insert()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sj::JSON::insert </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acb5870889fdf81f3da7e986fdb55397a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb5870889fdf81f3da7e986fdb55397a">&#9670;&nbsp;</a></span>IsArray()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool sj::JSON::IsArray </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Added for <a class="el" href="namespace_novel_tea.htm">NovelTea</a>. </p>

</div>
</div>
<a id="a46d00614fdd9c439b3462fc470f5876b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46d00614fdd9c439b3462fc470f5876b">&#9670;&nbsp;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sj::JSON::IsEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a332a897d858c7c6db82a9d609273844f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a332a897d858c7c6db82a9d609273844f">&#9670;&nbsp;</a></span>IsNull()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool sj::JSON::IsNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Functions for getting primitives from the <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> object. </p>

</div>
</div>
<a id="a242064f494ebaa4b468e911269c8ffbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a242064f494ebaa4b468e911269c8ffbd">&#9670;&nbsp;</a></span>IsObject()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool sj::JSON::IsObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a092f5f560fd025c81437be8f0a493020"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a092f5f560fd025c81437be8f0a493020">&#9670;&nbsp;</a></span>JSONType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528a">Class</a> sj::JSON::JSONType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afe7a971ed2a752545e379b1661b81f02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe7a971ed2a752545e379b1661b81f02">&#9670;&nbsp;</a></span>length()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int sj::JSON::length </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a29ce974233694d76c6550adbdc7f2a1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29ce974233694d76c6550adbdc7f2a1a">&#9670;&nbsp;</a></span>Load()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> sj::JSON::Load </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afe158b1343c3e6488e7e72ce8e3465ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe158b1343c3e6488e7e72ce8e3465ef">&#9670;&nbsp;</a></span>Make()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> sj::JSON::Make </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsj_1_1_j_s_o_n.htm#a50a38c9e0b804e3d660ac03c3492528a">Class</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab11f62a2a7980884b167f822668e6ce8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab11f62a2a7980884b167f822668e6ce8">&#9670;&nbsp;</a></span>ObjectRange() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_wrapper.htm">JSONWrapper</a>&lt;map&lt;string,<a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&gt; &gt; sj::JSON::ObjectRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0fcb034e7ee0b85cae5de98fc78435e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fcb034e7ee0b85cae5de98fc78435e7">&#9670;&nbsp;</a></span>ObjectRange() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n_1_1_j_s_o_n_const_wrapper.htm">JSONConstWrapper</a>&lt;map&lt;string,<a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&gt; &gt; sj::JSON::ObjectRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac923ac49bd979cf40a2f019d4f782a12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac923ac49bd979cf40a2f019d4f782a12">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad450fd17d266b1b1f59e9fb01a2bdc16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad450fd17d266b1b1f59e9fb01a2bdc16">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8eb985a85c034def87355e05390f6a0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8eb985a85c034def87355e05390f6a0d">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enable_if&lt;is_same&lt;T,bool&gt;::value, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp;&gt;::type sj::JSON::operator= </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab5e786f1c9b152da597059e188c57ce6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5e786f1c9b152da597059e188c57ce6">&#9670;&nbsp;</a></span>operator=() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enable_if&lt;is_floating_point&lt;T&gt;::value, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp;&gt;::type sj::JSON::operator= </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8ea48f13230d6651dcef269676cceef7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ea48f13230d6651dcef269676cceef7">&#9670;&nbsp;</a></span>operator=() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enable_if&lt;is_integral&lt;T&gt;::value &amp;&amp; !is_same&lt;T,bool&gt;::value, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp;&gt;::type sj::JSON::operator= </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af402e40a025573a81fd4c9eb9fcc9880"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af402e40a025573a81fd4c9eb9fcc9880">&#9670;&nbsp;</a></span>operator=() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enable_if&lt;is_convertible&lt;T,string&gt;::value, <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp;&gt;::type sj::JSON::operator= </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a90a5279cf4799587fcbcd196fe49c0fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90a5279cf4799587fcbcd196fe49c0fe">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::operator[] </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af85e550c8a402ebab4a7ba49b20581fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af85e550c8a402ebab4a7ba49b20581fe">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::operator[] </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="addec7adde90b0293277c0ef7d050b29e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addec7adde90b0293277c0ef7d050b29e">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::operator[] </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a07c27fa6d4b14f4a3165dbee4adc323f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07c27fa6d4b14f4a3165dbee4adc323f">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a>&amp; sj::JSON::operator[] </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6d6190ac82c7a5652bdc2bba287d4c23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d6190ac82c7a5652bdc2bba287d4c23">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int sj::JSON::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a12b2f609f9b5940b14b4d6fd55a37870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12b2f609f9b5940b14b4d6fd55a37870">&#9670;&nbsp;</a></span>ToBool() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool sj::JSON::ToBool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8dbbbb12a8c6ef8affdebaa608446f9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dbbbb12a8c6ef8affdebaa608446f9f">&#9670;&nbsp;</a></span>ToBool() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool sj::JSON::ToBool </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>ok</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a09d5ef37ae99f19b63ab6c4b76ce6b83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09d5ef37ae99f19b63ab6c4b76ce6b83">&#9670;&nbsp;</a></span>ToFloat() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double sj::JSON::ToFloat </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a68391e1638f0adfaee2816f7139d734b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68391e1638f0adfaee2816f7139d734b">&#9670;&nbsp;</a></span>ToFloat() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double sj::JSON::ToFloat </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>ok</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a10f06e9c3591d3cec1710c01f6d95563"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10f06e9c3591d3cec1710c01f6d95563">&#9670;&nbsp;</a></span>ToInt() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long sj::JSON::ToInt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0733e1ad8dbe8846f7df7676943757e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0733e1ad8dbe8846f7df7676943757e4">&#9670;&nbsp;</a></span>ToInt() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long sj::JSON::ToInt </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>ok</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a112ffa533dbf418c62251db10b64096f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a112ffa533dbf418c62251db10b64096f">&#9670;&nbsp;</a></span>ToString() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string sj::JSON::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a221ab673180aea599d52d207e9251f9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a221ab673180aea599d52d207e9251f9b">&#9670;&nbsp;</a></span>ToString() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string sj::JSON::ToString </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>ok</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a3c907350dcd3560cb3800253e99a4481"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c907350dcd3560cb3800253e99a4481">&#9670;&nbsp;</a></span>operator!=</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5513ab67f2660e88d73c75fc83b6945c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5513ab67f2660e88d73c75fc83b6945c">&#9670;&nbsp;</a></span>operator&lt;&lt;</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4a1cd3004a3aa078cbc2b33192d26e49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a1cd3004a3aa078cbc2b33192d26e49">&#9670;&nbsp;</a></span>operator==</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a> &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/NovelTea/<a class="el" href="json_8hpp_source.htm">json.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacesj.htm">sj</a></li><li class="navelem"><a class="el" href="classsj_1_1_j_s_o_n.htm">JSON</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
