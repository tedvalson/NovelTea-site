<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: NovelTea::ScriptManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_novel_tea_1_1_script_manager.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="class_novel_tea_1_1_script_manager-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NovelTea::ScriptManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_script_manager_8hpp_source.htm">ScriptManager.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NovelTea::ScriptManager:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aec077b85b18400a564cc2aafb52d7fd7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#aec077b85b18400a564cc2aafb52d7fd7">ScriptManager</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:aec077b85b18400a564cc2aafb52d7fd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1ed63341599f642d46f48d27da2f1f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#ade1ed63341599f642d46f48d27da2f1f">~ScriptManager</a> ()</td></tr>
<tr class="separator:ade1ed63341599f642d46f48d27da2f1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a522ad63b0c5239612aba411d588036db"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a522ad63b0c5239612aba411d588036db">reset</a> ()</td></tr>
<tr class="separator:a522ad63b0c5239612aba411d588036db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8af7900fa1585ba90e7406a0cc92ca0b"><td class="memItemLeft" align="right" valign="top">virtual DukValue&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a8af7900fa1585ba90e7406a0cc92ca0b">runScript</a> (std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_script.htm">Script</a> &gt; script)</td></tr>
<tr class="separator:a8af7900fa1585ba90e7406a0cc92ca0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53d279dd6bb3d473feb0175e69c11e57"><td class="memItemLeft" align="right" valign="top">virtual DukValue&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a53d279dd6bb3d473feb0175e69c11e57">runScriptId</a> (const std::string &amp;scriptId)</td></tr>
<tr class="separator:a53d279dd6bb3d473feb0175e69c11e57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23c23b87796a4dee574ad715e1f3732c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a23c23b87796a4dee574ad715e1f3732c">runActionScript</a> (const std::string &amp;verbId, const std::vector&lt; std::string &gt; &amp;objectIds, const std::string &amp;script)</td></tr>
<tr class="separator:a23c23b87796a4dee574ad715e1f3732c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5a3963b7ab880e46087b1a6811c69a9"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#af5a3963b7ab880e46087b1a6811c69a9">runActionScript</a> (const std::string &amp;verbId, const std::string &amp;verbIdOrig, const std::vector&lt; std::string &gt; &amp;objectIds)</td></tr>
<tr class="separator:af5a3963b7ab880e46087b1a6811c69a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a465ef2c6ea08a13fa8008f1aae8607c8"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a465ef2c6ea08a13fa8008f1aae8607c8">runActionScript</a> (const std::string &amp;verbId, const std::vector&lt; std::string &gt; &amp;objectIds)</td></tr>
<tr class="separator:a465ef2c6ea08a13fa8008f1aae8607c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ed2cc6a592b06fe41ab102d2506322d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a7ed2cc6a592b06fe41ab102d2506322d">setActiveEntity</a> (std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_entity.htm">Entity</a> &gt; entity)</td></tr>
<tr class="separator:a7ed2cc6a592b06fe41ab102d2506322d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92a32d7c8ef929f683397d90e0b4618d"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a92a32d7c8ef929f683397d90e0b4618d">evalExpressions</a> (const std::string &amp;s)</td></tr>
<tr class="separator:a92a32d7c8ef929f683397d90e0b4618d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa22212974a400291d0f204d3d278ab71"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#aa22212974a400291d0f204d3d278ab71">getTextInput</a> (const std::string &amp;message, const DukValue &amp;func)</td></tr>
<tr class="separator:aa22212974a400291d0f204d3d278ab71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27b7c58e3a4eb1761d66db5df2b35188"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a27b7c58e3a4eb1761d66db5df2b35188">randSeed</a> (int seed)</td></tr>
<tr class="separator:a27b7c58e3a4eb1761d66db5df2b35188"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7249fb13128657942002e0313d66c99"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#ac7249fb13128657942002e0313d66c99">randGen</a> ()</td></tr>
<tr class="separator:ac7249fb13128657942002e0313d66c99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cc38e5be47d5582e5f1592dbb9db0d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a1cc38e5be47d5582e5f1592dbb9db0d4">run</a> (const std::string &amp;script)</td></tr>
<tr class="separator:a1cc38e5be47d5582e5f1592dbb9db0d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a017a85e79dd8ac6e3ca8d6096d6654eb"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a017a85e79dd8ac6e3ca8d6096d6654eb"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a017a85e79dd8ac6e3ca8d6096d6654eb">run</a> (const std::string &amp;script)</td></tr>
<tr class="separator:a017a85e79dd8ac6e3ca8d6096d6654eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96c7247ccf4807855cb8e0875df1e97e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a96c7247ccf4807855cb8e0875df1e97e">runInClosure</a> (const std::string &amp;script)</td></tr>
<tr class="separator:a96c7247ccf4807855cb8e0875df1e97e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7e3be4e11f4a214725e255eb55b30a4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac7e3be4e11f4a214725e255eb55b30a4"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#ac7e3be4e11f4a214725e255eb55b30a4">runInClosure</a> (const std::string &amp;script)</td></tr>
<tr class="separator:ac7e3be4e11f4a214725e255eb55b30a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a938ffda11c5582b911fa2b1f479458b9"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a938ffda11c5582b911fa2b1f479458b9"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a938ffda11c5582b911fa2b1f479458b9">call</a> (const DukValue &amp;func)</td></tr>
<tr class="separator:a938ffda11c5582b911fa2b1f479458b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06d860936b7731e1cb8f6751726b782c"><td class="memTemplParams" colspan="2">template&lt;typename... Args&gt; </td></tr>
<tr class="memitem:a06d860936b7731e1cb8f6751726b782c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a06d860936b7731e1cb8f6751726b782c">call</a> (const std::string &amp;script, const std::string &amp;funcName, Args &amp;&amp;... args)</td></tr>
<tr class="separator:a06d860936b7731e1cb8f6751726b782c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e4eb4504243fa3a4cf58bf4e18d4573"><td class="memTemplParams" colspan="2">template&lt;typename T , typename... Args&gt; </td></tr>
<tr class="memitem:a5e4eb4504243fa3a4cf58bf4e18d4573"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a5e4eb4504243fa3a4cf58bf4e18d4573">call</a> (const std::string &amp;script, const std::string &amp;funcName, Args &amp;&amp;... args)</td></tr>
<tr class="separator:a5e4eb4504243fa3a4cf58bf4e18d4573"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_subsystem"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_subsystem')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_subsystem.htm">NovelTea::Subsystem</a></td></tr>
<tr class="memitem:ac7c8b5731a634eb59fe03a9831d1277f inherit pub_methods_class_novel_tea_1_1_subsystem"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_subsystem.htm#ac7c8b5731a634eb59fe03a9831d1277f">Subsystem</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:ac7c8b5731a634eb59fe03a9831d1277f inherit pub_methods_class_novel_tea_1_1_subsystem"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad01aa2ad4a1dcb373ec8fc60f6b20903 inherit pub_methods_class_novel_tea_1_1_subsystem"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_subsystem.htm#ad01aa2ad4a1dcb373ec8fc60f6b20903">~Subsystem</a> ()</td></tr>
<tr class="separator:ad01aa2ad4a1dcb373ec8fc60f6b20903 inherit pub_methods_class_novel_tea_1_1_subsystem"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8486894d1749ccf089b9ec27a92d1506 inherit pub_methods_class_novel_tea_1_1_subsystem"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_subsystem.htm#a8486894d1749ccf089b9ec27a92d1506">initialize</a> ()</td></tr>
<tr class="separator:a8486894d1749ccf089b9ec27a92d1506 inherit pub_methods_class_novel_tea_1_1_subsystem"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad43a1faba2a84d00b25a99044c90f850 inherit pub_methods_class_novel_tea_1_1_subsystem"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_subsystem.htm#ad43a1faba2a84d00b25a99044c90f850">update</a> (float delta)</td></tr>
<tr class="separator:ad43a1faba2a84d00b25a99044c90f850 inherit pub_methods_class_novel_tea_1_1_subsystem"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_context_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_context_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_context_object.htm">NovelTea::ContextObject</a></td></tr>
<tr class="memitem:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a729b81d65b38b86841e7c522070f9896">ContextObject</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a3bb9175b66933787a9a06e50bd6c1a06">~ContextObject</a> ()</td></tr>
<tr class="separator:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a67dd5b0a333964bb76c984abf8fa0e75">getContext</a> () const</td></tr>
<tr class="separator:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9f1ab4f9c317130168befcda548a181c"><td class="memItemLeft" align="right" valign="top">static std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a9f1ab4f9c317130168befcda548a181c">name</a> ()</td></tr>
<tr class="separator:a9f1ab4f9c317130168befcda548a181c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:afa90e5b1564aa10a2ca4779e41773322"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#afa90e5b1564aa10a2ca4779e41773322">registerFunctions</a> ()</td></tr>
<tr class="separator:afa90e5b1564aa10a2ca4779e41773322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbb3f80c09fef2d00c55147f99c619b2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#adbb3f80c09fef2d00c55147f99c619b2">registerClasses</a> ()</td></tr>
<tr class="separator:adbb3f80c09fef2d00c55147f99c619b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1019d659373ea232d41a6135ac95c322"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a1019d659373ea232d41a6135ac95c322">registerGlobals</a> ()</td></tr>
<tr class="separator:a1019d659373ea232d41a6135ac95c322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a619a09dca58eb4502a106c0afa7eb0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#a3a619a09dca58eb4502a106c0afa7eb0">runAutorunScripts</a> ()</td></tr>
<tr class="separator:a3a619a09dca58eb4502a106c0afa7eb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad02b0ddcf77379b790ff5224b770dfbb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm#ad02b0ddcf77379b790ff5224b770dfbb">checkAutorun</a> (const <a class="el" href="classsj_1_1_j_s_o_n.htm">sj::JSON</a> &amp;j)</td></tr>
<tr class="separator:ad02b0ddcf77379b790ff5224b770dfbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aec077b85b18400a564cc2aafb52d7fd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec077b85b18400a564cc2aafb52d7fd7">&#9670;&nbsp;</a></span>ScriptManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ScriptManager::ScriptManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ade1ed63341599f642d46f48d27da2f1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade1ed63341599f642d46f48d27da2f1f">&#9670;&nbsp;</a></span>~ScriptManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ScriptManager::~ScriptManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a938ffda11c5582b911fa2b1f479458b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a938ffda11c5582b911fa2b1f479458b9">&#9670;&nbsp;</a></span>call() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T NovelTea::ScriptManager::call </td>
          <td>(</td>
          <td class="paramtype">const DukValue &amp;&#160;</td>
          <td class="paramname"><em>func</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a06d860936b7731e1cb8f6751726b782c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06d860936b7731e1cb8f6751726b782c">&#9670;&nbsp;</a></span>call() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::call </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>funcName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5e4eb4504243fa3a4cf58bf4e18d4573"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e4eb4504243fa3a4cf58bf4e18d4573">&#9670;&nbsp;</a></span>call() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T NovelTea::ScriptManager::call </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>funcName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad02b0ddcf77379b790ff5224b770dfbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad02b0ddcf77379b790ff5224b770dfbb">&#9670;&nbsp;</a></span>checkAutorun()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::checkAutorun </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsj_1_1_j_s_o_n.htm">sj::JSON</a> &amp;&#160;</td>
          <td class="paramname"><em>j</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a92a32d7c8ef929f683397d90e0b4618d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92a32d7c8ef929f683397d90e0b4618d">&#9670;&nbsp;</a></span>evalExpressions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string NovelTea::ScriptManager::evalExpressions </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa22212974a400291d0f204d3d278ab71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa22212974a400291d0f204d3d278ab71">&#9670;&nbsp;</a></span>getTextInput()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void NovelTea::ScriptManager::getTextInput </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>message</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const DukValue &amp;&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9f1ab4f9c317130168befcda548a181c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1ab4f9c317130168befcda548a181c">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::string NovelTea::ScriptManager::name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7249fb13128657942002e0313d66c99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7249fb13128657942002e0313d66c99">&#9670;&nbsp;</a></span>randGen()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double NovelTea::ScriptManager::randGen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a27b7c58e3a4eb1761d66db5df2b35188"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27b7c58e3a4eb1761d66db5df2b35188">&#9670;&nbsp;</a></span>randSeed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void NovelTea::ScriptManager::randSeed </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>seed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adbb3f80c09fef2d00c55147f99c619b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbb3f80c09fef2d00c55147f99c619b2">&#9670;&nbsp;</a></span>registerClasses()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::registerClasses </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afa90e5b1564aa10a2ca4779e41773322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa90e5b1564aa10a2ca4779e41773322">&#9670;&nbsp;</a></span>registerFunctions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::registerFunctions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1019d659373ea232d41a6135ac95c322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1019d659373ea232d41a6135ac95c322">&#9670;&nbsp;</a></span>registerGlobals()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::registerGlobals </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a522ad63b0c5239612aba411d588036db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a522ad63b0c5239612aba411d588036db">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void NovelTea::ScriptManager::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1cc38e5be47d5582e5f1592dbb9db0d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cc38e5be47d5582e5f1592dbb9db0d4">&#9670;&nbsp;</a></span>run() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::run </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a017a85e79dd8ac6e3ca8d6096d6654eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a017a85e79dd8ac6e3ca8d6096d6654eb">&#9670;&nbsp;</a></span>run() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T NovelTea::ScriptManager::run </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af5a3963b7ab880e46087b1a6811c69a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5a3963b7ab880e46087b1a6811c69a9">&#9670;&nbsp;</a></span>runActionScript() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool NovelTea::ScriptManager::runActionScript </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>verbId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>verbIdOrig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>objectIds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a465ef2c6ea08a13fa8008f1aae8607c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a465ef2c6ea08a13fa8008f1aae8607c8">&#9670;&nbsp;</a></span>runActionScript() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool NovelTea::ScriptManager::runActionScript </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>verbId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>objectIds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a23c23b87796a4dee574ad715e1f3732c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23c23b87796a4dee574ad715e1f3732c">&#9670;&nbsp;</a></span>runActionScript() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool NovelTea::ScriptManager::runActionScript </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>verbId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>objectIds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a619a09dca58eb4502a106c0afa7eb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a619a09dca58eb4502a106c0afa7eb0">&#9670;&nbsp;</a></span>runAutorunScripts()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::runAutorunScripts </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a96c7247ccf4807855cb8e0875df1e97e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96c7247ccf4807855cb8e0875df1e97e">&#9670;&nbsp;</a></span>runInClosure() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::runInClosure </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7e3be4e11f4a214725e255eb55b30a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7e3be4e11f4a214725e255eb55b30a4">&#9670;&nbsp;</a></span>runInClosure() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T NovelTea::ScriptManager::runInClosure </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>script</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8af7900fa1585ba90e7406a0cc92ca0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8af7900fa1585ba90e7406a0cc92ca0b">&#9670;&nbsp;</a></span>runScript()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DukValue NovelTea::ScriptManager::runScript </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_script.htm">Script</a> &gt;&#160;</td>
          <td class="paramname"><em>script</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a53d279dd6bb3d473feb0175e69c11e57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53d279dd6bb3d473feb0175e69c11e57">&#9670;&nbsp;</a></span>runScriptId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DukValue NovelTea::ScriptManager::runScriptId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>scriptId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7ed2cc6a592b06fe41ab102d2506322d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ed2cc6a592b06fe41ab102d2506322d">&#9670;&nbsp;</a></span>setActiveEntity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ScriptManager::setActiveEntity </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_entity.htm">Entity</a> &gt;&#160;</td>
          <td class="paramname"><em>entity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/NovelTea/<a class="el" href="_script_manager_8hpp_source.htm">ScriptManager.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_novel_tea.htm">NovelTea</a></li><li class="navelem"><a class="el" href="class_novel_tea_1_1_script_manager.htm">ScriptManager</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
