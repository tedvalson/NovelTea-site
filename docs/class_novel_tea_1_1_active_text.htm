<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: NovelTea::ActiveText Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_novel_tea_1_1_active_text.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="class_novel_tea_1_1_active_text-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NovelTea::ActiveText Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_active_text_8hpp_source.htm">ActiveText.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NovelTea::ActiveText:</div>
<div class="dyncontent">
<div class="center"><!-- SVG 0 -->
</div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0c7b0f8d9c1def117611065b3c791d28"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a0c7b0f8d9c1def117611065b3c791d28">ActiveText</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a0c7b0f8d9c1def117611065b3c791d28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a455ba6ea76e94344391abee240d01fb9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a455ba6ea76e94344391abee240d01fb9">ActiveText</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context, const std::string &amp;text)</td></tr>
<tr class="separator:a455ba6ea76e94344391abee240d01fb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81b7707a59c97965b96a67ae5a689d8b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a81b7707a59c97965b96a67ae5a689d8b">ActiveText</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context, const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animDefault)</td></tr>
<tr class="separator:a81b7707a59c97965b96a67ae5a689d8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a047b1fdd34761fa4ae6f9297632005c9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a047b1fdd34761fa4ae6f9297632005c9">ActiveText</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context, const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps)</td></tr>
<tr class="separator:a047b1fdd34761fa4ae6f9297632005c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4435a6fcdeaf34f312351ad3671f71ee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a4435a6fcdeaf34f312351ad3671f71ee">ActiveText</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context, const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps)</td></tr>
<tr class="separator:a4435a6fcdeaf34f312351ad3671f71ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36940f4db84b24454ee984644fadc2f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a36940f4db84b24454ee984644fadc2f9">reset</a> (bool preservePosition=false)</td></tr>
<tr class="separator:a36940f4db84b24454ee984644fadc2f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95323a92512717d399f0e3c79e86c90d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a95323a92512717d399f0e3c79e86c90d">skipToNext</a> (bool skipWaitForClick=false)</td></tr>
<tr class="separator:a95323a92512717d399f0e3c79e86c90d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa46d98df68528922e5e09ad8c9db8eaa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#aa46d98df68528922e5e09ad8c9db8eaa">setText</a> (const std::string &amp;text)</td></tr>
<tr class="separator:aa46d98df68528922e5e09ad8c9db8eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe6a1216c31a6f68bbd8e5f15889ace3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#afe6a1216c31a6f68bbd8e5f15889ace3">setText</a> (const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps)</td></tr>
<tr class="separator:afe6a1216c31a6f68bbd8e5f15889ace3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72908bd225a9aff58fb2cee84b3d8341"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a72908bd225a9aff58fb2cee84b3d8341">setText</a> (const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps)</td></tr>
<tr class="separator:a72908bd225a9aff58fb2cee84b3d8341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4cbd180ed501ba3900167d7eed9418a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#aa4cbd180ed501ba3900167d7eed9418a">setText</a> (const std::string &amp;text, const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps)</td></tr>
<tr class="separator:aa4cbd180ed501ba3900167d7eed9418a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ab90e08b1ce5d25dab2fe239e6ffcc0"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a7ab90e08b1ce5d25dab2fe239e6ffcc0">getText</a> () const</td></tr>
<tr class="separator:a7ab90e08b1ce5d25dab2fe239e6ffcc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32e3754642454663f53032d9407eea31"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a32e3754642454663f53032d9407eea31">updateProps</a> (const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps)</td></tr>
<tr class="separator:a32e3754642454663f53032d9407eea31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6acb85a5fc210dce36062769f3b30048"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a6acb85a5fc210dce36062769f3b30048">updateProps</a> (const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps)</td></tr>
<tr class="separator:a6acb85a5fc210dce36062769f3b30048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e41a8dfb30145f86d4cf9a157a37a1f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a4e41a8dfb30145f86d4cf9a157a37a1f">show</a> (float duration=0.5f, int tweenType=<a class="el" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a>, <a class="el" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a> callback=nullptr) override</td></tr>
<tr class="separator:a4e41a8dfb30145f86d4cf9a157a37a1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a106708a8823c1315695e83cec6ef92a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a106708a8823c1315695e83cec6ef92a6">hide</a> (float duration=0.5f, int tweenType=<a class="el" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a>, <a class="el" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a> callback=nullptr) override</td></tr>
<tr class="separator:a106708a8823c1315695e83cec6ef92a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97945d7a435f977a6a3e082d49e6bb44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a97945d7a435f977a6a3e082d49e6bb44">setSize</a> (const sf::Vector2f &amp;size)</td></tr>
<tr class="separator:a97945d7a435f977a6a3e082d49e6bb44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa12e32866a355ba0ca2685d6ab9cf3f2"><td class="memItemLeft" align="right" valign="top">sf::Vector2f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#aa12e32866a355ba0ca2685d6ab9cf3f2">getSize</a> () const</td></tr>
<tr class="separator:aa12e32866a355ba0ca2685d6ab9cf3f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27e7b48fa0a9a0663e1d5e94a14813aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a27e7b48fa0a9a0663e1d5e94a14813aa">setFontSizeMultiplier</a> (float fontSizeMultiplier)</td></tr>
<tr class="separator:a27e7b48fa0a9a0663e1d5e94a14813aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a396844c51a7aada41d76ba3b8d39880d"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a396844c51a7aada41d76ba3b8d39880d">getFontSizeMultiplier</a> () const</td></tr>
<tr class="separator:a396844c51a7aada41d76ba3b8d39880d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9addc942e896bb442f1f8022334e1aa7"><td class="memItemLeft" align="right" valign="top">sf::FloatRect&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a9addc942e896bb442f1f8022334e1aa7">getLocalBounds</a> () const</td></tr>
<tr class="separator:a9addc942e896bb442f1f8022334e1aa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad324e0fee996c2b0703918759e11cb64"><td class="memItemLeft" align="right" valign="top">sf::FloatRect&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#ad324e0fee996c2b0703918759e11cb64">getGlobalBounds</a> () const</td></tr>
<tr class="separator:ad324e0fee996c2b0703918759e11cb64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95555cf3de7d36d5a5165131276f5637"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a95555cf3de7d36d5a5165131276f5637">setCursorStart</a> (const sf::Vector2f &amp;cursorPos)</td></tr>
<tr class="separator:a95555cf3de7d36d5a5165131276f5637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a167613a4266bbdac71c9063d04abcd9b"><td class="memItemLeft" align="right" valign="top">const sf::Vector2f &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a167613a4266bbdac71c9063d04abcd9b">getCursorPosition</a> () const</td></tr>
<tr class="separator:a167613a4266bbdac71c9063d04abcd9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02f880233cb6fc27624a6187be7c46e"><td class="memItemLeft" align="right" valign="top">const sf::Vector2f &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#ac02f880233cb6fc27624a6187be7c46e">getCursorEnd</a> () const</td></tr>
<tr class="separator:ac02f880233cb6fc27624a6187be7c46e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad88f09d2fb7b89de276c75015334d5ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#ad88f09d2fb7b89de276c75015334d5ee">setHighlightFactor</a> (float highlightFactor)</td></tr>
<tr class="separator:ad88f09d2fb7b89de276c75015334d5ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd7b76cb4f721a270f90b00ac927080b"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#abd7b76cb4f721a270f90b00ac927080b">getHighlightFactor</a> () const</td></tr>
<tr class="separator:abd7b76cb4f721a270f90b00ac927080b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46f6ec34bd762624d0c9579ad8c8ad78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a46f6ec34bd762624d0c9579ad8c8ad78">setLineSpacing</a> (float lineSpacing)</td></tr>
<tr class="separator:a46f6ec34bd762624d0c9579ad8c8ad78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6289201394efbb3b41183976ee1082e"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#ac6289201394efbb3b41183976ee1082e">getLineSpacing</a> () const</td></tr>
<tr class="separator:ac6289201394efbb3b41183976ee1082e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b53edee870153050e1ec51dda3dec5a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a7b53edee870153050e1ec51dda3dec5a">setAlpha</a> (float alpha) override</td></tr>
<tr class="separator:a7b53edee870153050e1ec51dda3dec5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab571593a8827080105067c41302633a"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#aab571593a8827080105067c41302633a">getAlpha</a> () const override</td></tr>
<tr class="separator:aab571593a8827080105067c41302633a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73be55cba080159820a6f60fe8a890d8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a73be55cba080159820a6f60fe8a890d8">update</a> (float delta) override</td></tr>
<tr class="separator:a73be55cba080159820a6f60fe8a890d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2b2e06634605b29def14fc6721cfc3e"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#ae2b2e06634605b29def14fc6721cfc3e">toPlainText</a> (bool stripBBCodes=false, const std::string &amp;newlineChar=&quot;\n&quot;) const</td></tr>
<tr class="separator:ae2b2e06634605b29def14fc6721cfc3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adabb521fff2c93a658a1257780367fc9"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#adabb521fff2c93a658a1257780367fc9">objectFromPoint</a> (const sf::Vector2f &amp;point) const</td></tr>
<tr class="separator:adabb521fff2c93a658a1257780367fc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af51eed1cf327e1ac3e909b5798dccfbf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#af51eed1cf327e1ac3e909b5798dccfbf">setHighlightId</a> (const std::string &amp;id)</td></tr>
<tr class="separator:af51eed1cf327e1ac3e909b5798dccfbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d91804ace4b0c23d4ae0ed3ca68e958"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a7d91804ace4b0c23d4ae0ed3ca68e958">isAnimating</a> () const</td></tr>
<tr class="separator:a7d91804ace4b0c23d4ae0ed3ca68e958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dede57dbac29c8d26b6608c477f379d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a9dede57dbac29c8d26b6608c477f379d">isComplete</a> () const</td></tr>
<tr class="separator:a9dede57dbac29c8d26b6608c477f379d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf504d9b6e913d000ec1447e6761b0f2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#adf504d9b6e913d000ec1447e6761b0f2">isWaitingForClick</a> () const</td></tr>
<tr class="separator:adf504d9b6e913d000ec1447e6761b0f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e3d33bb995d7bc502f0190ea9131f62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a3e3d33bb995d7bc502f0190ea9131f62">click</a> ()</td></tr>
<tr class="separator:a3e3d33bb995d7bc502f0190ea9131f62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ee196c0aa533b15d243a5d45eb56139"><td class="memItemLeft" align="right" valign="top">const sf::Time &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a4ee196c0aa533b15d243a5d45eb56139">getTimeToNext</a> () const</td></tr>
<tr class="separator:a4ee196c0aa533b15d243a5d45eb56139"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0150b5ec5e6b96dfa6f988cd112f53ab"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector</a>&lt; <a class="el" href="class_novel_tea_1_1_active_text_segment.htm">ActiveTextSegment</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a0150b5ec5e6b96dfa6f988cd112f53ab">getSegments</a> () const</td></tr>
<tr class="separator:a0150b5ec5e6b96dfa6f988cd112f53ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e1b3b78259e42be67a05724b9e7e06f"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a7e1b3b78259e42be67a05724b9e7e06f">getDurationMs</a> () const</td></tr>
<tr class="separator:a7e1b3b78259e42be67a05724b9e7e06f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1db2512232c27ac8482d9528810cf473"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a1db2512232c27ac8482d9528810cf473">getDurationMs</a> (size_t indexEnd) const</td></tr>
<tr class="separator:a1db2512232c27ac8482d9528810cf473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fc8c96b4b787e071592ad10a198af0a"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a9fc8c96b4b787e071592ad10a198af0a">getDelayMs</a> () const</td></tr>
<tr class="separator:a9fc8c96b4b787e071592ad10a198af0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96de5ee5c8f090f203d5ebc798d761e6"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a96de5ee5c8f090f203d5ebc798d761e6">getDelayMs</a> (size_t indexEnd) const</td></tr>
<tr class="separator:a96de5ee5c8f090f203d5ebc798d761e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55223fd9973d60a095012b6ecdb3f088"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a55223fd9973d60a095012b6ecdb3f088">onComplete</a> (<a class="el" href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">ActiveTextCallback</a> callback)</td></tr>
<tr class="separator:a55223fd9973d60a095012b6ecdb3f088"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_context_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_context_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_context_object.htm">NovelTea::ContextObject</a></td></tr>
<tr class="memitem:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a729b81d65b38b86841e7c522070f9896">ContextObject</a> (<a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *context)</td></tr>
<tr class="separator:a729b81d65b38b86841e7c522070f9896 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a3bb9175b66933787a9a06e50bd6c1a06">~ContextObject</a> ()</td></tr>
<tr class="separator:a3bb9175b66933787a9a06e50bd6c1a06 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm#a67dd5b0a333964bb76c984abf8fa0e75">getContext</a> () const</td></tr>
<tr class="separator:a67dd5b0a333964bb76c984abf8fa0e75 inherit pub_methods_class_novel_tea_1_1_context_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_novel_tea_1_1_hideable"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_novel_tea_1_1_hideable')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_novel_tea_1_1_hideable.htm">NovelTea::Hideable</a></td></tr>
<tr class="memitem:a12d7cd05519a5d5207989b7d4b82ebb4 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a12d7cd05519a5d5207989b7d4b82ebb4">Hideable</a> ()</td></tr>
<tr class="separator:a12d7cd05519a5d5207989b7d4b82ebb4 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac76ea54dea54daf6b8bbcf14601e6f26 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#ac76ea54dea54daf6b8bbcf14601e6f26">isHiding</a> () const</td></tr>
<tr class="separator:ac76ea54dea54daf6b8bbcf14601e6f26 inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af234585b253f8c1e1b7ca153141d601f inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#af234585b253f8c1e1b7ca153141d601f">isShowing</a> () const</td></tr>
<tr class="separator:af234585b253f8c1e1b7ca153141d601f inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64bc792a8d223d1fe3af28a3bfa5f28f inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a64bc792a8d223d1fe3af28a3bfa5f28f">isVisible</a> () const</td></tr>
<tr class="separator:a64bc792a8d223d1fe3af28a3bfa5f28f inherit pub_methods_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a3c1c79852b4d3c6052734c26914d3671"><td class="memItemLeft" align="right" valign="top">static std::shared_ptr&lt; <a class="el" href="class_novel_tea_1_1_active_text.htm">ActiveText</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a3c1c79852b4d3c6052734c26914d3671">fromCutsceneTextSegment</a> (const <a class="el" href="class_novel_tea_1_1_cutscene_text_segment.htm">CutsceneTextSegment</a> *segment)</td></tr>
<tr class="separator:a3c1c79852b4d3c6052734c26914d3671"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a291857c5c375e00ca871f4c636fd51dc"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a291857c5c375e00ca871f4c636fd51dc">HIGHLIGHTS</a> = 12</td></tr>
<tr class="separator:a291857c5c375e00ca871f4c636fd51dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_class_novel_tea_1_1_hideable"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_class_novel_tea_1_1_hideable')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="class_novel_tea_1_1_hideable.htm">NovelTea::Hideable</a></td></tr>
<tr class="memitem:a6f39b4d9736cf6703cf054d7e3d46421 inherit pub_static_attribs_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a> = 11</td></tr>
<tr class="separator:a6f39b4d9736cf6703cf054d7e3d46421 inherit pub_static_attribs_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_class_novel_tea_1_1_tween_transformable')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="class_novel_tea_1_1_tween_transformable.htm">NovelTea::TweenTransformable&lt; sf::Transformable &gt;</a></td></tr>
<tr class="memitem:a56e293277c3ae9fd17ac26f2ed784112 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#a56e293277c3ae9fd17ac26f2ed784112">POSITION_X</a></td></tr>
<tr class="separator:a56e293277c3ae9fd17ac26f2ed784112 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e2dc6bcdc2d4b728716a7754301cf20 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#a5e2dc6bcdc2d4b728716a7754301cf20">POSITION_Y</a></td></tr>
<tr class="separator:a5e2dc6bcdc2d4b728716a7754301cf20 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfbfa2feb31a865727de64cdb26f9f5c inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#adfbfa2feb31a865727de64cdb26f9f5c">POSITION_XY</a></td></tr>
<tr class="separator:adfbfa2feb31a865727de64cdb26f9f5c inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aece5f9cf708921b321a5e45a0335042f inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aece5f9cf708921b321a5e45a0335042f">ROTATION</a></td></tr>
<tr class="separator:aece5f9cf708921b321a5e45a0335042f inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac053265e1f837b67fbdcab22c884bc8 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aac053265e1f837b67fbdcab22c884bc8">SCALE_X</a></td></tr>
<tr class="separator:aac053265e1f837b67fbdcab22c884bc8 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac26faef3fe677f495860f9611bcf2c0 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aac26faef3fe677f495860f9611bcf2c0">SCALE_Y</a></td></tr>
<tr class="separator:aac26faef3fe677f495860f9611bcf2c0 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabe5467a6295c9f65e7789b1672e7d95 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aabe5467a6295c9f65e7789b1672e7d95">SCALE_XY</a></td></tr>
<tr class="separator:aabe5467a6295c9f65e7789b1672e7d95 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4488ca592901a607728bc67697c9bccd inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#a4488ca592901a607728bc67697c9bccd">ORIGIN_X</a></td></tr>
<tr class="separator:a4488ca592901a607728bc67697c9bccd inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ad7cc62481ab2f806cc27caf7c6af4 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#ac0ad7cc62481ab2f806cc27caf7c6af4">ORIGIN_Y</a></td></tr>
<tr class="separator:ac0ad7cc62481ab2f806cc27caf7c6af4 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2d9024961e54cebddb4f8437cc78ae3 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#ae2d9024961e54cebddb4f8437cc78ae3">ORIGIN_XY</a></td></tr>
<tr class="separator:ae2d9024961e54cebddb4f8437cc78ae3 inherit pub_static_attribs_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a575dc868ef13cb94c99977f86de4b3f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a575dc868ef13cb94c99977f86de4b3f2">draw</a> (sf::RenderTarget &amp;target, sf::RenderStates states) const override</td></tr>
<tr class="separator:a575dc868ef13cb94c99977f86de4b3f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa61dfde96d1e9911465591fbc18e01dc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#aa61dfde96d1e9911465591fbc18e01dc">setValues</a> (int tweenType, float *newValues) override</td></tr>
<tr class="separator:aa61dfde96d1e9911465591fbc18e01dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae64265b27795561a46df1ce3e65e1621"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#ae64265b27795561a46df1ce3e65e1621">getValues</a> (int tweenType, float *returnValues) override</td></tr>
<tr class="separator:ae64265b27795561a46df1ce3e65e1621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a9f0cfcd17ded2c44db55287537edb8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a0a9f0cfcd17ded2c44db55287537edb8">addSegmentToQueue</a> (size_t segmentIndex)</td></tr>
<tr class="separator:a0a9f0cfcd17ded2c44db55287537edb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbfb89d77746e4719cb1c2b9186cfbf3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#afbfb89d77746e4719cb1c2b9186cfbf3">buildSegments</a> (const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;textProps, const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;animProps)</td></tr>
<tr class="separator:afbfb89d77746e4719cb1c2b9186cfbf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8945004da33a10c8146a8176603b3594"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm#a8945004da33a10c8146a8176603b3594">updateSegments</a> (float delta)</td></tr>
<tr class="separator:a8945004da33a10c8146a8176603b3594"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_class_novel_tea_1_1_tween_transformable"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_novel_tea_1_1_tween_transformable')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="class_novel_tea_1_1_tween_transformable.htm">NovelTea::TweenTransformable&lt; sf::Transformable &gt;</a></td></tr>
<tr class="memitem:a56db1a0bd0a65ef2ab3eba405ab260a2 inherit pro_methods_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#a56db1a0bd0a65ef2ab3eba405ab260a2">getValues</a> (int tweenType, float *returnValues) override</td></tr>
<tr class="separator:a56db1a0bd0a65ef2ab3eba405ab260a2 inherit pro_methods_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa47eb1f1188ec7686fce289d9a8f61d6 inherit pro_methods_class_novel_tea_1_1_tween_transformable"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm#aa47eb1f1188ec7686fce289d9a8f61d6">setValues</a> (int tweenType, float *newValues) override</td></tr>
<tr class="separator:aa47eb1f1188ec7686fce289d9a8f61d6 inherit pro_methods_class_novel_tea_1_1_tween_transformable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_class_novel_tea_1_1_hideable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_class_novel_tea_1_1_hideable')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_novel_tea_1_1_hideable.htm">NovelTea::Hideable</a></td></tr>
<tr class="memitem:a2211845b199240c4d450b6d85ca758ea inherit pro_attribs_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a2211845b199240c4d450b6d85ca758ea">m_isHiding</a></td></tr>
<tr class="separator:a2211845b199240c4d450b6d85ca758ea inherit pro_attribs_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a518f6cbfb4788bbd734e55a4bee6efa7 inherit pro_attribs_class_novel_tea_1_1_hideable"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm#a518f6cbfb4788bbd734e55a4bee6efa7">m_isShowing</a></td></tr>
<tr class="separator:a518f6cbfb4788bbd734e55a4bee6efa7 inherit pro_attribs_class_novel_tea_1_1_hideable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0c7b0f8d9c1def117611065b3c791d28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c7b0f8d9c1def117611065b3c791d28">&#9670;&nbsp;</a></span>ActiveText() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ActiveText::ActiveText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a455ba6ea76e94344391abee240d01fb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a455ba6ea76e94344391abee240d01fb9">&#9670;&nbsp;</a></span>ActiveText() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ActiveText::ActiveText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a81b7707a59c97965b96a67ae5a689d8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81b7707a59c97965b96a67ae5a689d8b">&#9670;&nbsp;</a></span>ActiveText() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ActiveText::ActiveText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>animDefault</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a047b1fdd34761fa4ae6f9297632005c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a047b1fdd34761fa4ae6f9297632005c9">&#9670;&nbsp;</a></span>ActiveText() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ActiveText::ActiveText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4435a6fcdeaf34f312351ad3671f71ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4435a6fcdeaf34f312351ad3671f71ee">&#9670;&nbsp;</a></span>ActiveText() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NovelTea::ActiveText::ActiveText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>animProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0a9f0cfcd17ded2c44db55287537edb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a9f0cfcd17ded2c44db55287537edb8">&#9670;&nbsp;</a></span>addSegmentToQueue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::addSegmentToQueue </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>segmentIndex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afbfb89d77746e4719cb1c2b9186cfbf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbfb89d77746e4719cb1c2b9186cfbf3">&#9670;&nbsp;</a></span>buildSegments()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::buildSegments </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>animProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3e3d33bb995d7bc502f0190ea9131f62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e3d33bb995d7bc502f0190ea9131f62">&#9670;&nbsp;</a></span>click()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::click </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a575dc868ef13cb94c99977f86de4b3f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a575dc868ef13cb94c99977f86de4b3f2">&#9670;&nbsp;</a></span>draw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::draw </td>
          <td>(</td>
          <td class="paramtype">sf::RenderTarget &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sf::RenderStates&#160;</td>
          <td class="paramname"><em>states</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c1c79852b4d3c6052734c26914d3671"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c1c79852b4d3c6052734c26914d3671">&#9670;&nbsp;</a></span>fromCutsceneTextSegment()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::shared_ptr&lt;<a class="el" href="class_novel_tea_1_1_active_text.htm">ActiveText</a>&gt; NovelTea::ActiveText::fromCutsceneTextSegment </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_novel_tea_1_1_cutscene_text_segment.htm">CutsceneTextSegment</a> *&#160;</td>
          <td class="paramname"><em>segment</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aab571593a8827080105067c41302633a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab571593a8827080105067c41302633a">&#9670;&nbsp;</a></span>getAlpha()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveText::getAlpha </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_hideable.htm#a4c7f04eff8e80563d8c9f046b97cada2">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="ac02f880233cb6fc27624a6187be7c46e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac02f880233cb6fc27624a6187be7c46e">&#9670;&nbsp;</a></span>getCursorEnd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const sf::Vector2f&amp; NovelTea::ActiveText::getCursorEnd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a167613a4266bbdac71c9063d04abcd9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a167613a4266bbdac71c9063d04abcd9b">&#9670;&nbsp;</a></span>getCursorPosition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const sf::Vector2f&amp; NovelTea::ActiveText::getCursorPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9fc8c96b4b787e071592ad10a198af0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fc8c96b4b787e071592ad10a198af0a">&#9670;&nbsp;</a></span>getDelayMs() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t NovelTea::ActiveText::getDelayMs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a96de5ee5c8f090f203d5ebc798d761e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96de5ee5c8f090f203d5ebc798d761e6">&#9670;&nbsp;</a></span>getDelayMs() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t NovelTea::ActiveText::getDelayMs </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>indexEnd</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7e1b3b78259e42be67a05724b9e7e06f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e1b3b78259e42be67a05724b9e7e06f">&#9670;&nbsp;</a></span>getDurationMs() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t NovelTea::ActiveText::getDurationMs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1db2512232c27ac8482d9528810cf473"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1db2512232c27ac8482d9528810cf473">&#9670;&nbsp;</a></span>getDurationMs() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t NovelTea::ActiveText::getDurationMs </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>indexEnd</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a396844c51a7aada41d76ba3b8d39880d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a396844c51a7aada41d76ba3b8d39880d">&#9670;&nbsp;</a></span>getFontSizeMultiplier()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveText::getFontSizeMultiplier </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad324e0fee996c2b0703918759e11cb64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad324e0fee996c2b0703918759e11cb64">&#9670;&nbsp;</a></span>getGlobalBounds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::FloatRect NovelTea::ActiveText::getGlobalBounds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abd7b76cb4f721a270f90b00ac927080b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd7b76cb4f721a270f90b00ac927080b">&#9670;&nbsp;</a></span>getHighlightFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveText::getHighlightFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac6289201394efbb3b41183976ee1082e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6289201394efbb3b41183976ee1082e">&#9670;&nbsp;</a></span>getLineSpacing()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float NovelTea::ActiveText::getLineSpacing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9addc942e896bb442f1f8022334e1aa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9addc942e896bb442f1f8022334e1aa7">&#9670;&nbsp;</a></span>getLocalBounds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::FloatRect NovelTea::ActiveText::getLocalBounds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0150b5ec5e6b96dfa6f988cd112f53ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0150b5ec5e6b96dfa6f988cd112f53ab">&#9670;&nbsp;</a></span>getSegments()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="_utils_8hpp.htm#acb62529b1a3ee878693e4c4c8e98c28a">SharedVector</a>&lt;<a class="el" href="class_novel_tea_1_1_active_text_segment.htm">ActiveTextSegment</a>&gt;&amp; NovelTea::ActiveText::getSegments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa12e32866a355ba0ca2685d6ab9cf3f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa12e32866a355ba0ca2685d6ab9cf3f2">&#9670;&nbsp;</a></span>getSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Vector2f NovelTea::ActiveText::getSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7ab90e08b1ce5d25dab2fe239e6ffcc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ab90e08b1ce5d25dab2fe239e6ffcc0">&#9670;&nbsp;</a></span>getText()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; NovelTea::ActiveText::getText </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4ee196c0aa533b15d243a5d45eb56139"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ee196c0aa533b15d243a5d45eb56139">&#9670;&nbsp;</a></span>getTimeToNext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const sf::Time&amp; NovelTea::ActiveText::getTimeToNext </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae64265b27795561a46df1ce3e65e1621"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae64265b27795561a46df1ce3e65e1621">&#9670;&nbsp;</a></span>getValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int NovelTea::ActiveText::getValues </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>tweenType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>returnValues</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="class_novel_tea_1_1_hideable.htm#aa27aad642308869f8fd0e4ef0e2f173c">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a106708a8823c1315695e83cec6ef92a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a106708a8823c1315695e83cec6ef92a6">&#9670;&nbsp;</a></span>hide()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::hide </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>duration</em> = <code>0.5f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>tweenType</em> = <code><a class="el" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="class_novel_tea_1_1_hideable.htm#a76fa776a3d7727831cdeb15d4e2eef4e">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a7d91804ace4b0c23d4ae0ed3ca68e958"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d91804ace4b0c23d4ae0ed3ca68e958">&#9670;&nbsp;</a></span>isAnimating()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ActiveText::isAnimating </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9dede57dbac29c8d26b6608c477f379d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dede57dbac29c8d26b6608c477f379d">&#9670;&nbsp;</a></span>isComplete()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ActiveText::isComplete </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adf504d9b6e913d000ec1447e6761b0f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf504d9b6e913d000ec1447e6761b0f2">&#9670;&nbsp;</a></span>isWaitingForClick()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ActiveText::isWaitingForClick </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adabb521fff2c93a658a1257780367fc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adabb521fff2c93a658a1257780367fc9">&#9670;&nbsp;</a></span>objectFromPoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::ActiveText::objectFromPoint </td>
          <td>(</td>
          <td class="paramtype">const sf::Vector2f &amp;&#160;</td>
          <td class="paramname"><em>point</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a55223fd9973d60a095012b6ecdb3f088"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55223fd9973d60a095012b6ecdb3f088">&#9670;&nbsp;</a></span>onComplete()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::onComplete </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">ActiveTextCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a36940f4db84b24454ee984644fadc2f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36940f4db84b24454ee984644fadc2f9">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::reset </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>preservePosition</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7b53edee870153050e1ec51dda3dec5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b53edee870153050e1ec51dda3dec5a">&#9670;&nbsp;</a></span>setAlpha()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setAlpha </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="class_novel_tea_1_1_hideable.htm#a4c99e8c78d370fc069f062cb31036f06">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a95555cf3de7d36d5a5165131276f5637"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95555cf3de7d36d5a5165131276f5637">&#9670;&nbsp;</a></span>setCursorStart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setCursorStart </td>
          <td>(</td>
          <td class="paramtype">const sf::Vector2f &amp;&#160;</td>
          <td class="paramname"><em>cursorPos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a27e7b48fa0a9a0663e1d5e94a14813aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27e7b48fa0a9a0663e1d5e94a14813aa">&#9670;&nbsp;</a></span>setFontSizeMultiplier()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setFontSizeMultiplier </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fontSizeMultiplier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad88f09d2fb7b89de276c75015334d5ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad88f09d2fb7b89de276c75015334d5ee">&#9670;&nbsp;</a></span>setHighlightFactor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setHighlightFactor </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>highlightFactor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af51eed1cf327e1ac3e909b5798dccfbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af51eed1cf327e1ac3e909b5798dccfbf">&#9670;&nbsp;</a></span>setHighlightId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setHighlightId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a46f6ec34bd762624d0c9579ad8c8ad78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46f6ec34bd762624d0c9579ad8c8ad78">&#9670;&nbsp;</a></span>setLineSpacing()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setLineSpacing </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>lineSpacing</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a97945d7a435f977a6a3e082d49e6bb44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97945d7a435f977a6a3e082d49e6bb44">&#9670;&nbsp;</a></span>setSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setSize </td>
          <td>(</td>
          <td class="paramtype">const sf::Vector2f &amp;&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa46d98df68528922e5e09ad8c9db8eaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa46d98df68528922e5e09ad8c9db8eaa">&#9670;&nbsp;</a></span>setText() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afe6a1216c31a6f68bbd8e5f15889ace3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe6a1216c31a6f68bbd8e5f15889ace3">&#9670;&nbsp;</a></span>setText() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>animProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a72908bd225a9aff58fb2cee84b3d8341"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72908bd225a9aff58fb2cee84b3d8341">&#9670;&nbsp;</a></span>setText() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4cbd180ed501ba3900167d7eed9418a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4cbd180ed501ba3900167d7eed9418a">&#9670;&nbsp;</a></span>setText() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::setText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>animProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa61dfde96d1e9911465591fbc18e01dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa61dfde96d1e9911465591fbc18e01dc">&#9670;&nbsp;</a></span>setValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void NovelTea::ActiveText::setValues </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>tweenType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>newValues</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="class_novel_tea_1_1_hideable.htm#a290ab34fb2677f905a61eca090e87160">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a4e41a8dfb30145f86d4cf9a157a37a1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e41a8dfb30145f86d4cf9a157a37a1f">&#9670;&nbsp;</a></span>show()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::show </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>duration</em> = <code>0.5f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>tweenType</em> = <code><a class="el" href="class_novel_tea_1_1_hideable.htm#a6f39b4d9736cf6703cf054d7e3d46421">ALPHA</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="class_novel_tea_1_1_hideable.htm#a8b98ba9e1c9e89b9d332f43aa9fa9126">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a95323a92512717d399f0e3c79e86c90d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95323a92512717d399f0e3c79e86c90d">&#9670;&nbsp;</a></span>skipToNext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::skipToNext </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>skipWaitForClick</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae2b2e06634605b29def14fc6721cfc3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2b2e06634605b29def14fc6721cfc3e">&#9670;&nbsp;</a></span>toPlainText()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::ActiveText::toPlainText </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>stripBBCodes</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>newlineChar</em> = <code>&quot;\n&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a73be55cba080159820a6f60fe8a890d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73be55cba080159820a6f60fe8a890d8">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::ActiveText::update </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>delta</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="class_novel_tea_1_1_hideable.htm#ace08cfc16384aeceb5abb77ed3cdccc0">NovelTea::Hideable</a>.</p>

</div>
</div>
<a id="a6acb85a5fc210dce36062769f3b30048"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6acb85a5fc210dce36062769f3b30048">&#9670;&nbsp;</a></span>updateProps() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::updateProps </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a32e3754642454663f53032d9407eea31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32e3754642454663f53032d9407eea31">&#9670;&nbsp;</a></span>updateProps() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::updateProps </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>textProps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>animProps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8945004da33a10c8146a8176603b3594"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8945004da33a10c8146a8176603b3594">&#9670;&nbsp;</a></span>updateSegments()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::ActiveText::updateSegments </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>delta</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a291857c5c375e00ca871f4c636fd51dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a291857c5c375e00ca871f4c636fd51dc">&#9670;&nbsp;</a></span>HIGHLIGHTS</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int NovelTea::ActiveText::HIGHLIGHTS = 12</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/NovelTea/<a class="el" href="_active_text_8hpp_source.htm">ActiveText.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_novel_tea.htm">NovelTea</a></li><li class="navelem"><a class="el" href="class_novel_tea_1_1_active_text.htm">ActiveText</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
