<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<title>NovelTea: NovelTea Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
	DoxygenAwesomeFragmentCopyButton.init()
	DoxygenAwesomeDarkModeToggle.init()
	DoxygenAwesomeParagraphLink.init()
</script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">NovelTea
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Text Game Engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespace_novel_tea.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">NovelTea Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespace_novel_tea_1_1_i_d"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea_1_1_i_d.htm">ID</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespace_novel_tea_1_1_state_event"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea_1_1_state_event.htm">StateEvent</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_action.htm">Action</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text.htm">ActiveText</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_active_text_segment.htm">ActiveTextSegment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_asset_loader.htm">AssetLoader</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_asset_path.htm">AssetPath</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_asset_manager.htm">AssetManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_text_style.htm">TextStyle</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_styled_segment.htm">StyledSegment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_b_b_code_parser.htm">BBCodeParser</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_context_config.htm">ContextConfig</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context.htm">Context</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_context_object.htm">ContextObject</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_cutscene.htm">Cutscene</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_cutscene_page_break_segment.htm">CutscenePageBreakSegment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_cutscene_page_segment.htm">CutscenePageSegment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_cutscene_player.htm">CutscenePlayer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_cutscene_renderer.htm">CutsceneRenderer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_cutscene_script_segment.htm">CutsceneScriptSegment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_cutscene_segment.htm">CutsceneSegment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_cutscene_text_segment.htm">CutsceneTextSegment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_dialogue.htm">Dialogue</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_dialogue_option.htm">DialogueOption</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_dialogue_player.htm">DialoguePlayer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_dialogue_renderer.htm">DialogueRenderer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_dialogue_segment.htm">DialogueSegment</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_engine.htm">Engine</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_entity.htm">Entity</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_event.htm">Event</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_event_listener.htm">EventListener</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_event_manager.htm">EventManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_game.htm">Game</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_action_builder.htm">ActionBuilder</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_button.htm">Button</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_hideable.htm">Hideable</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_icon_continue.htm">IconContinue</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_icon_glow.htm">IconGlow</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_inventory_item.htm">InventoryItem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_inventory.htm">Inventory</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_navigation.htm">Navigation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_nine_patch.htm">NinePatch</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_scrollable.htm">Scrollable</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_scroll_bar.htm">ScrollBar</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_log_dialogue_option_item.htm">TextLogDialogueOptionItem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_log_dialogue_text_item.htm">TextLogDialogueTextItem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_log_generic_item.htm">TextLogGenericItem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_log_item.htm">TextLogItem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_log_renderer.htm">TextLogRenderer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_overlay.htm">TextOverlay</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_verb_list.htm">VerbList</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_json_serializable.htm">JsonSerializable</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_int_rect.htm">IntRect</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_float_rect.htm">FloatRect</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_vector2i.htm">Vector2i</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_map_room.htm">MapRoom</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_map_connection.htm">MapConnection</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map.htm">Map</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_map_renderer.htm">MapRenderer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_notification.htm">Notification</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_notification_manager.htm">NotificationManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object.htm">Object</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_object_item.htm">ObjectItem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_object_list.htm">ObjectList</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_profile.htm">Profile</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_project_data.htm">ProjectData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_property_list.htm">PropertyList</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_room.htm">Room</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_save_data.htm">SaveData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script.htm">Script</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_script_manager.htm">ScriptManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_settings.htm">Settings</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_asset_loader_s_f_m_l.htm">AssetLoaderSFML</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_engine_s_f_m_l.htm">EngineSFML</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_notification_s_f_m_l.htm">NotificationSFML</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_notification_manager_s_f_m_l.htm">NotificationManagerSFML</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_event_manager.htm">StateEventManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state.htm">State</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_editor.htm">StateEditor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_intro.htm">StateIntro</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_main.htm">StateMain</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_profile_manager.htm">StateProfileManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_settings.htm">StateSettings</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_stack.htm">StateStack</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_text_log.htm">StateTextLog</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_text_settings.htm">StateTextSettings</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_state_title_screen.htm">StateTitleScreen</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_subsystem.htm">Subsystem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_input_instance.htm">TextInputInstance</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_input.htm">TextInput</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_text_log_entry.htm">TextLogEntry</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_text_log.htm">TextLog</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_color.htm">Color</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_animation_properties.htm">AnimationProperties</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_novel_tea_1_1_text_properties.htm">TextProperties</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_timer.htm">Timer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_timer_manager.htm">TimerManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_transformable.htm">TweenTransformable</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_tween_color_transformable.htm">TweenColorTransformable</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_verb.htm">Verb</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_zip_reader.htm">ZipReader</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_novel_tea_1_1_zip_writer.htm">ZipWriter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a595709ddf84a3ac4062d5c49812119e3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">ActiveTextCallback</a> = std::function&lt; void()&gt;</td></tr>
<tr class="separator:a595709ddf84a3ac4062d5c49812119e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a032960598c1493876608a5a36168e3c1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a032960598c1493876608a5a36168e3c1">cStrIter</a> = std::string::const_iterator</td></tr>
<tr class="separator:a032960598c1493876608a5a36168e3c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb9ef5afa3188d5c9e401c9cae1bd00e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#acb9ef5afa3188d5c9e401c9cae1bd00e">DialogueCallback</a> = std::function&lt; void(int)&gt;</td></tr>
<tr class="separator:acb9ef5afa3188d5c9e401c9cae1bd00e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dae6fe32adee38b3bfd2a13c4634147"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a7dae6fe32adee38b3bfd2a13c4634147">EventPtr</a> = std::shared_ptr&lt; <a class="el" href="struct_novel_tea_1_1_event.htm">Event</a> &gt;</td></tr>
<tr class="separator:a7dae6fe32adee38b3bfd2a13c4634147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad68f3e16fb72d342151159205ccbeac9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#ad68f3e16fb72d342151159205ccbeac9">EventFunc</a> = std::function&lt; bool(const <a class="el" href="namespace_novel_tea.htm#a7dae6fe32adee38b3bfd2a13c4634147">EventPtr</a> &amp;event)&gt;</td></tr>
<tr class="separator:ad68f3e16fb72d342151159205ccbeac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8400be0e71a7b924aa5cd9a23847629b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a8400be0e71a7b924aa5cd9a23847629b">MessageCallback</a> = std::function&lt; void(const std::vector&lt; std::string &gt; &amp;messageArray, const DukValue &amp;callback)&gt;</td></tr>
<tr class="separator:a8400be0e71a7b924aa5cd9a23847629b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa22bbbe4395ba42853df5ddd2475fc00"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aa22bbbe4395ba42853df5ddd2475fc00">ActionBuilderCallback</a> = std::function&lt; void(bool)&gt;</td></tr>
<tr class="separator:aa22bbbe4395ba42853df5ddd2475fc00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6b43c591babef4ff8f9c9a0e102f766"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">HideableCallback</a> = std::function&lt; void(void)&gt;</td></tr>
<tr class="separator:aa6b43c591babef4ff8f9c9a0e102f766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d74a9e0f4b34e86303e9fa4cb8208b4"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a3d74a9e0f4b34e86303e9fa4cb8208b4">InventoryCallback</a> = std::function&lt; void(const std::string &amp;, float, float)&gt;</td></tr>
<tr class="separator:a3d74a9e0f4b34e86303e9fa4cb8208b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adccdae7ba18db468d8f3f5f9a5609e6d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#adccdae7ba18db468d8f3f5f9a5609e6d">NavigationCallback</a> = std::function&lt; void(int direction, const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;jentity)&gt;</td></tr>
<tr class="separator:adccdae7ba18db468d8f3f5f9a5609e6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af98824359f71b3fea7381c6e3e5d9d66"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#af98824359f71b3fea7381c6e3e5d9d66">VerbSelectCallback</a> = std::function&lt; void(const std::string &amp;)&gt;</td></tr>
<tr class="separator:af98824359f71b3fea7381c6e3e5d9d66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab975fdbb1cbaaf17bce0add6221df8b8"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#ab975fdbb1cbaaf17bce0add6221df8b8">VerbShowHideCallback</a> = std::function&lt; void(bool)&gt;</td></tr>
<tr class="separator:ab975fdbb1cbaaf17bce0add6221df8b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff16c39312e221dc8c1ff837ebb115c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a9ff16c39312e221dc8c1ff837ebb115c">RegexIterator</a> = std::sregex_iterator</td></tr>
<tr class="separator:a9ff16c39312e221dc8c1ff837ebb115c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa7a839aeec8bfbb464c3573cd23c151"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aaa7a839aeec8bfbb464c3573cd23c151">RegexCallback</a> = std::function&lt; void(const <a class="el" href="namespace_novel_tea.htm#a9ff16c39312e221dc8c1ff837ebb115c">RegexIterator</a> &amp;)&gt;</td></tr>
<tr class="separator:aaa7a839aeec8bfbb464c3573cd23c151"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84e21ebafe2ac33c6b21333c338f39ea"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a84e21ebafe2ac33c6b21333c338f39ea">RegexStringCallback</a> = std::function&lt; std::string(const <a class="el" href="namespace_novel_tea.htm#a9ff16c39312e221dc8c1ff837ebb115c">RegexIterator</a> &amp;)&gt;</td></tr>
<tr class="separator:a84e21ebafe2ac33c6b21333c338f39ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6332cc6379c2fd96eb44d7dfdbb77915"><td class="memItemLeft" align="right" valign="top">typedef std::function&lt; bool(void *)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a6332cc6379c2fd96eb44d7dfdbb77915">StateCallback</a></td></tr>
<tr class="separator:a6332cc6379c2fd96eb44d7dfdbb77915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9946ac1f322d4275b594e4c59f615d65"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a9946ac1f322d4275b594e4c59f615d65">TestCallback</a> = std::function&lt; bool(const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;)&gt;</td></tr>
<tr class="separator:a9946ac1f322d4275b594e4c59f615d65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a22322d0fff36ce32131f8815a4290e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a6a22322d0fff36ce32131f8815a4290e">GetTextInputTrigger</a> = std::function&lt; void(const std::string &amp;, int)&gt;</td></tr>
<tr class="separator:a6a22322d0fff36ce32131f8815a4290e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90c9e3b9e240a1a74f84bdf1f46ad494"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a90c9e3b9e240a1a74f84bdf1f46ad494">GetTextInputCallback</a> = std::function&lt; void(const std::string &amp;)&gt;</td></tr>
<tr class="separator:a90c9e3b9e240a1a74f84bdf1f46ad494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6add2c8edddf2a8b8b1ca9b47dece23e"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_novel_tea_1_1_tween_color_transformable.htm">TweenColorTransformable</a>&lt; <a class="el" href="class_novel_tea_1_1_nine_patch.htm">NinePatch</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a6add2c8edddf2a8b8b1ca9b47dece23e">TweenNinePatch</a></td></tr>
<tr class="separator:a6add2c8edddf2a8b8b1ca9b47dece23e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac955f4f25e49b90cf0720ac8b0cb3f36"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_novel_tea_1_1_tween_color_transformable.htm">TweenColorTransformable</a>&lt; sf::Sprite &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#ac955f4f25e49b90cf0720ac8b0cb3f36">TweenSprite</a></td></tr>
<tr class="separator:ac955f4f25e49b90cf0720ac8b0cb3f36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86872f212dd9dce44234da3d9eb2ea0c"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a>&lt; sf::Text &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a86872f212dd9dce44234da3d9eb2ea0c">TweenText</a></td></tr>
<tr class="separator:a86872f212dd9dce44234da3d9eb2ea0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f8566ae9ca1e61d521120eb028d33f7"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a>&lt; sf::RectangleShape &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a5f8566ae9ca1e61d521120eb028d33f7">TweenRectangleShape</a></td></tr>
<tr class="separator:a5f8566ae9ca1e61d521120eb028d33f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c4762806aa498dbaa8df1ec8284d226"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a>&lt; sf::CircleShape &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a5c4762806aa498dbaa8df1ec8284d226">TweenCircleShape</a></td></tr>
<tr class="separator:a5c4762806aa498dbaa8df1ec8284d226"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6069a4269f61f24aab9b7ffef0526015"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a>&lt; sf::ConvexShape &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a6069a4269f61f24aab9b7ffef0526015">TweenConvexShape</a></td></tr>
<tr class="separator:a6069a4269f61f24aab9b7ffef0526015"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a0bae4b05baaa9aba1550ca9d07fa7732"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a0bae4b05baaa9aba1550ca9d07fa7732">DialogueTextLogMode</a> { <a class="el" href="namespace_novel_tea.htm#a0bae4b05baaa9aba1550ca9d07fa7732af80a4ad87fee7c9fdc19b7769495fdb5">Nothing</a> = 0
, <a class="el" href="namespace_novel_tea.htm#a0bae4b05baaa9aba1550ca9d07fa7732a709468af25e91284821d1bdbfdded24c">Everything</a>
, <a class="el" href="namespace_novel_tea.htm#a0bae4b05baaa9aba1550ca9d07fa7732a837e244e2ed74f9739cd9cad478800f1">OnlyText</a>
, <a class="el" href="namespace_novel_tea.htm#a0bae4b05baaa9aba1550ca9d07fa7732a2d4e1895d2a6d71cc1ca1159ac375b39">OnlyOptions</a>
 }</td></tr>
<tr class="separator:a0bae4b05baaa9aba1550ca9d07fa7732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4afa9f202e98b4102427f3834216b310"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a4afa9f202e98b4102427f3834216b310">RoomStyle</a> : int { <a class="el" href="namespace_novel_tea.htm#a4afa9f202e98b4102427f3834216b310a78f0192ac55eba33ee88d026452952e5">Borderless</a> = 0
, <a class="el" href="namespace_novel_tea.htm#a4afa9f202e98b4102427f3834216b310a0b9a5b312800284bcc8a22260fdf9905">SolidBorder</a> = 1
, <a class="el" href="namespace_novel_tea.htm#a4afa9f202e98b4102427f3834216b310a8ad9c938fb441ddc8d53f001e6ef7374">DashedBorder</a>
 }</td></tr>
<tr class="separator:a4afa9f202e98b4102427f3834216b310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9760f0bb1f9a70ac16f072f5fefdbd50"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a9760f0bb1f9a70ac16f072f5fefdbd50">ConnectionStyle</a> : int { <a class="el" href="namespace_novel_tea.htm#a9760f0bb1f9a70ac16f072f5fefdbd50a6adf97f83acf6453d4a6a4b1070f3754">None</a> = 0
 }</td></tr>
<tr class="separator:a9760f0bb1f9a70ac16f072f5fefdbd50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5381682340cba7b8607b8d07dc135f7d"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7d">EntityType</a> : int { <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7da4bbb8f967da6d1a610596d7257179c2b">Invalid</a> = -1
, <a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7da3e7683f51af33ba15b5abc5b1907621f">CustomScript</a> = 0
, <a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7dacc0fb4be485eda00316d2aa8284ca80e">Cutscene</a> = 1
, <a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7da004bf6c9a40003140292e97330236c53">Action</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7dacc3abcf4426bff80257d22999d0eda8f">Room</a>
, <a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7da497031794414a552435f90151ac3b54b">Object</a>
, <a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7da359928afdf6c973ee869e1698023a812">Dialogue</a>
, <a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7daf907e651164789346ae0a1e257c462d8">Script</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7dadcfc313589935306402ea9ee3c7647f8">Verb</a>
, <a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7da46f3ea056caa3126b91f3f70beea068c">Map</a>
<br />
 }</td></tr>
<tr class="separator:a5381682340cba7b8607b8d07dc135f7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc862942f212ad68abbafde6900a2136"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#afc862942f212ad68abbafde6900a2136">EntityMode</a> { <a class="el" href="namespace_novel_tea.htm#afc862942f212ad68abbafde6900a2136af3a228109647d30df280a3da4d2e8ab8">ModeNothing</a>
, <a class="el" href="namespace_novel_tea.htm#afc862942f212ad68abbafde6900a2136ab3ecc24d3dcac816dec1fcbb498c0566">ModeCutscene</a>
, <a class="el" href="namespace_novel_tea.htm#afc862942f212ad68abbafde6900a2136abdfd5d1e3d4077aee8a007ec36732dc2">ModeDialogue</a>
, <a class="el" href="namespace_novel_tea.htm#afc862942f212ad68abbafde6900a2136a3216ca58a977f84c1983a0277709ddfa">ModeRoom</a>
 }</td></tr>
<tr class="separator:afc862942f212ad68abbafde6900a2136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94b50755dd30fb7991da65827cf23acc"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23acc">StateEditorMode</a> : int { <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23accaf80a4ad87fee7c9fdc19b7769495fdb5">Nothing</a> = 0
, <a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23accacc0fb4be485eda00316d2aa8284ca80e">Cutscene</a> = 1
, <a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23accacc3abcf4426bff80257d22999d0eda8f">Room</a>
, <a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23acca359928afdf6c973ee869e1698023a812">Dialogue</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23acca46f3ea056caa3126b91f3f70beea068c">Map</a>
, <a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23acca0cbc6611f5540bd0809a388dc95a615b">Test</a>
, <a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23acca9dffbf69ffba8bc38bc4e01abf4b1675">Text</a>
, <a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23accaa88a92f4a0e793589f2341851a15c660">Shader</a>
<br />
 }</td></tr>
<tr class="separator:a94b50755dd30fb7991da65827cf23acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae726afc03bdac1a8fe741b951ec21ec9"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9">StateID</a> { <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9a6adf97f83acf6453d4a6a4b1070f3754">None</a>
, <a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9a344a7f427fb765610ef96eb7bce95257">Editor</a>
, <a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9a1cad35d4b3b9f624f82dbf237daaf188">Intro</a>
, <a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9aa02c83a7dbd96295beaefb72c2bee2de">Main</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9a996d4ed64c20252014d16367ac6e197b">ProfileManager</a>
, <a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9af4f70727dc34561dfde1a3c529b6205c">Settings</a>
, <a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9a6c471c236f33c863cdc13aa89c8e5809">TextLog</a>
, <a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9a1fe184dc79d61c587e316a722ac8d4b6">TextSettings</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9a19cbf12edccab4b14c7ae28487c48abf">TitleScreen</a>
<br />
 }</td></tr>
<tr class="separator:ae726afc03bdac1a8fe741b951ec21ec9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ddf2522f71162d9cee9a1ab68064837"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837">TextLogType</a> { <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837acc0fb4be485eda00316d2aa8284ca80e">Cutscene</a>
, <a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837ac731bf37fcc749df0842900fac27d0cd">DialogueOption</a>
, <a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837a15ffd8f24f320e11dcf5766c05af4f6b">DialogueText</a>
, <a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837a3e51183005f7ff21ae11806df1634da9">DialogueTextName</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837a96d008db67fc0b5551a926842bbb6a71">Notification</a>
, <a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837af907e651164789346ae0a1e257c462d8">Script</a>
, <a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837aaf7ecfdf01e941f3d3c820e6bea1fdb0">TextOverlay</a>
<br />
 }</td></tr>
<tr class="separator:a9ddf2522f71162d9cee9a1ab68064837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bcbf6af3413bd57ade590e7d9df7c09"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09">TextStyleType</a> : int { <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a6adf97f83acf6453d4a6a4b1070f3754">None</a> = 0
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09ad6b6b668dbca9d4fe774bb654226ebe3">Animation</a> = 1
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a114c3050111d8b8ddd830b99ccebd246">Bold</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a7bd17539279d7a0357fe1796aee9897a">BorderColor</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09adce6086d9dd6c76181e50be5b0dffcfa">BorderSize</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09acb5feb1b7314637725a2e73bdc9f7295">Color</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a49630f5d7723e9b41474bd1cb1887b9d">Diff</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a194f5394ae2e9c74dc3c441b92862d1d">Font</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a1d874710ccdcd46b95397049d2e7500c">Italic</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a497031794414a552435f90151ac3b54b">Object</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a7a2d17b6830dc3da68d92745c288b54f">PBreak</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a6f6cb72d544962fa333e2e34ce64f719">Size</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09aa88a92f4a0e793589f2341851a15c660">Shader</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09aa5bab48c638e7fbf3caf002715fa8e78">XOffset</a>
, <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09a97e4c4a525b09e3e3f10bb25e2167d61">YOffset</a>
<br />
 }</td></tr>
<tr class="separator:a4bcbf6af3413bd57ade590e7d9df7c09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbfbb627059d9609d465f3f24178f98e"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98e">TextEffect</a> : int { <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98ea6adf97f83acf6453d4a6a4b1070f3754">None</a> = 0
, <a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98ea04e0385c10aefee8e4681617d2f3ef40">Fade</a> = 1
, <a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98ead814587e313c806827f269dfc7796cc6">FadeAcross</a>
, <a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98eab20024ea3ba53768598d242981872153">Glow</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98ea29af0158024ddda3becc3c6e3d6ece78">Nod</a>
, <a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98ea968818e489bac02c58d8b0e5a348a229">Shake</a>
, <a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98ea0cbc6611f5540bd0809a388dc95a615b">Test</a>
, <a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98eacc8d6e396846c0cf1bc30218d4b62305">Tremble</a>
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98ea0ae61bd0474e04c9f1195d4baa0213a0">Pop</a>
<br />
 }</td></tr>
<tr class="separator:adbfbb627059d9609d465f3f24178f98e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7b8f2ebc9a2797537b08e72b7782509"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#ad7b8f2ebc9a2797537b08e72b7782509">FontStyle</a> { <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#ad7b8f2ebc9a2797537b08e72b7782509a50d1ccf93e69b1447fa8c624cb40a5fc">FontRegular</a> = 0
, <a class="el" href="namespace_novel_tea.htm#ad7b8f2ebc9a2797537b08e72b7782509af914ec33218802919eb6d2840197f6c1">FontBold</a> = 1 &lt;&lt; 0
, <a class="el" href="namespace_novel_tea.htm#ad7b8f2ebc9a2797537b08e72b7782509af34bf1b27dd6ebe368b2ac7ad2ce8bd7">FontItalic</a> = 1 &lt;&lt; 1
, <a class="el" href="namespace_novel_tea.htm#ad7b8f2ebc9a2797537b08e72b7782509aa968e57c90b8e0b6443790ca6c2f9fc9">FontUnderlined</a> = 1 &lt;&lt; 2
, <br />
&#160;&#160;<a class="el" href="namespace_novel_tea.htm#ad7b8f2ebc9a2797537b08e72b7782509a6712cecd9589c77ab39154c15471f766">FontStrikeThrough</a> = 1 &lt;&lt; 3
<br />
 }</td></tr>
<tr class="separator:ad7b8f2ebc9a2797537b08e72b7782509"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9dfd0a00f6268a053f14fd3b41c680a3"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a9dfd0a00f6268a053f14fd3b41c680a3">diff</a> (const std::string &amp;oldString, const std::string &amp;newString)</td></tr>
<tr class="separator:a9dfd0a00f6268a053f14fd3b41c680a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa6f29e0701094f96e63e4452f338416"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aaa6f29e0701094f96e63e4452f338416">stripDiff</a> (const std::string &amp;diffString)</td></tr>
<tr class="separator:aaa6f29e0701094f96e63e4452f338416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5441f49f0d39145927af1c965ebb10d"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aa5441f49f0d39145927af1c965ebb10d">err</a> ()</td></tr>
<tr class="separator:aa5441f49f0d39145927af1c965ebb10d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5318f51a63025d2ae8296cf3693ce98b"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a5318f51a63025d2ae8296cf3693ce98b">warn</a> ()</td></tr>
<tr class="separator:a5318f51a63025d2ae8296cf3693ce98b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4122055c247c2f58f5294939f52b0f18"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a4122055c247c2f58f5294939f52b0f18">getFileList</a> (const std::string &amp;path, const std::string &amp;extFilter=std::string())</td></tr>
<tr class="separator:a4122055c247c2f58f5294939f52b0f18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac325d14aa8357f78b51376ebb574bbb2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#ac325d14aa8357f78b51376ebb574bbb2">dirExists</a> (const std::string &amp;path)</td></tr>
<tr class="separator:ac325d14aa8357f78b51376ebb574bbb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f828af9e4aa5afe473aff8e3ebd878d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a4f828af9e4aa5afe473aff8e3ebd878d">fileExists</a> (const std::string &amp;path)</td></tr>
<tr class="separator:a4f828af9e4aa5afe473aff8e3ebd878d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef2742483f30326cf3067cf2fe041231"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aef2742483f30326cf3067cf2fe041231">createDir</a> (const std::string &amp;path, bool recreateExisting=false)</td></tr>
<tr class="separator:aef2742483f30326cf3067cf2fe041231"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bb2b25f2757a0953eb9328a8eef407f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a2bb2b25f2757a0953eb9328a8eef407f">removeDir</a> (const std::string &amp;path)</td></tr>
<tr class="separator:a2bb2b25f2757a0953eb9328a8eef407f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45ab45fa6561ede220568a76e9624f27"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a45ab45fa6561ede220568a76e9624f27">moveDir</a> (const std::string &amp;oldPath, const std::string &amp;newPath)</td></tr>
<tr class="separator:a45ab45fa6561ede220568a76e9624f27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1f9e6f7680b4ce82d7c77fd8910ab7e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aa1f9e6f7680b4ce82d7c77fd8910ab7e">endsWith</a> (const std::string &amp;s, const std::string &amp;ending)</td></tr>
<tr class="separator:aa1f9e6f7680b4ce82d7c77fd8910ab7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eac2819d89da7e0471c7ec220a78b21"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a3eac2819d89da7e0471c7ec220a78b21">processRegex</a> (const std::string &amp;s, const std::regex &amp;re, <a class="el" href="namespace_novel_tea.htm#aaa7a839aeec8bfbb464c3573cd23c151">RegexCallback</a> callback)</td></tr>
<tr class="separator:a3eac2819d89da7e0471c7ec220a78b21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea94029b4198b72e7f981752b1fb30ca"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aea94029b4198b72e7f981752b1fb30ca">replaceRegex</a> (const std::string &amp;s, const std::regex &amp;re, <a class="el" href="namespace_novel_tea.htm#a84e21ebafe2ac33c6b21333c338f39ea">RegexStringCallback</a> callback)</td></tr>
<tr class="separator:aea94029b4198b72e7f981752b1fb30ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a919617e580483d9b0eb96f70a7cb61"><td class="memItemLeft" align="right" valign="top">sf::Color&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a3a919617e580483d9b0eb96f70a7cb61">toColorSFML</a> (const <a class="el" href="struct_novel_tea_1_1_color.htm">Color</a> &amp;color)</td></tr>
<tr class="separator:a3a919617e580483d9b0eb96f70a7cb61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2085a068f2106753f38d1f4f8b77d8ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_novel_tea_1_1_color.htm">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a2085a068f2106753f38d1f4f8b77d8ef">fromColorSFML</a> (const sf::Color &amp;color)</td></tr>
<tr class="separator:a2085a068f2106753f38d1f4f8b77d8ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08840d254194d52baed37cca3ea1446d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a08840d254194d52baed37cca3ea1446d">wrapText</a> (sf::Text &amp;text, float width)</td></tr>
<tr class="separator:a08840d254194d52baed37cca3ea1446d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c2a187cf417c4f3247b7beb95b4185b"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a1c2a187cf417c4f3247b7beb95b4185b">split</a> (const std::string &amp;text, const std::string &amp;delimiter=&quot;\n&quot;)</td></tr>
<tr class="separator:a1c2a187cf417c4f3247b7beb95b4185b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a955748bc5fa099e560a88073df3329d9"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a955748bc5fa099e560a88073df3329d9">join</a> (const std::vector&lt; std::string &gt; &amp;words, const std::string &amp;delimiter=&quot;\n&quot;)</td></tr>
<tr class="separator:a955748bc5fa099e560a88073df3329d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4c7e9e75d20c27aabd92e5d6c053044"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aa4c7e9e75d20c27aabd92e5d6c053044">replace</a> (const std::string &amp;text, const std::string &amp;textToReplace, const std::string &amp;replacement=&quot;&quot;)</td></tr>
<tr class="separator:aa4c7e9e75d20c27aabd92e5d6c053044"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18b6c84681d5d152f1667000b41edbb3"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a18b6c84681d5d152f1667000b41edbb3">trimLeft</a> (const std::string &amp;text)</td></tr>
<tr class="separator:a18b6c84681d5d152f1667000b41edbb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a972ce50f6ef841cc1b0495782e3a9ee7"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a972ce50f6ef841cc1b0495782e3a9ee7">getFileContents</a> (const std::string &amp;filename)</td></tr>
<tr class="separator:a972ce50f6ef841cc1b0495782e3a9ee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaa6c0ea5d00ec1340499166a228b439"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#acaa6c0ea5d00ec1340499166a228b439">IsDigit</a> (char c)</td></tr>
<tr class="separator:acaa6c0ea5d00ec1340499166a228b439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34126f4b80348fa0e273f5fd3f762f5f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a34126f4b80348fa0e273f5fd3f762f5f">IsAlpha</a> (char c)</td></tr>
<tr class="separator:a34126f4b80348fa0e273f5fd3f762f5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf4162906a9090dbaa9d8a3d58651631"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#aaf4162906a9090dbaa9d8a3d58651631">IsAlNum</a> (char c)</td></tr>
<tr class="separator:aaf4162906a9090dbaa9d8a3d58651631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dd2ad192350f3e92f627152c14ca25f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a5dd2ad192350f3e92f627152c14ca25f">IsSpace</a> (char c)</td></tr>
<tr class="separator:a5dd2ad192350f3e92f627152c14ca25f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3a7d48f36917bc3af35a9a4bd1877ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7d">EntityType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#ac3a7d48f36917bc3af35a9a4bd1877ae">entityIdToType</a> (const std::string &amp;entityId)</td></tr>
<tr class="separator:ac3a7d48f36917bc3af35a9a4bd1877ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92b0222ea4557a08d2931a38892901b3"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a92b0222ea4557a08d2931a38892901b3">entityTypeToId</a> (<a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7d">EntityType</a> entityType)</td></tr>
<tr class="separator:a92b0222ea4557a08d2931a38892901b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a6f731feef4e29c5e98c86789b34af95b"><td class="memItemLeft" align="right" valign="top">const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_novel_tea.htm#a6f731feef4e29c5e98c86789b34af95b">strUseStrict</a> = &quot;\n\&quot;use strict\&quot;;\n&quot;</td></tr>
<tr class="separator:a6f731feef4e29c5e98c86789b34af95b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="aa22bbbe4395ba42853df5ddd2475fc00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa22bbbe4395ba42853df5ddd2475fc00">&#9670;&nbsp;</a></span>ActionBuilderCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#aa22bbbe4395ba42853df5ddd2475fc00">NovelTea::ActionBuilderCallback</a> = typedef std::function&lt;void(bool)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a595709ddf84a3ac4062d5c49812119e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a595709ddf84a3ac4062d5c49812119e3">&#9670;&nbsp;</a></span>ActiveTextCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a595709ddf84a3ac4062d5c49812119e3">NovelTea::ActiveTextCallback</a> = typedef std::function&lt;void()&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a032960598c1493876608a5a36168e3c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a032960598c1493876608a5a36168e3c1">&#9670;&nbsp;</a></span>cStrIter</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a032960598c1493876608a5a36168e3c1">NovelTea::cStrIter</a> = typedef std::string::const_iterator</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acb9ef5afa3188d5c9e401c9cae1bd00e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb9ef5afa3188d5c9e401c9cae1bd00e">&#9670;&nbsp;</a></span>DialogueCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::function&lt; void(int)&gt; <a class="el" href="namespace_novel_tea.htm#acb9ef5afa3188d5c9e401c9cae1bd00e">NovelTea::DialogueCallback</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad68f3e16fb72d342151159205ccbeac9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad68f3e16fb72d342151159205ccbeac9">&#9670;&nbsp;</a></span>EventFunc</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#ad68f3e16fb72d342151159205ccbeac9">NovelTea::EventFunc</a> = typedef std::function&lt;bool(const <a class="el" href="namespace_novel_tea.htm#a7dae6fe32adee38b3bfd2a13c4634147">EventPtr</a> &amp;event)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7dae6fe32adee38b3bfd2a13c4634147"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dae6fe32adee38b3bfd2a13c4634147">&#9670;&nbsp;</a></span>EventPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a7dae6fe32adee38b3bfd2a13c4634147">NovelTea::EventPtr</a> = typedef std::shared_ptr&lt;<a class="el" href="struct_novel_tea_1_1_event.htm">Event</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a90c9e3b9e240a1a74f84bdf1f46ad494"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90c9e3b9e240a1a74f84bdf1f46ad494">&#9670;&nbsp;</a></span>GetTextInputCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a90c9e3b9e240a1a74f84bdf1f46ad494">NovelTea::GetTextInputCallback</a> = typedef std::function&lt;void(const std::string&amp;)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6a22322d0fff36ce32131f8815a4290e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a22322d0fff36ce32131f8815a4290e">&#9670;&nbsp;</a></span>GetTextInputTrigger</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a6a22322d0fff36ce32131f8815a4290e">NovelTea::GetTextInputTrigger</a> = typedef std::function&lt;void(const std::string&amp;, int)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa6b43c591babef4ff8f9c9a0e102f766"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6b43c591babef4ff8f9c9a0e102f766">&#9670;&nbsp;</a></span>HideableCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#aa6b43c591babef4ff8f9c9a0e102f766">NovelTea::HideableCallback</a> = typedef std::function&lt;void(void)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3d74a9e0f4b34e86303e9fa4cb8208b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d74a9e0f4b34e86303e9fa4cb8208b4">&#9670;&nbsp;</a></span>InventoryCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a3d74a9e0f4b34e86303e9fa4cb8208b4">NovelTea::InventoryCallback</a> = typedef std::function&lt;void(const std::string&amp;, float, float)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8400be0e71a7b924aa5cd9a23847629b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8400be0e71a7b924aa5cd9a23847629b">&#9670;&nbsp;</a></span>MessageCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a8400be0e71a7b924aa5cd9a23847629b">NovelTea::MessageCallback</a> = typedef std::function&lt;void(const std::vector&lt;std::string&gt; &amp;messageArray, const DukValue &amp;callback)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adccdae7ba18db468d8f3f5f9a5609e6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adccdae7ba18db468d8f3f5f9a5609e6d">&#9670;&nbsp;</a></span>NavigationCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#adccdae7ba18db468d8f3f5f9a5609e6d">NovelTea::NavigationCallback</a> = typedef std::function&lt;void(int direction, const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a> &amp;jentity)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa7a839aeec8bfbb464c3573cd23c151"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa7a839aeec8bfbb464c3573cd23c151">&#9670;&nbsp;</a></span>RegexCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#aaa7a839aeec8bfbb464c3573cd23c151">NovelTea::RegexCallback</a> = typedef std::function&lt;void(const <a class="el" href="namespace_novel_tea.htm#a9ff16c39312e221dc8c1ff837ebb115c">RegexIterator</a>&amp;)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9ff16c39312e221dc8c1ff837ebb115c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ff16c39312e221dc8c1ff837ebb115c">&#9670;&nbsp;</a></span>RegexIterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a9ff16c39312e221dc8c1ff837ebb115c">NovelTea::RegexIterator</a> = typedef std::sregex_iterator</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a84e21ebafe2ac33c6b21333c338f39ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84e21ebafe2ac33c6b21333c338f39ea">&#9670;&nbsp;</a></span>RegexStringCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a84e21ebafe2ac33c6b21333c338f39ea">NovelTea::RegexStringCallback</a> = typedef std::function&lt;std::string(const <a class="el" href="namespace_novel_tea.htm#a9ff16c39312e221dc8c1ff837ebb115c">RegexIterator</a>&amp;)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6332cc6379c2fd96eb44d7dfdbb77915"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6332cc6379c2fd96eb44d7dfdbb77915">&#9670;&nbsp;</a></span>StateCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::function&lt;bool(void*)&gt; <a class="el" href="namespace_novel_tea.htm#a6332cc6379c2fd96eb44d7dfdbb77915">NovelTea::StateCallback</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9946ac1f322d4275b594e4c59f615d65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9946ac1f322d4275b594e4c59f615d65">&#9670;&nbsp;</a></span>TestCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#a9946ac1f322d4275b594e4c59f615d65">NovelTea::TestCallback</a> = typedef std::function&lt;bool(const <a class="el" href="_json_serializable_8hpp.htm#afbb185ae5d5c0ac35325c1c89fa4392d">json</a>&amp;)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5c4762806aa498dbaa8df1ec8284d226"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c4762806aa498dbaa8df1ec8284d226">&#9670;&nbsp;</a></span>TweenCircleShape</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a>&lt;sf::CircleShape&gt; <a class="el" href="namespace_novel_tea.htm#a5c4762806aa498dbaa8df1ec8284d226">NovelTea::TweenCircleShape</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6069a4269f61f24aab9b7ffef0526015"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6069a4269f61f24aab9b7ffef0526015">&#9670;&nbsp;</a></span>TweenConvexShape</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a>&lt;sf::ConvexShape&gt; <a class="el" href="namespace_novel_tea.htm#a6069a4269f61f24aab9b7ffef0526015">NovelTea::TweenConvexShape</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6add2c8edddf2a8b8b1ca9b47dece23e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6add2c8edddf2a8b8b1ca9b47dece23e">&#9670;&nbsp;</a></span>TweenNinePatch</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="class_novel_tea_1_1_tween_color_transformable.htm">TweenColorTransformable</a>&lt;<a class="el" href="class_novel_tea_1_1_nine_patch.htm">NinePatch</a>&gt; <a class="el" href="namespace_novel_tea.htm#a6add2c8edddf2a8b8b1ca9b47dece23e">NovelTea::TweenNinePatch</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5f8566ae9ca1e61d521120eb028d33f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f8566ae9ca1e61d521120eb028d33f7">&#9670;&nbsp;</a></span>TweenRectangleShape</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a>&lt;sf::RectangleShape&gt; <a class="el" href="namespace_novel_tea.htm#a5f8566ae9ca1e61d521120eb028d33f7">NovelTea::TweenRectangleShape</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac955f4f25e49b90cf0720ac8b0cb3f36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac955f4f25e49b90cf0720ac8b0cb3f36">&#9670;&nbsp;</a></span>TweenSprite</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="class_novel_tea_1_1_tween_color_transformable.htm">TweenColorTransformable</a>&lt;sf::Sprite&gt; <a class="el" href="namespace_novel_tea.htm#ac955f4f25e49b90cf0720ac8b0cb3f36">NovelTea::TweenSprite</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a86872f212dd9dce44234da3d9eb2ea0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86872f212dd9dce44234da3d9eb2ea0c">&#9670;&nbsp;</a></span>TweenText</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="class_novel_tea_1_1_tween_shape.htm">TweenShape</a>&lt;sf::Text&gt; <a class="el" href="namespace_novel_tea.htm#a86872f212dd9dce44234da3d9eb2ea0c">NovelTea::TweenText</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af98824359f71b3fea7381c6e3e5d9d66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af98824359f71b3fea7381c6e3e5d9d66">&#9670;&nbsp;</a></span>VerbSelectCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#af98824359f71b3fea7381c6e3e5d9d66">NovelTea::VerbSelectCallback</a> = typedef std::function&lt;void(const std::string&amp;)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab975fdbb1cbaaf17bce0add6221df8b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab975fdbb1cbaaf17bce0add6221df8b8">&#9670;&nbsp;</a></span>VerbShowHideCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespace_novel_tea.htm#ab975fdbb1cbaaf17bce0add6221df8b8">NovelTea::VerbShowHideCallback</a> = typedef std::function&lt;void(bool)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a9760f0bb1f9a70ac16f072f5fefdbd50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9760f0bb1f9a70ac16f072f5fefdbd50">&#9670;&nbsp;</a></span>ConnectionStyle</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#a9760f0bb1f9a70ac16f072f5fefdbd50">NovelTea::ConnectionStyle</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a9760f0bb1f9a70ac16f072f5fefdbd50a6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a0bae4b05baaa9aba1550ca9d07fa7732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bae4b05baaa9aba1550ca9d07fa7732">&#9670;&nbsp;</a></span>DialogueTextLogMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#a0bae4b05baaa9aba1550ca9d07fa7732">NovelTea::DialogueTextLogMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a0bae4b05baaa9aba1550ca9d07fa7732af80a4ad87fee7c9fdc19b7769495fdb5"></a>Nothing&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a0bae4b05baaa9aba1550ca9d07fa7732a709468af25e91284821d1bdbfdded24c"></a>Everything&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a0bae4b05baaa9aba1550ca9d07fa7732a837e244e2ed74f9739cd9cad478800f1"></a>OnlyText&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a0bae4b05baaa9aba1550ca9d07fa7732a2d4e1895d2a6d71cc1ca1159ac375b39"></a>OnlyOptions&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="afc862942f212ad68abbafde6900a2136"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc862942f212ad68abbafde6900a2136">&#9670;&nbsp;</a></span>EntityMode</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#afc862942f212ad68abbafde6900a2136">NovelTea::EntityMode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="afc862942f212ad68abbafde6900a2136af3a228109647d30df280a3da4d2e8ab8"></a>ModeNothing&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="afc862942f212ad68abbafde6900a2136ab3ecc24d3dcac816dec1fcbb498c0566"></a>ModeCutscene&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="afc862942f212ad68abbafde6900a2136abdfd5d1e3d4077aee8a007ec36732dc2"></a>ModeDialogue&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="afc862942f212ad68abbafde6900a2136a3216ca58a977f84c1983a0277709ddfa"></a>ModeRoom&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a5381682340cba7b8607b8d07dc135f7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5381682340cba7b8607b8d07dc135f7d">&#9670;&nbsp;</a></span>EntityType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7d">NovelTea::EntityType</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7da4bbb8f967da6d1a610596d7257179c2b"></a>Invalid&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7da3e7683f51af33ba15b5abc5b1907621f"></a>CustomScript&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7dacc0fb4be485eda00316d2aa8284ca80e"></a>Cutscene&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7da004bf6c9a40003140292e97330236c53"></a>Action&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7dacc3abcf4426bff80257d22999d0eda8f"></a>Room&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7da497031794414a552435f90151ac3b54b"></a>Object&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7da359928afdf6c973ee869e1698023a812"></a>Dialogue&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7daf907e651164789346ae0a1e257c462d8"></a>Script&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7dadcfc313589935306402ea9ee3c7647f8"></a>Verb&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5381682340cba7b8607b8d07dc135f7da46f3ea056caa3126b91f3f70beea068c"></a>Map&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="ad7b8f2ebc9a2797537b08e72b7782509"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7b8f2ebc9a2797537b08e72b7782509">&#9670;&nbsp;</a></span>FontStyle</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#ad7b8f2ebc9a2797537b08e72b7782509">NovelTea::FontStyle</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ad7b8f2ebc9a2797537b08e72b7782509a50d1ccf93e69b1447fa8c624cb40a5fc"></a>FontRegular&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad7b8f2ebc9a2797537b08e72b7782509af914ec33218802919eb6d2840197f6c1"></a>FontBold&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad7b8f2ebc9a2797537b08e72b7782509af34bf1b27dd6ebe368b2ac7ad2ce8bd7"></a>FontItalic&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad7b8f2ebc9a2797537b08e72b7782509aa968e57c90b8e0b6443790ca6c2f9fc9"></a>FontUnderlined&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad7b8f2ebc9a2797537b08e72b7782509a6712cecd9589c77ab39154c15471f766"></a>FontStrikeThrough&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a4afa9f202e98b4102427f3834216b310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4afa9f202e98b4102427f3834216b310">&#9670;&nbsp;</a></span>RoomStyle</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#a4afa9f202e98b4102427f3834216b310">NovelTea::RoomStyle</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a4afa9f202e98b4102427f3834216b310a78f0192ac55eba33ee88d026452952e5"></a>Borderless&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4afa9f202e98b4102427f3834216b310a0b9a5b312800284bcc8a22260fdf9905"></a>SolidBorder&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4afa9f202e98b4102427f3834216b310a8ad9c938fb441ddc8d53f001e6ef7374"></a>DashedBorder&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a94b50755dd30fb7991da65827cf23acc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94b50755dd30fb7991da65827cf23acc">&#9670;&nbsp;</a></span>StateEditorMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#a94b50755dd30fb7991da65827cf23acc">NovelTea::StateEditorMode</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a94b50755dd30fb7991da65827cf23accaf80a4ad87fee7c9fdc19b7769495fdb5"></a>Nothing&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a94b50755dd30fb7991da65827cf23accacc0fb4be485eda00316d2aa8284ca80e"></a>Cutscene&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a94b50755dd30fb7991da65827cf23accacc3abcf4426bff80257d22999d0eda8f"></a>Room&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a94b50755dd30fb7991da65827cf23acca359928afdf6c973ee869e1698023a812"></a>Dialogue&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a94b50755dd30fb7991da65827cf23acca46f3ea056caa3126b91f3f70beea068c"></a>Map&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a94b50755dd30fb7991da65827cf23acca0cbc6611f5540bd0809a388dc95a615b"></a>Test&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a94b50755dd30fb7991da65827cf23acca9dffbf69ffba8bc38bc4e01abf4b1675"></a>Text&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a94b50755dd30fb7991da65827cf23accaa88a92f4a0e793589f2341851a15c660"></a>Shader&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="ae726afc03bdac1a8fe741b951ec21ec9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae726afc03bdac1a8fe741b951ec21ec9">&#9670;&nbsp;</a></span>StateID</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#ae726afc03bdac1a8fe741b951ec21ec9">NovelTea::StateID</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9a6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9a344a7f427fb765610ef96eb7bce95257"></a>Editor&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9a1cad35d4b3b9f624f82dbf237daaf188"></a>Intro&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9aa02c83a7dbd96295beaefb72c2bee2de"></a>Main&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9a996d4ed64c20252014d16367ac6e197b"></a>ProfileManager&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9af4f70727dc34561dfde1a3c529b6205c"></a>Settings&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9a6c471c236f33c863cdc13aa89c8e5809"></a>TextLog&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9a1fe184dc79d61c587e316a722ac8d4b6"></a>TextSettings&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae726afc03bdac1a8fe741b951ec21ec9a19cbf12edccab4b14c7ae28487c48abf"></a>TitleScreen&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="adbfbb627059d9609d465f3f24178f98e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbfbb627059d9609d465f3f24178f98e">&#9670;&nbsp;</a></span>TextEffect</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#adbfbb627059d9609d465f3f24178f98e">NovelTea::TextEffect</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98ea6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98ea04e0385c10aefee8e4681617d2f3ef40"></a>Fade&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98ead814587e313c806827f269dfc7796cc6"></a>FadeAcross&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98eab20024ea3ba53768598d242981872153"></a>Glow&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98ea29af0158024ddda3becc3c6e3d6ece78"></a>Nod&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98ea968818e489bac02c58d8b0e5a348a229"></a>Shake&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98ea0cbc6611f5540bd0809a388dc95a615b"></a>Test&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98eacc8d6e396846c0cf1bc30218d4b62305"></a>Tremble&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adbfbb627059d9609d465f3f24178f98ea0ae61bd0474e04c9f1195d4baa0213a0"></a>Pop&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a9ddf2522f71162d9cee9a1ab68064837"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ddf2522f71162d9cee9a1ab68064837">&#9670;&nbsp;</a></span>TextLogType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#a9ddf2522f71162d9cee9a1ab68064837">NovelTea::TextLogType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a9ddf2522f71162d9cee9a1ab68064837acc0fb4be485eda00316d2aa8284ca80e"></a>Cutscene&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ddf2522f71162d9cee9a1ab68064837ac731bf37fcc749df0842900fac27d0cd"></a>DialogueOption&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ddf2522f71162d9cee9a1ab68064837a15ffd8f24f320e11dcf5766c05af4f6b"></a>DialogueText&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ddf2522f71162d9cee9a1ab68064837a3e51183005f7ff21ae11806df1634da9"></a>DialogueTextName&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ddf2522f71162d9cee9a1ab68064837a96d008db67fc0b5551a926842bbb6a71"></a>Notification&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ddf2522f71162d9cee9a1ab68064837af907e651164789346ae0a1e257c462d8"></a>Script&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ddf2522f71162d9cee9a1ab68064837aaf7ecfdf01e941f3d3c820e6bea1fdb0"></a>TextOverlay&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a4bcbf6af3413bd57ade590e7d9df7c09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bcbf6af3413bd57ade590e7d9df7c09">&#9670;&nbsp;</a></span>TextStyleType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespace_novel_tea.htm#a4bcbf6af3413bd57ade590e7d9df7c09">NovelTea::TextStyleType</a> : int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09ad6b6b668dbca9d4fe774bb654226ebe3"></a>Animation&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a114c3050111d8b8ddd830b99ccebd246"></a>Bold&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a7bd17539279d7a0357fe1796aee9897a"></a>BorderColor&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09adce6086d9dd6c76181e50be5b0dffcfa"></a>BorderSize&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09acb5feb1b7314637725a2e73bdc9f7295"></a>Color&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a49630f5d7723e9b41474bd1cb1887b9d"></a>Diff&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a194f5394ae2e9c74dc3c441b92862d1d"></a>Font&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a1d874710ccdcd46b95397049d2e7500c"></a>Italic&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a497031794414a552435f90151ac3b54b"></a>Object&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a7a2d17b6830dc3da68d92745c288b54f"></a>PBreak&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a6f6cb72d544962fa333e2e34ce64f719"></a>Size&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09aa88a92f4a0e793589f2341851a15c660"></a>Shader&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09aa5bab48c638e7fbf3caf002715fa8e78"></a>XOffset&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4bcbf6af3413bd57ade590e7d9df7c09a97e4c4a525b09e3e3f10bb25e2167d61"></a>YOffset&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="aef2742483f30326cf3067cf2fe041231"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef2742483f30326cf3067cf2fe041231">&#9670;&nbsp;</a></span>createDir()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::createDir </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>recreateExisting</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9dfd0a00f6268a053f14fd3b41c680a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dfd0a00f6268a053f14fd3b41c680a3">&#9670;&nbsp;</a></span>diff()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::diff </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>oldString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>newString</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac325d14aa8357f78b51376ebb574bbb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac325d14aa8357f78b51376ebb574bbb2">&#9670;&nbsp;</a></span>dirExists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::dirExists </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa1f9e6f7680b4ce82d7c77fd8910ab7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1f9e6f7680b4ce82d7c77fd8910ab7e">&#9670;&nbsp;</a></span>endsWith()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::endsWith </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>ending</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac3a7d48f36917bc3af35a9a4bd1877ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3a7d48f36917bc3af35a9a4bd1877ae">&#9670;&nbsp;</a></span>entityIdToType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7d">EntityType</a> NovelTea::entityIdToType </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>entityId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a92b0222ea4557a08d2931a38892901b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92b0222ea4557a08d2931a38892901b3">&#9670;&nbsp;</a></span>entityTypeToId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::entityTypeToId </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_novel_tea.htm#a5381682340cba7b8607b8d07dc135f7d">EntityType</a>&#160;</td>
          <td class="paramname"><em>entityType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa5441f49f0d39145927af1c965ebb10d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5441f49f0d39145927af1c965ebb10d">&#9670;&nbsp;</a></span>err()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; NovelTea::err </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4f828af9e4aa5afe473aff8e3ebd878d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f828af9e4aa5afe473aff8e3ebd878d">&#9670;&nbsp;</a></span>fileExists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::fileExists </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2085a068f2106753f38d1f4f8b77d8ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2085a068f2106753f38d1f4f8b77d8ef">&#9670;&nbsp;</a></span>fromColorSFML()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_novel_tea_1_1_color.htm">Color</a> NovelTea::fromColorSFML </td>
          <td>(</td>
          <td class="paramtype">const sf::Color &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a972ce50f6ef841cc1b0495782e3a9ee7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a972ce50f6ef841cc1b0495782e3a9ee7">&#9670;&nbsp;</a></span>getFileContents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::getFileContents </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4122055c247c2f58f5294939f52b0f18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4122055c247c2f58f5294939f52b0f18">&#9670;&nbsp;</a></span>getFileList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; NovelTea::getFileList </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>extFilter</em> = <code>std::string()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf4162906a9090dbaa9d8a3d58651631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf4162906a9090dbaa9d8a3d58651631">&#9670;&nbsp;</a></span>IsAlNum()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::IsAlNum </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a34126f4b80348fa0e273f5fd3f762f5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34126f4b80348fa0e273f5fd3f762f5f">&#9670;&nbsp;</a></span>IsAlpha()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::IsAlpha </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acaa6c0ea5d00ec1340499166a228b439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acaa6c0ea5d00ec1340499166a228b439">&#9670;&nbsp;</a></span>IsDigit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::IsDigit </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5dd2ad192350f3e92f627152c14ca25f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5dd2ad192350f3e92f627152c14ca25f">&#9670;&nbsp;</a></span>IsSpace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::IsSpace </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a955748bc5fa099e560a88073df3329d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a955748bc5fa099e560a88073df3329d9">&#9670;&nbsp;</a></span>join()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::join </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>words</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>delimiter</em> = <code>&quot;\n&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a45ab45fa6561ede220568a76e9624f27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45ab45fa6561ede220568a76e9624f27">&#9670;&nbsp;</a></span>moveDir()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::moveDir </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>oldPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>newPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3eac2819d89da7e0471c7ec220a78b21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3eac2819d89da7e0471c7ec220a78b21">&#9670;&nbsp;</a></span>processRegex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NovelTea::processRegex </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::regex &amp;&#160;</td>
          <td class="paramname"><em>re</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_novel_tea.htm#aaa7a839aeec8bfbb464c3573cd23c151">RegexCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2bb2b25f2757a0953eb9328a8eef407f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bb2b25f2757a0953eb9328a8eef407f">&#9670;&nbsp;</a></span>removeDir()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::removeDir </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4c7e9e75d20c27aabd92e5d6c053044"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4c7e9e75d20c27aabd92e5d6c053044">&#9670;&nbsp;</a></span>replace()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::replace </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>textToReplace</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aea94029b4198b72e7f981752b1fb30ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea94029b4198b72e7f981752b1fb30ca">&#9670;&nbsp;</a></span>replaceRegex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::replaceRegex </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::regex &amp;&#160;</td>
          <td class="paramname"><em>re</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_novel_tea.htm#a84e21ebafe2ac33c6b21333c338f39ea">RegexStringCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1c2a187cf417c4f3247b7beb95b4185b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c2a187cf417c4f3247b7beb95b4185b">&#9670;&nbsp;</a></span>split()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; NovelTea::split </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>delimiter</em> = <code>&quot;\n&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa6f29e0701094f96e63e4452f338416"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa6f29e0701094f96e63e4452f338416">&#9670;&nbsp;</a></span>stripDiff()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::stripDiff </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>diffString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a919617e580483d9b0eb96f70a7cb61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a919617e580483d9b0eb96f70a7cb61">&#9670;&nbsp;</a></span>toColorSFML()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Color NovelTea::toColorSFML </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_novel_tea_1_1_color.htm">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a18b6c84681d5d152f1667000b41edbb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18b6c84681d5d152f1667000b41edbb3">&#9670;&nbsp;</a></span>trimLeft()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string NovelTea::trimLeft </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5318f51a63025d2ae8296cf3693ce98b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5318f51a63025d2ae8296cf3693ce98b">&#9670;&nbsp;</a></span>warn()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; NovelTea::warn </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a08840d254194d52baed37cca3ea1446d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08840d254194d52baed37cca3ea1446d">&#9670;&nbsp;</a></span>wrapText()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NovelTea::wrapText </td>
          <td>(</td>
          <td class="paramtype">sf::Text &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a6f731feef4e29c5e98c86789b34af95b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f731feef4e29c5e98c86789b34af95b">&#9670;&nbsp;</a></span>strUseStrict</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string NovelTea::strUseStrict = &quot;\n\&quot;use strict\&quot;;\n&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_novel_tea.htm">NovelTea</a></li>
    <li class="footer">NovelTea Copyright &copy; Thomas Edvalson</li>
  </ul>
</div>
</body>
</html>
